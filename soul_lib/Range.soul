typeEnum Float              typeof[f32, f64]
typeEnum Interger 			typeof[int, i8, i16, i32, i64]
typeEnum Uinterger 			typeof[uint, u8, u16, u32, u64]

typeEnum Number 			typeof[Interger, Uinterger, Float]
typeEnum FloatLessNumber	typeof[Interger, Uinterger]

class Range<T: Number> {
	T start {Get; set;}
	T end {Get; set;}

	Ctor(this.start, this.end) { }

	impl<R: Number> To<Range<R>>{

		cast(this@) Range<R> {
			return Range(this.start.As<R>(), this.end.As<R>())
		}
	}

    impl Add<Range<T>> {

        Add(this@, Range<T>@ other) Range<T> {
            return Range(
                this.start.min(other.start), 
                this.end.max(other.end)
            )
        }
    }
}

Range<T: Number> impl<R: Number> To<Range<R>> {

}






