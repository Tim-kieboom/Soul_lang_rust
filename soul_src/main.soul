use soul_src::std::test::Union

const v = Union::One(1)
// const globalVariant = soul_src::std::test::Union::One(1)
const arg = this::std::test::GlobalVar
// const arg2 = this::std::test::WrongVar


main() {
    union Or{One(int)}
    v := Or::One(1)

    // variant := soul_src::std::test::Union::One(1)

    arg := this::std::test::GlobalVar
    sum := this::std::test::Sum(1, 2)
    this::std::test::MyPrintln("hello")
    this::std::test::TestType foo = 1

    arr := [for i in this::std::test::GlobalVar => i]

    // Println(f"hello {sum}")
} 
  
   

using() {
    use this::std
    use std::test
    use test::Union
    use test::[TestType, Sum]
    use this::std::otherTest::[this, Public]

    one := Union::One(1)
    one = test::Union::One(1)
    TestType ty = 1
    test::TestType ty2 = 1
    res := Sum(1,2)
}



