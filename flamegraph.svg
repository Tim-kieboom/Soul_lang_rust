<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1318" onload="init(evt)" viewBox="0 0 1200 1318" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1318" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1301.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1301.00"> </text><svg id="frames" x="10" width="1180" total_samples="53"><g><title>`0x7FFFAD2A3D35 (1 samples, 1.89%)</title><rect x="0.0000%" y="1205" width="1.8868%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1215.50">`..</text></g><g><title>`0x7FFFAD275062 (1 samples, 1.89%)</title><rect x="0.0000%" y="1189" width="1.8868%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1199.50">`..</text></g><g><title>`0x7FFFAD27570C (1 samples, 1.89%)</title><rect x="0.0000%" y="1173" width="1.8868%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1183.50">`..</text></g><g><title>`0x7FFFAD3A1D44 (1 samples, 1.89%)</title><rect x="0.0000%" y="1157" width="1.8868%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1167.50">`..</text></g><g><title>`0x7FFFAD2A44CB (1 samples, 1.89%)</title><rect x="1.8868%" y="1205" width="1.8868%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="2.1368%" y="1215.50">`..</text></g><g><title>`0x7FFFAD2C8A23 (1 samples, 1.89%)</title><rect x="1.8868%" y="1189" width="1.8868%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="2.1368%" y="1199.50">`..</text></g><g><title>`0x7FFFAD2C8ACA (1 samples, 1.89%)</title><rect x="1.8868%" y="1173" width="1.8868%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="2.1368%" y="1183.50">`..</text></g><g><title>`0x7FFFAD2A46BB (1 samples, 1.89%)</title><rect x="3.7736%" y="1205" width="1.8868%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="4.0236%" y="1215.50">`..</text></g><g><title>`0x7FFFAD276273 (1 samples, 1.89%)</title><rect x="3.7736%" y="1189" width="1.8868%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="4.0236%" y="1199.50">`..</text></g><g><title>`0x7FFFAD277E9F (1 samples, 1.89%)</title><rect x="3.7736%" y="1173" width="1.8868%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="1"/><text x="4.0236%" y="1183.50">`..</text></g><g><title>`0x7FFFAD27895A (1 samples, 1.89%)</title><rect x="3.7736%" y="1157" width="1.8868%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="1"/><text x="4.0236%" y="1167.50">`..</text></g><g><title>`0x7FFFAD3A5494 (1 samples, 1.89%)</title><rect x="3.7736%" y="1141" width="1.8868%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="1"/><text x="4.0236%" y="1151.50">`..</text></g><g><title>`0x7FFFAD2A4706 (1 samples, 1.89%)</title><rect x="5.6604%" y="1205" width="1.8868%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="1"/><text x="5.9104%" y="1215.50">`..</text></g><g><title>`0x7FFFAD32D5C3 (1 samples, 1.89%)</title><rect x="5.6604%" y="1189" width="1.8868%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="1"/><text x="5.9104%" y="1199.50">`..</text></g><g><title>`0x7FFFAD2F5D1E (1 samples, 1.89%)</title><rect x="5.6604%" y="1173" width="1.8868%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="1"/><text x="5.9104%" y="1183.50">`..</text></g><g><title>`0x7FFFAD2F7B34 (1 samples, 1.89%)</title><rect x="5.6604%" y="1157" width="1.8868%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="1"/><text x="5.9104%" y="1167.50">`..</text></g><g><title>`0x7FFFAD2F8782 (1 samples, 1.89%)</title><rect x="5.6604%" y="1141" width="1.8868%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="1"/><text x="5.9104%" y="1151.50">`..</text></g><g><title>`0x7FFFAD2F88DA (1 samples, 1.89%)</title><rect x="5.6604%" y="1125" width="1.8868%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="1"/><text x="5.9104%" y="1135.50">`..</text></g><g><title>`0x7FFFAD2F8CA2 (1 samples, 1.89%)</title><rect x="5.6604%" y="1109" width="1.8868%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="1"/><text x="5.9104%" y="1119.50">`..</text></g><g><title>`0x7FFFAD2A4FFD (1 samples, 1.89%)</title><rect x="7.5472%" y="1205" width="1.8868%" height="15" fill="rgb(226,26,5)" fg:x="4" fg:w="1"/><text x="7.7972%" y="1215.50">`..</text></g><g><title>`0x7FFFAD30B33F (1 samples, 1.89%)</title><rect x="7.5472%" y="1189" width="1.8868%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="1"/><text x="7.7972%" y="1199.50">`..</text></g><g><title>`0x7FFFAD30B1B0 (1 samples, 1.89%)</title><rect x="7.5472%" y="1173" width="1.8868%" height="15" fill="rgb(235,183,28)" fg:x="4" fg:w="1"/><text x="7.7972%" y="1183.50">`..</text></g><g><title>`0x7FFFAD3A2164 (1 samples, 1.89%)</title><rect x="7.5472%" y="1157" width="1.8868%" height="15" fill="rgb(221,5,38)" fg:x="4" fg:w="1"/><text x="7.7972%" y="1167.50">`..</text></g><g><title>`0x7FFFAD249CD3 (1 samples, 1.89%)</title><rect x="9.4340%" y="1077" width="1.8868%" height="15" fill="rgb(247,18,42)" fg:x="5" fg:w="1"/><text x="9.6840%" y="1087.50">`..</text></g><g><title>`0x7FFFAD3A7BA9 (1 samples, 1.89%)</title><rect x="9.4340%" y="1061" width="1.8868%" height="15" fill="rgb(241,131,45)" fg:x="5" fg:w="1"/><text x="9.6840%" y="1071.50">`..</text></g><g><title>`0x7FFFAD248842 (2 samples, 3.77%)</title><rect x="9.4340%" y="1141" width="3.7736%" height="15" fill="rgb(249,31,29)" fg:x="5" fg:w="2"/><text x="9.6840%" y="1151.50">`0x7..</text></g><g><title>`0x7FFFAD24D255 (2 samples, 3.77%)</title><rect x="9.4340%" y="1125" width="3.7736%" height="15" fill="rgb(225,111,53)" fg:x="5" fg:w="2"/><text x="9.6840%" y="1135.50">`0x7..</text></g><g><title>`0x7FFFAD2AB611 (2 samples, 3.77%)</title><rect x="9.4340%" y="1109" width="3.7736%" height="15" fill="rgb(238,160,17)" fg:x="5" fg:w="2"/><text x="9.6840%" y="1119.50">`0x7..</text></g><g><title>`0x7FFFAD2ABBB8 (2 samples, 3.77%)</title><rect x="9.4340%" y="1093" width="3.7736%" height="15" fill="rgb(214,148,48)" fg:x="5" fg:w="2"/><text x="9.6840%" y="1103.50">`0x7..</text></g><g><title>`0x7FFFAD249F82 (1 samples, 1.89%)</title><rect x="11.3208%" y="1077" width="1.8868%" height="15" fill="rgb(232,36,49)" fg:x="6" fg:w="1"/><text x="11.5708%" y="1087.50">`..</text></g><g><title>`0x7FFFAD293C8A (1 samples, 1.89%)</title><rect x="11.3208%" y="1061" width="1.8868%" height="15" fill="rgb(209,103,24)" fg:x="6" fg:w="1"/><text x="11.5708%" y="1071.50">`..</text></g><g><title>`0x7FFFAA549101 (1 samples, 1.89%)</title><rect x="13.2075%" y="1029" width="1.8868%" height="15" fill="rgb(229,88,8)" fg:x="7" fg:w="1"/><text x="13.4575%" y="1039.50">`..</text></g><g><title>`0x7FFFAD26FEA8 (1 samples, 1.89%)</title><rect x="13.2075%" y="1013" width="1.8868%" height="15" fill="rgb(213,181,19)" fg:x="7" fg:w="1"/><text x="13.4575%" y="1023.50">`..</text></g><g><title>`0x7FFFAD27082B (1 samples, 1.89%)</title><rect x="13.2075%" y="997" width="1.8868%" height="15" fill="rgb(254,191,54)" fg:x="7" fg:w="1"/><text x="13.4575%" y="1007.50">`..</text></g><g><title>`0x7FFFAD3A21E4 (1 samples, 1.89%)</title><rect x="13.2075%" y="981" width="1.8868%" height="15" fill="rgb(241,83,37)" fg:x="7" fg:w="1"/><text x="13.4575%" y="991.50">`..</text></g><g><title>`0x7FFFAA622E8D (2 samples, 3.77%)</title><rect x="13.2075%" y="1045" width="3.7736%" height="15" fill="rgb(233,36,39)" fg:x="7" fg:w="2"/><text x="13.4575%" y="1055.50">`0x7..</text></g><g><title>`0x7FFFAA54934E (1 samples, 1.89%)</title><rect x="15.0943%" y="1029" width="1.8868%" height="15" fill="rgb(226,3,54)" fg:x="8" fg:w="1"/><text x="15.3443%" y="1039.50">`..</text></g><g><title>`0x7FFFAA546810 (1 samples, 1.89%)</title><rect x="15.0943%" y="1013" width="1.8868%" height="15" fill="rgb(245,192,40)" fg:x="8" fg:w="1"/><text x="15.3443%" y="1023.50">`..</text></g><g><title>`0x7FFFAA600C80 (1 samples, 1.89%)</title><rect x="15.0943%" y="997" width="1.8868%" height="15" fill="rgb(238,167,29)" fg:x="8" fg:w="1"/><text x="15.3443%" y="1007.50">`..</text></g><g><title>`0x7FFFAD3A25A4 (1 samples, 1.89%)</title><rect x="15.0943%" y="981" width="1.8868%" height="15" fill="rgb(232,182,51)" fg:x="8" fg:w="1"/><text x="15.3443%" y="991.50">`..</text></g><g><title>`0x7FFFAA622EF1 (1 samples, 1.89%)</title><rect x="16.9811%" y="1045" width="1.8868%" height="15" fill="rgb(231,60,39)" fg:x="9" fg:w="1"/><text x="17.2311%" y="1055.50">`..</text></g><g><title>`0x7FFFAA5914AE (1 samples, 1.89%)</title><rect x="16.9811%" y="1029" width="1.8868%" height="15" fill="rgb(208,69,12)" fg:x="9" fg:w="1"/><text x="17.2311%" y="1039.50">`..</text></g><g><title>`0x7FFFAA591D9F (1 samples, 1.89%)</title><rect x="16.9811%" y="1013" width="1.8868%" height="15" fill="rgb(235,93,37)" fg:x="9" fg:w="1"/><text x="17.2311%" y="1023.50">`..</text></g><g><title>`0x7FFFAA61303C (1 samples, 1.89%)</title><rect x="16.9811%" y="997" width="1.8868%" height="15" fill="rgb(213,116,39)" fg:x="9" fg:w="1"/><text x="17.2311%" y="1007.50">`..</text></g><g><title>`0x7FFFAD31B734 (6 samples, 11.32%)</title><rect x="9.4340%" y="1189" width="11.3208%" height="15" fill="rgb(222,207,29)" fg:x="5" fg:w="6"/><text x="9.6840%" y="1199.50">`0x7FFFAD31B734</text></g><g><title>`0x7FFFAD295D80 (6 samples, 11.32%)</title><rect x="9.4340%" y="1173" width="11.3208%" height="15" fill="rgb(206,96,30)" fg:x="5" fg:w="6"/><text x="9.6840%" y="1183.50">`0x7FFFAD295D80</text></g><g><title>`0x7FFFAD2484E0 (6 samples, 11.32%)</title><rect x="9.4340%" y="1157" width="11.3208%" height="15" fill="rgb(218,138,4)" fg:x="5" fg:w="6"/><text x="9.6840%" y="1167.50">`0x7FFFAD2484E0</text></g><g><title>`0x7FFFAD2488D4 (4 samples, 7.55%)</title><rect x="13.2075%" y="1141" width="7.5472%" height="15" fill="rgb(250,191,14)" fg:x="7" fg:w="4"/><text x="13.4575%" y="1151.50">`0x7FFFAD2..</text></g><g><title>`0x7FFFAD27AE03 (4 samples, 7.55%)</title><rect x="13.2075%" y="1125" width="7.5472%" height="15" fill="rgb(239,60,40)" fg:x="7" fg:w="4"/><text x="13.4575%" y="1135.50">`0x7FFFAD2..</text></g><g><title>`0x7FFFAD27BCA6 (4 samples, 7.55%)</title><rect x="13.2075%" y="1109" width="7.5472%" height="15" fill="rgb(206,27,48)" fg:x="7" fg:w="4"/><text x="13.4575%" y="1119.50">`0x7FFFAD2..</text></g><g><title>`0x7FFFAD27BC7A (4 samples, 7.55%)</title><rect x="13.2075%" y="1093" width="7.5472%" height="15" fill="rgb(225,35,8)" fg:x="7" fg:w="4"/><text x="13.4575%" y="1103.50">`0x7FFFAD2..</text></g><g><title>`0x7FFFAD2B193C (4 samples, 7.55%)</title><rect x="13.2075%" y="1077" width="7.5472%" height="15" fill="rgb(250,213,24)" fg:x="7" fg:w="4"/><text x="13.4575%" y="1087.50">`0x7FFFAD2..</text></g><g><title>`0x7FFFAD2B2983 (4 samples, 7.55%)</title><rect x="13.2075%" y="1061" width="7.5472%" height="15" fill="rgb(247,123,22)" fg:x="7" fg:w="4"/><text x="13.4575%" y="1071.50">`0x7FFFAD2..</text></g><g><title>`0x7FFFAA622EF8 (1 samples, 1.89%)</title><rect x="18.8679%" y="1045" width="1.8868%" height="15" fill="rgb(231,138,38)" fg:x="10" fg:w="1"/><text x="19.1179%" y="1055.50">`..</text></g><g><title>`0x7FFFAA5F8378 (1 samples, 1.89%)</title><rect x="18.8679%" y="1029" width="1.8868%" height="15" fill="rgb(231,145,46)" fg:x="10" fg:w="1"/><text x="19.1179%" y="1039.50">`..</text></g><g><title>`0x7FFFAA6A7F3C (1 samples, 1.89%)</title><rect x="18.8679%" y="1013" width="1.8868%" height="15" fill="rgb(251,118,11)" fg:x="10" fg:w="1"/><text x="19.1179%" y="1023.50">`..</text></g><g><title>`0x7FFFAA675673 (1 samples, 1.89%)</title><rect x="18.8679%" y="997" width="1.8868%" height="15" fill="rgb(217,147,25)" fg:x="10" fg:w="1"/><text x="19.1179%" y="1007.50">`..</text></g><g><title>`0x7FFFAA675AB1 (1 samples, 1.89%)</title><rect x="18.8679%" y="981" width="1.8868%" height="15" fill="rgb(247,81,37)" fg:x="10" fg:w="1"/><text x="19.1179%" y="991.50">`..</text></g><g><title>`0x7FFFAA5ED0B7 (1 samples, 1.89%)</title><rect x="18.8679%" y="965" width="1.8868%" height="15" fill="rgb(209,12,38)" fg:x="10" fg:w="1"/><text x="19.1179%" y="975.50">`..</text></g><g><title>`0x7FFFAD2D515F (1 samples, 1.89%)</title><rect x="18.8679%" y="949" width="1.8868%" height="15" fill="rgb(227,1,9)" fg:x="10" fg:w="1"/><text x="19.1179%" y="959.50">`..</text></g><g><title>`0x7FFFAD3A1D44 (1 samples, 1.89%)</title><rect x="18.8679%" y="933" width="1.8868%" height="15" fill="rgb(248,47,43)" fg:x="10" fg:w="1"/><text x="19.1179%" y="943.50">`..</text></g><g><title>`0x7FFFAD2A548B (7 samples, 13.21%)</title><rect x="9.4340%" y="1205" width="13.2075%" height="15" fill="rgb(221,10,30)" fg:x="5" fg:w="7"/><text x="9.6840%" y="1215.50">`0x7FFFAD2A548B</text></g><g><title>`0x7FFFAD31B7A9 (1 samples, 1.89%)</title><rect x="20.7547%" y="1189" width="1.8868%" height="15" fill="rgb(210,229,1)" fg:x="11" fg:w="1"/><text x="21.0047%" y="1199.50">`..</text></g><g><title>`0x7FFFAD2AF930 (1 samples, 1.89%)</title><rect x="20.7547%" y="1173" width="1.8868%" height="15" fill="rgb(222,148,37)" fg:x="11" fg:w="1"/><text x="21.0047%" y="1183.50">`..</text></g><g><title>`0x7FFFAD28280B (1 samples, 1.89%)</title><rect x="20.7547%" y="1157" width="1.8868%" height="15" fill="rgb(234,67,33)" fg:x="11" fg:w="1"/><text x="21.0047%" y="1167.50">`..</text></g><g><title>`0x7FFFAD2829DD (1 samples, 1.89%)</title><rect x="20.7547%" y="1141" width="1.8868%" height="15" fill="rgb(247,98,35)" fg:x="11" fg:w="1"/><text x="21.0047%" y="1151.50">`..</text></g><g><title>`0x7FFFAD282535 (1 samples, 1.89%)</title><rect x="20.7547%" y="1125" width="1.8868%" height="15" fill="rgb(247,138,52)" fg:x="11" fg:w="1"/><text x="21.0047%" y="1135.50">`..</text></g><g><title>`0x7FFFAD282B7E (1 samples, 1.89%)</title><rect x="20.7547%" y="1109" width="1.8868%" height="15" fill="rgb(213,79,30)" fg:x="11" fg:w="1"/><text x="21.0047%" y="1119.50">`..</text></g><g><title>`0x7FFFAD3A2504 (1 samples, 1.89%)</title><rect x="20.7547%" y="1093" width="1.8868%" height="15" fill="rgb(246,177,23)" fg:x="11" fg:w="1"/><text x="21.0047%" y="1103.50">`..</text></g><g><title>`0x7FFFAD2A5531 (1 samples, 1.89%)</title><rect x="22.6415%" y="1205" width="1.8868%" height="15" fill="rgb(230,62,27)" fg:x="12" fg:w="1"/><text x="22.8915%" y="1215.50">`..</text></g><g><title>`0x7FFFAD2EDDB1 (1 samples, 1.89%)</title><rect x="22.6415%" y="1189" width="1.8868%" height="15" fill="rgb(216,154,8)" fg:x="12" fg:w="1"/><text x="22.8915%" y="1199.50">`..</text></g><g><title>`0x7FFFAD2ED09F (1 samples, 1.89%)</title><rect x="22.6415%" y="1173" width="1.8868%" height="15" fill="rgb(244,35,45)" fg:x="12" fg:w="1"/><text x="22.8915%" y="1183.50">`..</text></g><g><title>`0x7FFFAD2ED501 (1 samples, 1.89%)</title><rect x="22.6415%" y="1157" width="1.8868%" height="15" fill="rgb(251,115,12)" fg:x="12" fg:w="1"/><text x="22.8915%" y="1167.50">`..</text></g><g><title>`0x7FFFAD2EC49A (1 samples, 1.89%)</title><rect x="22.6415%" y="1141" width="1.8868%" height="15" fill="rgb(240,54,50)" fg:x="12" fg:w="1"/><text x="22.8915%" y="1151.50">`..</text></g><g><title>`0x7FFFAD3A3474 (1 samples, 1.89%)</title><rect x="22.6415%" y="1125" width="1.8868%" height="15" fill="rgb(233,84,52)" fg:x="12" fg:w="1"/><text x="22.8915%" y="1135.50">`..</text></g><g><title>`0x7FFFAD2A5595 (1 samples, 1.89%)</title><rect x="24.5283%" y="1205" width="1.8868%" height="15" fill="rgb(207,117,47)" fg:x="13" fg:w="1"/><text x="24.7783%" y="1215.50">`..</text></g><g><title>`0x7FFFAD249E0E (1 samples, 1.89%)</title><rect x="24.5283%" y="1189" width="1.8868%" height="15" fill="rgb(249,43,39)" fg:x="13" fg:w="1"/><text x="24.7783%" y="1199.50">`..</text></g><g><title>`0x7FFFAD24BC3E (1 samples, 1.89%)</title><rect x="24.5283%" y="1173" width="1.8868%" height="15" fill="rgb(209,38,44)" fg:x="13" fg:w="1"/><text x="24.7783%" y="1183.50">`..</text></g><g><title>`0x7FFFAD2AB611 (1 samples, 1.89%)</title><rect x="24.5283%" y="1157" width="1.8868%" height="15" fill="rgb(236,212,23)" fg:x="13" fg:w="1"/><text x="24.7783%" y="1167.50">`..</text></g><g><title>`0x7FFFAD2ABBB8 (1 samples, 1.89%)</title><rect x="24.5283%" y="1141" width="1.8868%" height="15" fill="rgb(242,79,21)" fg:x="13" fg:w="1"/><text x="24.7783%" y="1151.50">`..</text></g><g><title>`0x7FFFAD249FB7 (1 samples, 1.89%)</title><rect x="24.5283%" y="1125" width="1.8868%" height="15" fill="rgb(211,96,35)" fg:x="13" fg:w="1"/><text x="24.7783%" y="1135.50">`..</text></g><g><title>`0x7FFFAD328036 (1 samples, 1.89%)</title><rect x="24.5283%" y="1109" width="1.8868%" height="15" fill="rgb(253,215,40)" fg:x="13" fg:w="1"/><text x="24.7783%" y="1119.50">`..</text></g><g><title>`0x7FFFAD2D2221 (1 samples, 1.89%)</title><rect x="24.5283%" y="1093" width="1.8868%" height="15" fill="rgb(211,81,21)" fg:x="13" fg:w="1"/><text x="24.7783%" y="1103.50">`..</text></g><g><title>`0x7FFFAD3A4AB4 (1 samples, 1.89%)</title><rect x="24.5283%" y="1077" width="1.8868%" height="15" fill="rgb(208,190,38)" fg:x="13" fg:w="1"/><text x="24.7783%" y="1087.50">`..</text></g><g><title>`0x7FFF88ABF649 (1 samples, 1.89%)</title><rect x="26.4151%" y="1125" width="1.8868%" height="15" fill="rgb(235,213,38)" fg:x="14" fg:w="1"/><text x="26.6651%" y="1135.50">`..</text></g><g><title>`0x7FFF88AB537E (1 samples, 1.89%)</title><rect x="26.4151%" y="1109" width="1.8868%" height="15" fill="rgb(237,122,38)" fg:x="14" fg:w="1"/><text x="26.6651%" y="1119.50">`..</text></g><g><title>`0x7FFF88AB5404 (1 samples, 1.89%)</title><rect x="26.4151%" y="1093" width="1.8868%" height="15" fill="rgb(244,218,35)" fg:x="14" fg:w="1"/><text x="26.6651%" y="1103.50">`..</text></g><g><title>`0x7FFF88AB5956 (1 samples, 1.89%)</title><rect x="26.4151%" y="1077" width="1.8868%" height="15" fill="rgb(240,68,47)" fg:x="14" fg:w="1"/><text x="26.6651%" y="1087.50">`..</text></g><g><title>`0x7FFF88AB572F (1 samples, 1.89%)</title><rect x="26.4151%" y="1061" width="1.8868%" height="15" fill="rgb(210,16,53)" fg:x="14" fg:w="1"/><text x="26.6651%" y="1071.50">`..</text></g><g><title>`0x7FFFAA5128E6 (1 samples, 1.89%)</title><rect x="26.4151%" y="1045" width="1.8868%" height="15" fill="rgb(235,124,12)" fg:x="14" fg:w="1"/><text x="26.6651%" y="1055.50">`..</text></g><g><title>`0x7FFFAD295D80 (1 samples, 1.89%)</title><rect x="26.4151%" y="1029" width="1.8868%" height="15" fill="rgb(224,169,11)" fg:x="14" fg:w="1"/><text x="26.6651%" y="1039.50">`..</text></g><g><title>`0x7FFFAD2484E0 (1 samples, 1.89%)</title><rect x="26.4151%" y="1013" width="1.8868%" height="15" fill="rgb(250,166,2)" fg:x="14" fg:w="1"/><text x="26.6651%" y="1023.50">`..</text></g><g><title>`0x7FFFAD2486D4 (1 samples, 1.89%)</title><rect x="26.4151%" y="997" width="1.8868%" height="15" fill="rgb(242,216,29)" fg:x="14" fg:w="1"/><text x="26.6651%" y="1007.50">`..</text></g><g><title>`0x7FFFAD2B9716 (1 samples, 1.89%)</title><rect x="26.4151%" y="981" width="1.8868%" height="15" fill="rgb(230,116,27)" fg:x="14" fg:w="1"/><text x="26.6651%" y="991.50">`..</text></g><g><title>`0x7FFFAD2B9B79 (1 samples, 1.89%)</title><rect x="26.4151%" y="965" width="1.8868%" height="15" fill="rgb(228,99,48)" fg:x="14" fg:w="1"/><text x="26.6651%" y="975.50">`..</text></g><g><title>`0x7FFFAD367F91 (1 samples, 1.89%)</title><rect x="26.4151%" y="949" width="1.8868%" height="15" fill="rgb(253,11,6)" fg:x="14" fg:w="1"/><text x="26.6651%" y="959.50">`..</text></g><g><title>`0x7FFFAD368018 (1 samples, 1.89%)</title><rect x="26.4151%" y="933" width="1.8868%" height="15" fill="rgb(247,143,39)" fg:x="14" fg:w="1"/><text x="26.6651%" y="943.50">`..</text></g><g><title>`0x7FFFAD36EA4F (1 samples, 1.89%)</title><rect x="26.4151%" y="917" width="1.8868%" height="15" fill="rgb(236,97,10)" fg:x="14" fg:w="1"/><text x="26.6651%" y="927.50">`..</text></g><g><title>`0x7FFFAD371859 (1 samples, 1.89%)</title><rect x="26.4151%" y="901" width="1.8868%" height="15" fill="rgb(233,208,19)" fg:x="14" fg:w="1"/><text x="26.6651%" y="911.50">`..</text></g><g><title>`0x7FFFAD31A7AE (1 samples, 1.89%)</title><rect x="26.4151%" y="885" width="1.8868%" height="15" fill="rgb(216,164,2)" fg:x="14" fg:w="1"/><text x="26.6651%" y="895.50">`..</text></g><g><title>`0x7FFFAD27BC7A (2 samples, 3.77%)</title><rect x="26.4151%" y="1173" width="3.7736%" height="15" fill="rgb(220,129,5)" fg:x="14" fg:w="2"/><text x="26.6651%" y="1183.50">`0x7..</text></g><g><title>`0x7FFFAD2B193C (2 samples, 3.77%)</title><rect x="26.4151%" y="1157" width="3.7736%" height="15" fill="rgb(242,17,10)" fg:x="14" fg:w="2"/><text x="26.6651%" y="1167.50">`0x7..</text></g><g><title>`0x7FFFAD2B2983 (2 samples, 3.77%)</title><rect x="26.4151%" y="1141" width="3.7736%" height="15" fill="rgb(242,107,0)" fg:x="14" fg:w="2"/><text x="26.6651%" y="1151.50">`0x7..</text></g><g><title>`0x7FFFAAF88562 (1 samples, 1.89%)</title><rect x="28.3019%" y="1125" width="1.8868%" height="15" fill="rgb(251,28,31)" fg:x="15" fg:w="1"/><text x="28.5519%" y="1135.50">`..</text></g><g><title>`0x7FFFAAF888D4 (1 samples, 1.89%)</title><rect x="28.3019%" y="1109" width="1.8868%" height="15" fill="rgb(233,223,10)" fg:x="15" fg:w="1"/><text x="28.5519%" y="1119.50">`..</text></g><g><title>`0x7FFFAAF77AB7 (1 samples, 1.89%)</title><rect x="28.3019%" y="1093" width="1.8868%" height="15" fill="rgb(215,21,27)" fg:x="15" fg:w="1"/><text x="28.5519%" y="1103.50">`..</text></g><g><title>`0x7FFFAAF8C1AE (1 samples, 1.89%)</title><rect x="28.3019%" y="1077" width="1.8868%" height="15" fill="rgb(232,23,21)" fg:x="15" fg:w="1"/><text x="28.5519%" y="1087.50">`..</text></g><g><title>`0x7FFFAC3232B5 (1 samples, 1.89%)</title><rect x="28.3019%" y="1061" width="1.8868%" height="15" fill="rgb(244,5,23)" fg:x="15" fg:w="1"/><text x="28.5519%" y="1071.50">`..</text></g><g><title>`0x7FFFAA576AF3 (1 samples, 1.89%)</title><rect x="28.3019%" y="1045" width="1.8868%" height="15" fill="rgb(226,81,46)" fg:x="15" fg:w="1"/><text x="28.5519%" y="1055.50">`..</text></g><g><title>`0x7FFFAD3A1BE4 (1 samples, 1.89%)</title><rect x="28.3019%" y="1029" width="1.8868%" height="15" fill="rgb(247,70,30)" fg:x="15" fg:w="1"/><text x="28.5519%" y="1039.50">`..</text></g><g><title>`0x7FFFAD275FCE (17 samples, 32.08%)</title><rect x="0.0000%" y="1253" width="32.0755%" height="15" fill="rgb(212,68,19)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1263.50">`0x7FFFAD275FCE</text></g><g><title>`0x7FFFAD2A364E (17 samples, 32.08%)</title><rect x="0.0000%" y="1237" width="32.0755%" height="15" fill="rgb(240,187,13)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1247.50">`0x7FFFAD2A364E</text></g><g><title>`0x7FFFAD2A3864 (17 samples, 32.08%)</title><rect x="0.0000%" y="1221" width="32.0755%" height="15" fill="rgb(223,113,26)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1231.50">`0x7FFFAD2A3864</text></g><g><title>`0x7FFFAD2A56AC (3 samples, 5.66%)</title><rect x="26.4151%" y="1205" width="5.6604%" height="15" fill="rgb(206,192,2)" fg:x="14" fg:w="3"/><text x="26.6651%" y="1215.50">`0x7FFF..</text></g><g><title>`0x7FFFAD27BCA6 (3 samples, 5.66%)</title><rect x="26.4151%" y="1189" width="5.6604%" height="15" fill="rgb(241,108,4)" fg:x="14" fg:w="3"/><text x="26.6651%" y="1199.50">`0x7FFF..</text></g><g><title>`0x7FFFAD27BCA6 (1 samples, 1.89%)</title><rect x="30.1887%" y="1173" width="1.8868%" height="15" fill="rgb(247,173,49)" fg:x="16" fg:w="1"/><text x="30.4387%" y="1183.50">`..</text></g><g><title>`0x7FFFAD27BC7A (1 samples, 1.89%)</title><rect x="30.1887%" y="1157" width="1.8868%" height="15" fill="rgb(224,114,35)" fg:x="16" fg:w="1"/><text x="30.4387%" y="1167.50">`..</text></g><g><title>`0x7FFFAD2B193C (1 samples, 1.89%)</title><rect x="30.1887%" y="1141" width="1.8868%" height="15" fill="rgb(245,159,27)" fg:x="16" fg:w="1"/><text x="30.4387%" y="1151.50">`..</text></g><g><title>`0x7FFFAD2B2983 (1 samples, 1.89%)</title><rect x="30.1887%" y="1125" width="1.8868%" height="15" fill="rgb(245,172,44)" fg:x="16" fg:w="1"/><text x="30.4387%" y="1135.50">`..</text></g><g><title>`0x7FFFAAE06E26 (1 samples, 1.89%)</title><rect x="30.1887%" y="1109" width="1.8868%" height="15" fill="rgb(236,23,11)" fg:x="16" fg:w="1"/><text x="30.4387%" y="1119.50">`..</text></g><g><title>`0x7FFFAAE6AD56 (1 samples, 1.89%)</title><rect x="30.1887%" y="1093" width="1.8868%" height="15" fill="rgb(205,117,38)" fg:x="16" fg:w="1"/><text x="30.4387%" y="1103.50">`..</text></g><g><title>`0x7FFFAAE60CDC (1 samples, 1.89%)</title><rect x="30.1887%" y="1077" width="1.8868%" height="15" fill="rgb(237,72,25)" fg:x="16" fg:w="1"/><text x="30.4387%" y="1087.50">`..</text></g><g><title>`0x7FFFAAE60D5F (1 samples, 1.89%)</title><rect x="30.1887%" y="1061" width="1.8868%" height="15" fill="rgb(244,70,9)" fg:x="16" fg:w="1"/><text x="30.4387%" y="1071.50">`..</text></g><g><title>`0x7FFFAAE60DD3 (1 samples, 1.89%)</title><rect x="30.1887%" y="1045" width="1.8868%" height="15" fill="rgb(217,125,39)" fg:x="16" fg:w="1"/><text x="30.4387%" y="1055.50">`..</text></g><g><title>`0x7FFFAAE000A3 (1 samples, 1.89%)</title><rect x="30.1887%" y="1029" width="1.8868%" height="15" fill="rgb(235,36,10)" fg:x="16" fg:w="1"/><text x="30.4387%" y="1039.50">`..</text></g><g><title>`0x7FFFAD24F164 (1 samples, 1.89%)</title><rect x="30.1887%" y="1013" width="1.8868%" height="15" fill="rgb(251,123,47)" fg:x="16" fg:w="1"/><text x="30.4387%" y="1023.50">`..</text></g><g><title>`0x7FFFAD24F591 (1 samples, 1.89%)</title><rect x="30.1887%" y="997" width="1.8868%" height="15" fill="rgb(221,13,13)" fg:x="16" fg:w="1"/><text x="30.4387%" y="1007.50">`..</text></g><g><title>`0x7FFFAD2869A2 (1 samples, 1.89%)</title><rect x="30.1887%" y="981" width="1.8868%" height="15" fill="rgb(238,131,9)" fg:x="16" fg:w="1"/><text x="30.4387%" y="991.50">`..</text></g><g><title>`0x7FFFAD287D7F (1 samples, 1.89%)</title><rect x="30.1887%" y="965" width="1.8868%" height="15" fill="rgb(211,50,8)" fg:x="16" fg:w="1"/><text x="30.4387%" y="975.50">`..</text></g><g><title>`0x7FFFAD2886F4 (1 samples, 1.89%)</title><rect x="30.1887%" y="949" width="1.8868%" height="15" fill="rgb(245,182,24)" fg:x="16" fg:w="1"/><text x="30.4387%" y="959.50">`..</text></g><g><title>`0x7FFFAD28822A (1 samples, 1.89%)</title><rect x="30.1887%" y="933" width="1.8868%" height="15" fill="rgb(242,14,37)" fg:x="16" fg:w="1"/><text x="30.4387%" y="943.50">`..</text></g><g><title>`0x7FFFAD27C320 (1 samples, 1.89%)</title><rect x="32.0755%" y="1253" width="1.8868%" height="15" fill="rgb(246,228,12)" fg:x="17" fg:w="1"/><text x="32.3255%" y="1263.50">`..</text></g><g><title>`0x7FFFAD2BB2B2 (1 samples, 1.89%)</title><rect x="33.9623%" y="1205" width="1.8868%" height="15" fill="rgb(213,55,15)" fg:x="18" fg:w="1"/><text x="34.2123%" y="1215.50">`..</text></g><g><title>`0x7FFFAD2BBD54 (1 samples, 1.89%)</title><rect x="33.9623%" y="1189" width="1.8868%" height="15" fill="rgb(209,9,3)" fg:x="18" fg:w="1"/><text x="34.2123%" y="1199.50">`..</text></g><g><title>`0x7FFFAD3A4AB4 (1 samples, 1.89%)</title><rect x="33.9623%" y="1173" width="1.8868%" height="15" fill="rgb(230,59,30)" fg:x="18" fg:w="1"/><text x="34.2123%" y="1183.50">`..</text></g><g><title>`0x7FFFAD2AE111 (1 samples, 1.89%)</title><rect x="35.8491%" y="1173" width="1.8868%" height="15" fill="rgb(209,121,21)" fg:x="19" fg:w="1"/><text x="36.0991%" y="1183.50">`..</text></g><g><title>`0x7FFFAD2AE7E9 (1 samples, 1.89%)</title><rect x="35.8491%" y="1157" width="1.8868%" height="15" fill="rgb(220,109,13)" fg:x="19" fg:w="1"/><text x="36.0991%" y="1167.50">`..</text></g><g><title>`0x7FFFAD2AED40 (1 samples, 1.89%)</title><rect x="35.8491%" y="1141" width="1.8868%" height="15" fill="rgb(232,18,1)" fg:x="19" fg:w="1"/><text x="36.0991%" y="1151.50">`..</text></g><g><title>`0x7FFFAD2AF073 (1 samples, 1.89%)</title><rect x="35.8491%" y="1125" width="1.8868%" height="15" fill="rgb(215,41,42)" fg:x="19" fg:w="1"/><text x="36.0991%" y="1135.50">`..</text></g><g><title>`0x7FFFAD3A22A4 (1 samples, 1.89%)</title><rect x="35.8491%" y="1109" width="1.8868%" height="15" fill="rgb(224,123,36)" fg:x="19" fg:w="1"/><text x="36.0991%" y="1119.50">`..</text></g><g><title>`0x7FFFAD2BC32A (2 samples, 3.77%)</title><rect x="35.8491%" y="1189" width="3.7736%" height="15" fill="rgb(240,125,3)" fg:x="19" fg:w="2"/><text x="36.0991%" y="1199.50">`0x7..</text></g><g><title>`0x7FFFAD2AE23C (1 samples, 1.89%)</title><rect x="37.7358%" y="1173" width="1.8868%" height="15" fill="rgb(205,98,50)" fg:x="20" fg:w="1"/><text x="37.9858%" y="1183.50">`..</text></g><g><title>`0x7FFFAD2B065C (1 samples, 1.89%)</title><rect x="37.7358%" y="1157" width="1.8868%" height="15" fill="rgb(205,185,37)" fg:x="20" fg:w="1"/><text x="37.9858%" y="1167.50">`..</text></g><g><title>`0x7FFFAD2ABBB8 (1 samples, 1.89%)</title><rect x="37.7358%" y="1141" width="1.8868%" height="15" fill="rgb(238,207,15)" fg:x="20" fg:w="1"/><text x="37.9858%" y="1151.50">`..</text></g><g><title>`0x7FFFAD249FB7 (1 samples, 1.89%)</title><rect x="37.7358%" y="1125" width="1.8868%" height="15" fill="rgb(213,199,42)" fg:x="20" fg:w="1"/><text x="37.9858%" y="1135.50">`..</text></g><g><title>`0x7FFFAD328036 (1 samples, 1.89%)</title><rect x="37.7358%" y="1109" width="1.8868%" height="15" fill="rgb(235,201,11)" fg:x="20" fg:w="1"/><text x="37.9858%" y="1119.50">`..</text></g><g><title>`0x7FFFAD2D2221 (1 samples, 1.89%)</title><rect x="37.7358%" y="1093" width="1.8868%" height="15" fill="rgb(207,46,11)" fg:x="20" fg:w="1"/><text x="37.9858%" y="1103.50">`..</text></g><g><title>`0x7FFFAD3A4AB4 (1 samples, 1.89%)</title><rect x="37.7358%" y="1077" width="1.8868%" height="15" fill="rgb(241,35,35)" fg:x="20" fg:w="1"/><text x="37.9858%" y="1087.50">`..</text></g><g><title>`0x7FFFAD293B99 (1 samples, 1.89%)</title><rect x="39.6226%" y="1173" width="1.8868%" height="15" fill="rgb(243,32,47)" fg:x="21" fg:w="1"/><text x="39.8726%" y="1183.50">`..</text></g><g><title>`0x7FFFAD293CE4 (1 samples, 1.89%)</title><rect x="41.5094%" y="1173" width="1.8868%" height="15" fill="rgb(247,202,23)" fg:x="22" fg:w="1"/><text x="41.7594%" y="1183.50">`..</text></g><g><title>`0x7FFFAD2D2AA1 (6 samples, 11.32%)</title><rect x="33.9623%" y="1221" width="11.3208%" height="15" fill="rgb(219,102,11)" fg:x="18" fg:w="6"/><text x="34.2123%" y="1231.50">`0x7FFFAD2D2AA1</text></g><g><title>`0x7FFFAD2BB4B0 (5 samples, 9.43%)</title><rect x="35.8491%" y="1205" width="9.4340%" height="15" fill="rgb(243,110,44)" fg:x="19" fg:w="5"/><text x="36.0991%" y="1215.50">`0x7FFFAD2BB4..</text></g><g><title>`0x7FFFAD2BC3F1 (3 samples, 5.66%)</title><rect x="39.6226%" y="1189" width="5.6604%" height="15" fill="rgb(222,74,54)" fg:x="21" fg:w="3"/><text x="39.8726%" y="1199.50">`0x7FFF..</text></g><g><title>`0x7FFFAD2944A6 (1 samples, 1.89%)</title><rect x="43.3962%" y="1173" width="1.8868%" height="15" fill="rgb(216,99,12)" fg:x="23" fg:w="1"/><text x="43.6462%" y="1183.50">`..</text></g><g><title>`0x7FFFAD280063 (1 samples, 1.89%)</title><rect x="43.3962%" y="1157" width="1.8868%" height="15" fill="rgb(226,22,26)" fg:x="23" fg:w="1"/><text x="43.6462%" y="1167.50">`..</text></g><g><title>`0x7FFFAD280AA3 (1 samples, 1.89%)</title><rect x="43.3962%" y="1141" width="1.8868%" height="15" fill="rgb(217,163,10)" fg:x="23" fg:w="1"/><text x="43.6462%" y="1151.50">`..</text></g><g><title>`0x7FFFAD2AE4BF (1 samples, 1.89%)</title><rect x="45.2830%" y="1061" width="1.8868%" height="15" fill="rgb(213,25,53)" fg:x="24" fg:w="1"/><text x="45.5330%" y="1071.50">`..</text></g><g><title>`0x7FFFAD2AED40 (1 samples, 1.89%)</title><rect x="45.2830%" y="1045" width="1.8868%" height="15" fill="rgb(252,105,26)" fg:x="24" fg:w="1"/><text x="45.5330%" y="1055.50">`..</text></g><g><title>`0x7FFFAD2AF073 (1 samples, 1.89%)</title><rect x="45.2830%" y="1029" width="1.8868%" height="15" fill="rgb(220,39,43)" fg:x="24" fg:w="1"/><text x="45.5330%" y="1039.50">`..</text></g><g><title>`0x7FFFAD3A22A4 (1 samples, 1.89%)</title><rect x="45.2830%" y="1013" width="1.8868%" height="15" fill="rgb(229,68,48)" fg:x="24" fg:w="1"/><text x="45.5330%" y="1023.50">`..</text></g><g><title>`0x7FFFAD249B5E (1 samples, 1.89%)</title><rect x="47.1698%" y="1013" width="1.8868%" height="15" fill="rgb(252,8,32)" fg:x="25" fg:w="1"/><text x="47.4198%" y="1023.50">`..</text></g><g><title>`0x7FFFAD281203 (1 samples, 1.89%)</title><rect x="47.1698%" y="997" width="1.8868%" height="15" fill="rgb(223,20,43)" fg:x="25" fg:w="1"/><text x="47.4198%" y="1007.50">`..</text></g><g><title>`0x7FFFAD248860 (3 samples, 5.66%)</title><rect x="45.2830%" y="1093" width="5.6604%" height="15" fill="rgb(229,81,49)" fg:x="24" fg:w="3"/><text x="45.5330%" y="1103.50">`0x7FFF..</text></g><g><title>`0x7FFFAD2BC404 (3 samples, 5.66%)</title><rect x="45.2830%" y="1077" width="5.6604%" height="15" fill="rgb(236,28,36)" fg:x="24" fg:w="3"/><text x="45.5330%" y="1087.50">`0x7FFF..</text></g><g><title>`0x7FFFAD2AE52D (2 samples, 3.77%)</title><rect x="47.1698%" y="1061" width="3.7736%" height="15" fill="rgb(249,185,26)" fg:x="25" fg:w="2"/><text x="47.4198%" y="1071.50">`0x7..</text></g><g><title>`0x7FFFAD2B065C (2 samples, 3.77%)</title><rect x="47.1698%" y="1045" width="3.7736%" height="15" fill="rgb(249,174,33)" fg:x="25" fg:w="2"/><text x="47.4198%" y="1055.50">`0x7..</text></g><g><title>`0x7FFFAD2ABBB8 (2 samples, 3.77%)</title><rect x="47.1698%" y="1029" width="3.7736%" height="15" fill="rgb(233,201,37)" fg:x="25" fg:w="2"/><text x="47.4198%" y="1039.50">`0x7..</text></g><g><title>`0x7FFFAD249F82 (1 samples, 1.89%)</title><rect x="49.0566%" y="1013" width="1.8868%" height="15" fill="rgb(221,78,26)" fg:x="26" fg:w="1"/><text x="49.3066%" y="1023.50">`..</text></g><g><title>`0x7FFFAD293C96 (1 samples, 1.89%)</title><rect x="49.0566%" y="997" width="1.8868%" height="15" fill="rgb(250,127,30)" fg:x="26" fg:w="1"/><text x="49.3066%" y="1007.50">`..</text></g><g><title>`0x7FFFAAE90046 (4 samples, 7.55%)</title><rect x="45.2830%" y="1205" width="7.5472%" height="15" fill="rgb(230,49,44)" fg:x="24" fg:w="4"/><text x="45.5330%" y="1215.50">`0x7FFFAAE..</text></g><g><title>`0x7FFFAAE7553D (4 samples, 7.55%)</title><rect x="45.2830%" y="1189" width="7.5472%" height="15" fill="rgb(229,67,23)" fg:x="24" fg:w="4"/><text x="45.5330%" y="1199.50">`0x7FFFAAE..</text></g><g><title>`0x7FFFAAE0423B (4 samples, 7.55%)</title><rect x="45.2830%" y="1173" width="7.5472%" height="15" fill="rgb(249,83,47)" fg:x="24" fg:w="4"/><text x="45.5330%" y="1183.50">`0x7FFFAAE..</text></g><g><title>`0x7FFFAAE66225 (4 samples, 7.55%)</title><rect x="45.2830%" y="1157" width="7.5472%" height="15" fill="rgb(215,43,3)" fg:x="24" fg:w="4"/><text x="45.5330%" y="1167.50">`0x7FFFAAE..</text></g><g><title>`0x7FFFAA5128E6 (4 samples, 7.55%)</title><rect x="45.2830%" y="1141" width="7.5472%" height="15" fill="rgb(238,154,13)" fg:x="24" fg:w="4"/><text x="45.5330%" y="1151.50">`0x7FFFAA5..</text></g><g><title>`0x7FFFAD295D80 (4 samples, 7.55%)</title><rect x="45.2830%" y="1125" width="7.5472%" height="15" fill="rgb(219,56,2)" fg:x="24" fg:w="4"/><text x="45.5330%" y="1135.50">`0x7FFFAD2..</text></g><g><title>`0x7FFFAD2484E0 (4 samples, 7.55%)</title><rect x="45.2830%" y="1109" width="7.5472%" height="15" fill="rgb(233,0,4)" fg:x="24" fg:w="4"/><text x="45.5330%" y="1119.50">`0x7FFFAD2..</text></g><g><title>`0x7FFFAD2488D4 (1 samples, 1.89%)</title><rect x="50.9434%" y="1093" width="1.8868%" height="15" fill="rgb(235,30,7)" fg:x="27" fg:w="1"/><text x="51.1934%" y="1103.50">`..</text></g><g><title>`0x7FFFAD27AE03 (1 samples, 1.89%)</title><rect x="50.9434%" y="1077" width="1.8868%" height="15" fill="rgb(250,79,13)" fg:x="27" fg:w="1"/><text x="51.1934%" y="1087.50">`..</text></g><g><title>`0x7FFFAD27BC7A (1 samples, 1.89%)</title><rect x="50.9434%" y="1061" width="1.8868%" height="15" fill="rgb(211,146,34)" fg:x="27" fg:w="1"/><text x="51.1934%" y="1071.50">`..</text></g><g><title>`0x7FFFAD2B193C (1 samples, 1.89%)</title><rect x="50.9434%" y="1045" width="1.8868%" height="15" fill="rgb(228,22,38)" fg:x="27" fg:w="1"/><text x="51.1934%" y="1055.50">`..</text></g><g><title>`0x7FFFAD2B2983 (1 samples, 1.89%)</title><rect x="50.9434%" y="1029" width="1.8868%" height="15" fill="rgb(235,168,5)" fg:x="27" fg:w="1"/><text x="51.1934%" y="1039.50">`..</text></g><g><title>`0x7FFFA9275663 (1 samples, 1.89%)</title><rect x="50.9434%" y="1013" width="1.8868%" height="15" fill="rgb(221,155,16)" fg:x="27" fg:w="1"/><text x="51.1934%" y="1023.50">`..</text></g><g><title>`0x7FFFA927610D (1 samples, 1.89%)</title><rect x="50.9434%" y="997" width="1.8868%" height="15" fill="rgb(215,215,53)" fg:x="27" fg:w="1"/><text x="51.1934%" y="1007.50">`..</text></g><g><title>soul_lang_rust.exe`alloc::string::impl$28::deref (1 samples, 1.89%)</title><rect x="52.8302%" y="1013" width="1.8868%" height="15" fill="rgb(223,4,10)" fg:x="28" fg:w="1"/><text x="53.0802%" y="1023.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::tokenizer::tokenizer::read_as_file_lines(ref$ (1 samples, 1.89%)</title><rect x="52.8302%" y="997" width="1.8868%" height="15" fill="rgb(234,103,6)" fg:x="28" fg:w="1"/><text x="53.0802%" y="1007.50">s..</text></g><g><title>soul_lang_rust.exe`std::io::impl$27::next&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt;(std::io::Lines&lt;std::io::buffered::bufreader::BufReader (1 samples, 1.89%)</title><rect x="52.8302%" y="981" width="1.8868%" height="15" fill="rgb(227,97,0)" fg:x="28" fg:w="1"/><text x="53.0802%" y="991.50">s..</text></g><g><title>soul_lang_rust.exe`std::io::append_to_string&lt;std::io::BufRead::read_line::closure_env$0&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt;(alloc::string::String*, std::io::BufRead::read_line::closure_env$0&lt;std::io::buffered::bufreader::BufReader (1 samples, 1.89%)</title><rect x="52.8302%" y="965" width="1.8868%" height="15" fill="rgb(234,150,53)" fg:x="28" fg:w="1"/><text x="53.0802%" y="975.50">s..</text></g><g><title>soul_lang_rust.exe`std::io::BufRead::read_line::closure$0(std::io::BufRead::read_line::closure_env$0&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt;, alloc::vec::Vec (1 samples, 1.89%)</title><rect x="52.8302%" y="949" width="1.8868%" height="15" fill="rgb(228,201,54)" fg:x="28" fg:w="1"/><text x="53.0802%" y="959.50">s..</text></g><g><title>soul_lang_rust.exe`std::io::read_until(std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt;*, unsigned char, alloc::vec::Vec (1 samples, 1.89%)</title><rect x="52.8302%" y="933" width="1.8868%" height="15" fill="rgb(222,22,37)" fg:x="28" fg:w="1"/><text x="53.0802%" y="943.50">s..</text></g><g><title>soul_lang_rust.exe`std::io::buffered::bufreader::impl$6::fill_buf(std::io::buffered::bufreader::BufReader (1 samples, 1.89%)</title><rect x="52.8302%" y="917" width="1.8868%" height="15" fill="rgb(237,53,32)" fg:x="28" fg:w="1"/><text x="53.0802%" y="927.50">s..</text></g><g><title>soul_lang_rust.exe`std::io::buffered::bufreader::buffer::Buffer::fill_buf (1 samples, 1.89%)</title><rect x="52.8302%" y="901" width="1.8868%" height="15" fill="rgb(233,25,53)" fg:x="28" fg:w="1"/><text x="53.0802%" y="911.50">s..</text></g><g><title>soul_lang_rust.exe`std::sys::pal::windows::handle::Handle::read_buf (1 samples, 1.89%)</title><rect x="52.8302%" y="885" width="1.8868%" height="15" fill="rgb(210,40,34)" fg:x="28" fg:w="1"/><text x="53.0802%" y="895.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place&lt;soul_lang_rust::meta_data::meta_data::MetaData&gt; (1 samples, 1.89%)</title><rect x="54.7170%" y="1013" width="1.8868%" height="15" fill="rgb(241,220,44)" fg:x="29" fg:w="1"/><text x="54.9670%" y="1023.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (1 samples, 1.89%)</title><rect x="54.7170%" y="997" width="1.8868%" height="15" fill="rgb(235,28,35)" fg:x="29" fg:w="1"/><text x="54.9670%" y="1007.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::sync::impl$37::drop(alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (1 samples, 1.89%)</title><rect x="54.7170%" y="981" width="1.8868%" height="15" fill="rgb(210,56,17)" fg:x="29" fg:w="1"/><text x="54.9670%" y="991.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex&lt;soul_lang_rust::meta_data::borrow_checker::borrow_checker::BorrowChecker&gt;,alloc::alloc::Global&gt;::inner (1 samples, 1.89%)</title><rect x="54.7170%" y="965" width="1.8868%" height="15" fill="rgb(224,130,29)" fg:x="29" fg:w="1"/><text x="54.9670%" y="975.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::sync::poison::mutex::Mutex&lt;soul_lang_rust::meta_data::borrow_checker::borrow_checker::BorrowChecker&gt; &gt; &gt;::as_ref (1 samples, 1.89%)</title><rect x="54.7170%" y="949" width="1.8868%" height="15" fill="rgb(235,212,8)" fg:x="29" fg:w="1"/><text x="54.9670%" y="959.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;soul_lang_rust::meta_data::scope_and_var::scope::ScopeId,soul_lang_rust::meta_data::scope_and_var::scope::Scope&gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$ (1 samples, 1.89%)</title><rect x="54.7170%" y="933" width="1.8868%" height="15" fill="rgb(223,33,50)" fg:x="29" fg:w="1"/><text x="54.9670%" y="943.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 1.89%)</title><rect x="54.7170%" y="917" width="1.8868%" height="15" fill="rgb(219,149,13)" fg:x="29" fg:w="1"/><text x="54.9670%" y="927.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::raw::RawTableInner::drop_elements (1 samples, 1.89%)</title><rect x="54.7170%" y="901" width="1.8868%" height="15" fill="rgb(250,156,29)" fg:x="29" fg:w="1"/><text x="54.9670%" y="911.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::raw::Bucket&lt;tuple$&lt;soul_lang_rust::meta_data::scope_and_var::scope::ScopeId,soul_lang_rust::meta_data::scope_and_var::scope::Scope&gt; &gt;::drop (1 samples, 1.89%)</title><rect x="54.7170%" y="885" width="1.8868%" height="15" fill="rgb(216,193,19)" fg:x="29" fg:w="1"/><text x="54.9670%" y="895.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$ (1 samples, 1.89%)</title><rect x="54.7170%" y="869" width="1.8868%" height="15" fill="rgb(216,135,14)" fg:x="29" fg:w="1"/><text x="54.9670%" y="879.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(tuple$ (1 samples, 1.89%)</title><rect x="54.7170%" y="853" width="1.8868%" height="15" fill="rgb(241,47,5)" fg:x="29" fg:w="1"/><text x="54.9670%" y="863.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place (1 samples, 1.89%)</title><rect x="54.7170%" y="837" width="1.8868%" height="15" fill="rgb(233,42,35)" fg:x="29" fg:w="1"/><text x="54.9670%" y="847.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (1 samples, 1.89%)</title><rect x="54.7170%" y="821" width="1.8868%" height="15" fill="rgb(231,13,6)" fg:x="29" fg:w="1"/><text x="54.9670%" y="831.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::sync::impl$37::drop(alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (1 samples, 1.89%)</title><rect x="54.7170%" y="805" width="1.8868%" height="15" fill="rgb(207,181,40)" fg:x="29" fg:w="1"/><text x="54.9670%" y="815.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionID&gt;,alloc::alloc::Global&gt;::inner (1 samples, 1.89%)</title><rect x="54.7170%" y="789" width="1.8868%" height="15" fill="rgb(254,173,49)" fg:x="29" fg:w="1"/><text x="54.9670%" y="799.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::sync::poison::mutex::Mutex&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionID&gt; &gt; &gt;::as_ref (1 samples, 1.89%)</title><rect x="54.7170%" y="773" width="1.8868%" height="15" fill="rgb(221,1,38)" fg:x="29" fg:w="1"/><text x="54.9670%" y="783.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place&lt;soul_lang_rust::meta_data::meta_data::FunctionStore&gt; (1 samples, 1.89%)</title><rect x="54.7170%" y="757" width="1.8868%" height="15" fill="rgb(206,124,46)" fg:x="29" fg:w="1"/><text x="54.9670%" y="767.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap (1 samples, 1.89%)</title><rect x="54.7170%" y="741" width="1.8868%" height="15" fill="rgb(249,21,11)" fg:x="29" fg:w="1"/><text x="54.9670%" y="751.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(hashbrown::map::HashMap (1 samples, 1.89%)</title><rect x="54.7170%" y="725" width="1.8868%" height="15" fill="rgb(222,201,40)" fg:x="29" fg:w="1"/><text x="54.9670%" y="735.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$ (1 samples, 1.89%)</title><rect x="54.7170%" y="709" width="1.8868%" height="15" fill="rgb(235,61,29)" fg:x="29" fg:w="1"/><text x="54.9670%" y="719.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::raw::impl$18::drop(hashbrown::raw::RawTable&lt;tuple$ (1 samples, 1.89%)</title><rect x="54.7170%" y="693" width="1.8868%" height="15" fill="rgb(219,207,3)" fg:x="29" fg:w="1"/><text x="54.9670%" y="703.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 1.89%)</title><rect x="54.7170%" y="677" width="1.8868%" height="15" fill="rgb(222,56,46)" fg:x="29" fg:w="1"/><text x="54.9670%" y="687.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::raw::RawTableInner::drop_elements (1 samples, 1.89%)</title><rect x="54.7170%" y="661" width="1.8868%" height="15" fill="rgb(239,76,54)" fg:x="29" fg:w="1"/><text x="54.9670%" y="671.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::raw::impl$29::next(hashbrown::raw::RawIter&lt;tuple$ (1 samples, 1.89%)</title><rect x="54.7170%" y="645" width="1.8868%" height="15" fill="rgb(231,124,27)" fg:x="29" fg:w="1"/><text x="54.9670%" y="655.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionID,soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration&gt; &gt;::next_impl (1 samples, 1.89%)</title><rect x="54.7170%" y="629" width="1.8868%" height="15" fill="rgb(249,195,6)" fg:x="29" fg:w="1"/><text x="54.9670%" y="639.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::control::bitmask::impl$2::next (1 samples, 1.89%)</title><rect x="54.7170%" y="613" width="1.8868%" height="15" fill="rgb(237,174,47)" fg:x="29" fg:w="1"/><text x="54.9670%" y="623.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::control::bitmask::BitMask::remove_lowest_bit (1 samples, 1.89%)</title><rect x="54.7170%" y="597" width="1.8868%" height="15" fill="rgb(206,201,31)" fg:x="29" fg:w="1"/><text x="54.9670%" y="607.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration&gt; (1 samples, 1.89%)</title><rect x="54.7170%" y="581" width="1.8868%" height="15" fill="rgb(231,57,52)" fg:x="29" fg:w="1"/><text x="54.9670%" y="591.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 1.89%)</title><rect x="54.7170%" y="565" width="1.8868%" height="15" fill="rgb(248,177,22)" fg:x="29" fg:w="1"/><text x="54.9670%" y="575.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 1.89%)</title><rect x="54.7170%" y="549" width="1.8868%" height="15" fill="rgb(215,211,37)" fg:x="29" fg:w="1"/><text x="54.9670%" y="559.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 1.89%)</title><rect x="54.7170%" y="533" width="1.8868%" height="15" fill="rgb(241,128,51)" fg:x="29" fg:w="1"/><text x="54.9670%" y="543.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::vec::impl$25::drop&lt;soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo,alloc::alloc::Global&gt;(alloc::vec::Vec (1 samples, 1.89%)</title><rect x="54.7170%" y="517" width="1.8868%" height="15" fill="rgb(227,165,31)" fg:x="29" fg:w="1"/><text x="54.9670%" y="527.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$ (1 samples, 1.89%)</title><rect x="54.7170%" y="501" width="1.8868%" height="15" fill="rgb(228,167,24)" fg:x="29" fg:w="1"/><text x="54.9670%" y="511.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place (1 samples, 1.89%)</title><rect x="54.7170%" y="485" width="1.8868%" height="15" fill="rgb(228,143,12)" fg:x="29" fg:w="1"/><text x="54.9670%" y="495.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place (1 samples, 1.89%)</title><rect x="54.7170%" y="469" width="1.8868%" height="15" fill="rgb(249,149,8)" fg:x="29" fg:w="1"/><text x="54.9670%" y="479.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 1.89%)</title><rect x="54.7170%" y="453" width="1.8868%" height="15" fill="rgb(243,35,44)" fg:x="29" fg:w="1"/><text x="54.9670%" y="463.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 1.89%)</title><rect x="54.7170%" y="437" width="1.8868%" height="15" fill="rgb(246,89,9)" fg:x="29" fg:w="1"/><text x="54.9670%" y="447.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 1.89%)</title><rect x="54.7170%" y="421" width="1.8868%" height="15" fill="rgb(233,213,13)" fg:x="29" fg:w="1"/><text x="54.9670%" y="431.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (1 samples, 1.89%)</title><rect x="54.7170%" y="405" width="1.8868%" height="15" fill="rgb(233,141,41)" fg:x="29" fg:w="1"/><text x="54.9670%" y="415.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory (1 samples, 1.89%)</title><rect x="54.7170%" y="389" width="1.8868%" height="15" fill="rgb(239,167,4)" fg:x="29" fg:w="1"/><text x="54.9670%" y="399.50">s..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (1 samples, 1.89%)</title><rect x="56.6038%" y="1013" width="1.8868%" height="15" fill="rgb(209,217,16)" fg:x="30" fg:w="1"/><text x="56.8538%" y="1023.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::cpp_transpiller::transpiller::transpiller_to_cpp (1 samples, 1.89%)</title><rect x="56.6038%" y="997" width="1.8868%" height="15" fill="rgb(219,88,35)" fg:x="30" fg:w="1"/><text x="56.8538%" y="1007.50">s..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 1.89%)</title><rect x="56.6038%" y="981" width="1.8868%" height="15" fill="rgb(220,193,23)" fg:x="30" fg:w="1"/><text x="56.8538%" y="991.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::cpp_transpiller::convert_to_cpp::statment_to_cpp::statment_to_cpp(soul_lang_rust::cpp_transpiller::cpp_writer::CppWriter*, soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_stament::statment_type::statment_type::StatmentIterator*, enum2$ (1 samples, 1.89%)</title><rect x="56.6038%" y="965" width="1.8868%" height="15" fill="rgb(230,90,52)" fg:x="30" fg:w="1"/><text x="56.8538%" y="975.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::cpp_transpiller::convert_to_cpp::statment_to_cpp::initialize_to_cpp(soul_lang_rust::cpp_transpiller::cpp_writer::CppWriter*, enum2$ (1 samples, 1.89%)</title><rect x="56.6038%" y="949" width="1.8868%" height="15" fill="rgb(252,106,19)" fg:x="30" fg:w="1"/><text x="56.8538%" y="959.50">s..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 1.89%)</title><rect x="56.6038%" y="933" width="1.8868%" height="15" fill="rgb(206,74,20)" fg:x="30" fg:w="1"/><text x="56.8538%" y="943.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::cpp_transpiller::convert_to_cpp::statment_to_cpp::assignment_to_cpp(soul_lang_rust::cpp_transpiller::cpp_writer::CppWriter*, enum2$ (1 samples, 1.89%)</title><rect x="56.6038%" y="917" width="1.8868%" height="15" fill="rgb(230,138,44)" fg:x="30" fg:w="1"/><text x="56.8538%" y="927.50">s..</text></g><g><title>soul_lang_rust.exe`std::path::Path::is_dir (1 samples, 1.89%)</title><rect x="58.4906%" y="981" width="1.8868%" height="15" fill="rgb(235,182,43)" fg:x="31" fg:w="1"/><text x="58.7406%" y="991.50">s..</text></g><g><title>soul_lang_rust.exe`std::fs::metadata (1 samples, 1.89%)</title><rect x="58.4906%" y="965" width="1.8868%" height="15" fill="rgb(242,16,51)" fg:x="31" fg:w="1"/><text x="58.7406%" y="975.50">s..</text></g><g><title>soul_lang_rust.exe`core::result::Result::map (1 samples, 1.89%)</title><rect x="58.4906%" y="949" width="1.8868%" height="15" fill="rgb(248,9,4)" fg:x="31" fg:w="1"/><text x="58.7406%" y="959.50">s..</text></g><g><title>soul_lang_rust.exe`std::sys::pal::windows::fs::stat (1 samples, 1.89%)</title><rect x="58.4906%" y="933" width="1.8868%" height="15" fill="rgb(210,31,22)" fg:x="31" fg:w="1"/><text x="58.7406%" y="943.50">s..</text></g><g><title>soul_lang_rust.exe`std::sys::pal::windows::fs::metadata (1 samples, 1.89%)</title><rect x="58.4906%" y="917" width="1.8868%" height="15" fill="rgb(239,54,39)" fg:x="31" fg:w="1"/><text x="58.7406%" y="927.50">s..</text></g><g><title>`0x7FFFAA5768F9 (1 samples, 1.89%)</title><rect x="58.4906%" y="901" width="1.8868%" height="15" fill="rgb(230,99,41)" fg:x="31" fg:w="1"/><text x="58.7406%" y="911.50">`..</text></g><g><title>`0x7FFFAD3A1CE4 (1 samples, 1.89%)</title><rect x="58.4906%" y="885" width="1.8868%" height="15" fill="rgb(253,106,12)" fg:x="31" fg:w="1"/><text x="58.7406%" y="895.50">`..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;tuple$ (2 samples, 3.77%)</title><rect x="58.4906%" y="1013" width="3.7736%" height="15" fill="rgb(213,46,41)" fg:x="31" fg:w="2"/><text x="58.7406%" y="1023.50">soul..</text></g><g><title>soul_lang_rust.exe`std::fs::DirBuilder::create_dir_all (2 samples, 3.77%)</title><rect x="58.4906%" y="997" width="3.7736%" height="15" fill="rgb(215,133,35)" fg:x="31" fg:w="2"/><text x="58.7406%" y="1007.50">soul..</text></g><g><title>soul_lang_rust.exe`std::sys::pal::windows::fs::DirBuilder::mkdir (1 samples, 1.89%)</title><rect x="60.3774%" y="981" width="1.8868%" height="15" fill="rgb(213,28,5)" fg:x="32" fg:w="1"/><text x="60.6274%" y="991.50">s..</text></g><g><title>soul_lang_rust.exe`std::sys::pal::windows::cvt (1 samples, 1.89%)</title><rect x="60.3774%" y="965" width="1.8868%" height="15" fill="rgb(215,77,49)" fg:x="32" fg:w="1"/><text x="60.6274%" y="975.50">s..</text></g><g><title>soul_lang_rust.exe`std::sys::pal::windows::impl$3::is_zero (1 samples, 1.89%)</title><rect x="60.3774%" y="949" width="1.8868%" height="15" fill="rgb(248,100,22)" fg:x="32" fg:w="1"/><text x="60.6274%" y="959.50">s..</text></g><g><title>`0x7FFFAA55D1B2 (1 samples, 1.89%)</title><rect x="60.3774%" y="933" width="1.8868%" height="15" fill="rgb(208,67,9)" fg:x="32" fg:w="1"/><text x="60.6274%" y="943.50">`..</text></g><g><title>`0x7FFFAA627CA4 (1 samples, 1.89%)</title><rect x="60.3774%" y="917" width="1.8868%" height="15" fill="rgb(219,133,21)" fg:x="32" fg:w="1"/><text x="60.6274%" y="927.50">`..</text></g><g><title>`0x7FFFAA535DF6 (1 samples, 1.89%)</title><rect x="60.3774%" y="901" width="1.8868%" height="15" fill="rgb(246,46,29)" fg:x="32" fg:w="1"/><text x="60.6274%" y="911.50">`..</text></g><g><title>`0x7FFFAD247A01 (1 samples, 1.89%)</title><rect x="60.3774%" y="885" width="1.8868%" height="15" fill="rgb(246,185,52)" fg:x="32" fg:w="1"/><text x="60.6274%" y="895.50">`..</text></g><g><title>`0x7FFFAD2B9747 (1 samples, 1.89%)</title><rect x="60.3774%" y="869" width="1.8868%" height="15" fill="rgb(252,136,11)" fg:x="32" fg:w="1"/><text x="60.6274%" y="879.50">`..</text></g><g><title>`0x7FFFAD367EB1 (1 samples, 1.89%)</title><rect x="60.3774%" y="853" width="1.8868%" height="15" fill="rgb(219,138,53)" fg:x="32" fg:w="1"/><text x="60.6274%" y="863.50">`..</text></g><g><title>`0x7FFFAD367F28 (1 samples, 1.89%)</title><rect x="60.3774%" y="837" width="1.8868%" height="15" fill="rgb(211,51,23)" fg:x="32" fg:w="1"/><text x="60.6274%" y="847.50">`..</text></g><g><title>`0x7FFFAD36E071 (1 samples, 1.89%)</title><rect x="60.3774%" y="821" width="1.8868%" height="15" fill="rgb(247,221,28)" fg:x="32" fg:w="1"/><text x="60.6274%" y="831.50">`..</text></g><g><title>`0x7FFFAD3717C3 (1 samples, 1.89%)</title><rect x="60.3774%" y="805" width="1.8868%" height="15" fill="rgb(251,222,45)" fg:x="32" fg:w="1"/><text x="60.6274%" y="815.50">`..</text></g><g><title>`0x7FFFAD371787 (1 samples, 1.89%)</title><rect x="60.3774%" y="789" width="1.8868%" height="15" fill="rgb(217,162,53)" fg:x="32" fg:w="1"/><text x="60.6274%" y="799.50">`..</text></g><g><title>`0x7FFFAD2AA41A (1 samples, 1.89%)</title><rect x="60.3774%" y="773" width="1.8868%" height="15" fill="rgb(229,93,14)" fg:x="32" fg:w="1"/><text x="60.6274%" y="783.50">`..</text></g><g><title>soul_lang_rust.exe`alloc::vec::Vec&lt;enum2$&lt;soul_lang_rust::abstract_styntax_tree::abstract_styntax_tree::IStatment&gt;,alloc::alloc::Global&gt;::push(enum2$ (1 samples, 1.89%)</title><rect x="62.2642%" y="901" width="1.8868%" height="15" fill="rgb(209,67,49)" fg:x="33" fg:w="1"/><text x="62.5142%" y="911.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;soul_lang_rust::abstract_styntax_tree::abstract_styntax_tree::IStatment&gt;,alloc::alloc::Global&gt;::grow_one&lt;enum2$&lt;soul_lang_rust::abstract_styntax_tree::abstract_styntax_tree::IStatment&gt;,alloc::alloc::Global&gt; (1 samples, 1.89%)</title><rect x="62.2642%" y="885" width="1.8868%" height="15" fill="rgb(213,87,29)" fg:x="33" fg:w="1"/><text x="62.5142%" y="895.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 1.89%)</title><rect x="62.2642%" y="869" width="1.8868%" height="15" fill="rgb(205,151,52)" fg:x="33" fg:w="1"/><text x="62.5142%" y="879.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 1.89%)</title><rect x="62.2642%" y="853" width="1.8868%" height="15" fill="rgb(253,215,39)" fg:x="33" fg:w="1"/><text x="62.5142%" y="863.50">s..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 1.89%)</title><rect x="62.2642%" y="837" width="1.8868%" height="15" fill="rgb(221,220,41)" fg:x="33" fg:w="1"/><text x="62.5142%" y="847.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 1.89%)</title><rect x="62.2642%" y="821" width="1.8868%" height="15" fill="rgb(218,133,21)" fg:x="33" fg:w="1"/><text x="62.5142%" y="831.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 1.89%)</title><rect x="62.2642%" y="805" width="1.8868%" height="15" fill="rgb(221,193,43)" fg:x="33" fg:w="1"/><text x="62.5142%" y="815.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 1.89%)</title><rect x="62.2642%" y="789" width="1.8868%" height="15" fill="rgb(240,128,52)" fg:x="33" fg:w="1"/><text x="62.5142%" y="799.50">s..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 1.89%)</title><rect x="62.2642%" y="773" width="1.8868%" height="15" fill="rgb(253,114,12)" fg:x="33" fg:w="1"/><text x="62.5142%" y="783.50">s..</text></g><g><title>`0x7FFFAD288F8D (1 samples, 1.89%)</title><rect x="62.2642%" y="757" width="1.8868%" height="15" fill="rgb(215,223,47)" fg:x="33" fg:w="1"/><text x="62.5142%" y="767.50">`..</text></g><g><title>`0x7FFFAD2891AC (1 samples, 1.89%)</title><rect x="62.2642%" y="741" width="1.8868%" height="15" fill="rgb(248,225,23)" fg:x="33" fg:w="1"/><text x="62.5142%" y="751.50">`..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (1 samples, 1.89%)</title><rect x="64.1509%" y="901" width="1.8868%" height="15" fill="rgb(250,108,0)" fg:x="34" fg:w="1"/><text x="64.4009%" y="911.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::collections::btree::map::impl$80::from_iter&lt;alloc::string::String,soul_lang_rust::meta_data::scope_and_var::var_info::VarInfo,core::iter::adapters::map::Map&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo&gt;,soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_body::internal_get_body::closure_env$1&gt;,alloc::collections::btree::map::Iter&lt;alloc::string::String,soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo&gt; &gt;,soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_body::internal_get_body::closure_env$2&gt; &gt;(core::iter::adapters::map::Map&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo&gt;,soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_body::internal_get_body::closure_env$1&gt;,alloc::collections::btree::map::Iter (1 samples, 1.89%)</title><rect x="64.1509%" y="885" width="1.8868%" height="15" fill="rgb(228,208,7)" fg:x="34" fg:w="1"/><text x="64.4009%" y="895.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::vec::Vec&lt;tuple$&lt;alloc::string::String,soul_lang_rust::meta_data::scope_and_var::var_info::VarInfo&gt;,alloc::alloc::Global&gt;::is_empty (1 samples, 1.89%)</title><rect x="64.1509%" y="869" width="1.8868%" height="15" fill="rgb(244,45,10)" fg:x="34" fg:w="1"/><text x="64.4009%" y="879.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::vec::Vec&lt;tuple$&lt;alloc::string::String,soul_lang_rust::meta_data::scope_and_var::var_info::VarInfo&gt;,alloc::alloc::Global&gt;::len (1 samples, 1.89%)</title><rect x="64.1509%" y="853" width="1.8868%" height="15" fill="rgb(207,125,25)" fg:x="34" fg:w="1"/><text x="64.4009%" y="863.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;tuple$&lt;alloc::string::String,soul_lang_rust::meta_data::scope_and_var::var_info::VarInfo&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo&gt;,soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_body::internal_get_body::closure_env$1&gt;,alloc::collections::btree::map::Iter&lt;alloc::string::String,soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo&gt; &gt;,soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_body::internal_get_body::closure_env$2&gt; &gt;(core::iter::adapters::map::Map&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo&gt;,soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_body::internal_get_body::closure_env$1&gt;,alloc::collections::btree::map::Iter (1 samples, 1.89%)</title><rect x="64.1509%" y="837" width="1.8868%" height="15" fill="rgb(210,195,18)" fg:x="34" fg:w="1"/><text x="64.4009%" y="847.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter(core::iter::adapters::map::Map&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo&gt;,soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_body::internal_get_body::closure_env$1&gt;,alloc::collections::btree::map::Iter (1 samples, 1.89%)</title><rect x="64.1509%" y="821" width="1.8868%" height="15" fill="rgb(249,80,12)" fg:x="34" fg:w="1"/><text x="64.4009%" y="831.50">s..</text></g><g><title>soul_lang_rust.exe`core::iter::adapters::map::impl$2::next(core::iter::adapters::map::Map&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo&gt;,soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_body::internal_get_body::closure_env$1&gt;,alloc::collections::btree::map::Iter (1 samples, 1.89%)</title><rect x="64.1509%" y="805" width="1.8868%" height="15" fill="rgb(221,65,9)" fg:x="34" fg:w="1"/><text x="64.4009%" y="815.50">s..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;core::option::Option&lt;tuple$&lt;ref$&lt;alloc::string::String&gt;,ref$&lt;soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo&gt; &gt; &gt; &gt;::map(enum2$&lt;core::option::Option&lt;tuple$&lt;ref$&lt;alloc::string::String&gt;,ref$ (1 samples, 1.89%)</title><rect x="64.1509%" y="789" width="1.8868%" height="15" fill="rgb(235,49,36)" fg:x="34" fg:w="1"/><text x="64.4009%" y="799.50">s..</text></g><g><title>soul_lang_rust.exe`core::ops::function::impls::impl$4::call_once&lt;tuple$&lt;tuple$&lt;ref$&lt;alloc::string::String&gt;,ref$&lt;soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo&gt; &gt; &gt;,soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_body::internal_get_body::closure_env$2&gt;(soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_body::internal_get_body::closure_env$2*, tuple$&lt;ref$&lt;alloc::string::String&gt;,ref$ (1 samples, 1.89%)</title><rect x="64.1509%" y="773" width="1.8868%" height="15" fill="rgb(225,32,20)" fg:x="34" fg:w="1"/><text x="64.4009%" y="783.50">s..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;core::result::Result&lt;soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::multi_stament_result::MultiStamentResult&lt;enum2$&lt;soul_lang_rust::abstract_styntax_tree::abstract_styntax_tree::IExpression&gt; &gt;,soul_lang_rust::meta_data::soul_error::soul_error::SoulError&gt; &gt;::map(enum2$&lt;core::result::Result&lt;soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::multi_stament_result::MultiStamentResult&lt;enum2$ (1 samples, 1.89%)</title><rect x="66.0377%" y="869" width="1.8868%" height="15" fill="rgb(215,141,46)" fg:x="35" fg:w="1"/><text x="66.2877%" y="879.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_expression::get_function_call::get_function_call::get_function_call (1 samples, 1.89%)</title><rect x="66.0377%" y="853" width="1.8868%" height="15" fill="rgb(250,160,47)" fg:x="35" fg:w="1"/><text x="66.2877%" y="863.50">s..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;soul_lang_rust::meta_data::scope_and_var::scope::ScopeId,soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionID&gt;,soul_lang_rust::meta_data::soul_error::soul_error::SoulError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 1.89%)</title><rect x="66.0377%" y="837" width="1.8868%" height="15" fill="rgb(216,222,40)" fg:x="35" fg:w="1"/><text x="66.2877%" y="847.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::meta_data::MetaData::try_get_function(ref$&lt;str$&gt;, soul_lang_rust::tokenizer::token::TokenIterator*, soul_lang_rust::meta_data::current_context::current_context::CurrentContext*, alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo,alloc::alloc::Global&gt;*, alloc::vec::Vec (1 samples, 1.89%)</title><rect x="66.0377%" y="821" width="1.8868%" height="15" fill="rgb(234,217,39)" fg:x="35" fg:w="1"/><text x="66.2877%" y="831.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::meta_data::MetaData::internal_try_get_function(ref$&lt;str$&gt;, soul_lang_rust::tokenizer::token::TokenIterator*, soul_lang_rust::meta_data::current_context::current_context::CurrentContext*, alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo,alloc::alloc::Global&gt;*, alloc::vec::Vec (1 samples, 1.89%)</title><rect x="66.0377%" y="805" width="1.8868%" height="15" fill="rgb(207,178,40)" fg:x="35" fg:w="1"/><text x="66.2877%" y="815.50">s..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option (1 samples, 1.89%)</title><rect x="66.0377%" y="789" width="1.8868%" height="15" fill="rgb(221,136,13)" fg:x="35" fg:w="1"/><text x="66.2877%" y="799.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::scope_and_var::scope::Scope::try_get_function(ref$&lt;str$&gt;, soul_lang_rust::tokenizer::token::Token*, soul_lang_rust::meta_data::meta_data::MetaData*, soul_lang_rust::meta_data::current_context::current_context::CurrentContext*, alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo,alloc::alloc::Global&gt;*, alloc::vec::Vec (1 samples, 1.89%)</title><rect x="66.0377%" y="773" width="1.8868%" height="15" fill="rgb(249,199,10)" fg:x="35" fg:w="1"/><text x="66.2877%" y="783.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration::are_arguments_compatible(soul_lang_rust::tokenizer::token::Token*, alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo,alloc::alloc::Global&gt;*, alloc::vec::Vec (1 samples, 1.89%)</title><rect x="66.0377%" y="757" width="1.8868%" height="15" fill="rgb(249,222,13)" fg:x="35" fg:w="1"/><text x="66.2877%" y="767.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo::are_compatible (1 samples, 1.89%)</title><rect x="66.0377%" y="741" width="1.8868%" height="15" fill="rgb(244,185,38)" fg:x="35" fg:w="1"/><text x="66.2877%" y="751.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::soul_type::SoulType::is_convertable (1 samples, 1.89%)</title><rect x="66.0377%" y="725" width="1.8868%" height="15" fill="rgb(236,202,9)" fg:x="35" fg:w="1"/><text x="66.2877%" y="735.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::soul_type::SoulType::convert_typedef_to_original (1 samples, 1.89%)</title><rect x="66.0377%" y="709" width="1.8868%" height="15" fill="rgb(250,229,37)" fg:x="35" fg:w="1"/><text x="66.2877%" y="719.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::soul_type::SoulType::from_stringed_type(ref$ (1 samples, 1.89%)</title><rect x="66.0377%" y="693" width="1.8868%" height="15" fill="rgb(206,174,23)" fg:x="35" fg:w="1"/><text x="66.2877%" y="703.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::soul_type::SoulType::internal_from_stringed_type(ref$ (1 samples, 1.89%)</title><rect x="66.0377%" y="677" width="1.8868%" height="15" fill="rgb(211,33,43)" fg:x="35" fg:w="1"/><text x="66.2877%" y="687.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::soul_type::SoulType::new (1 samples, 1.89%)</title><rect x="66.0377%" y="661" width="1.8868%" height="15" fill="rgb(245,58,50)" fg:x="35" fg:w="1"/><text x="66.2877%" y="671.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::soul_type::get_type_tokens(ref$ (1 samples, 1.89%)</title><rect x="66.0377%" y="645" width="1.8868%" height="15" fill="rgb(244,68,36)" fg:x="35" fg:w="1"/><text x="66.2877%" y="655.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;ref$ (1 samples, 1.89%)</title><rect x="66.0377%" y="629" width="1.8868%" height="15" fill="rgb(232,229,15)" fg:x="35" fg:w="1"/><text x="66.2877%" y="639.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::vec::Vec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::as_slice (1 samples, 1.89%)</title><rect x="66.0377%" y="613" width="1.8868%" height="15" fill="rgb(254,30,23)" fg:x="35" fg:w="1"/><text x="66.2877%" y="623.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::vec::Vec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::as_ptr (1 samples, 1.89%)</title><rect x="66.0377%" y="597" width="1.8868%" height="15" fill="rgb(235,160,14)" fg:x="35" fg:w="1"/><text x="66.2877%" y="607.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::ptr (1 samples, 1.89%)</title><rect x="66.0377%" y="581" width="1.8868%" height="15" fill="rgb(212,155,44)" fg:x="35" fg:w="1"/><text x="66.2877%" y="591.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 1.89%)</title><rect x="66.0377%" y="565" width="1.8868%" height="15" fill="rgb(226,2,50)" fg:x="35" fg:w="1"/><text x="66.2877%" y="575.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 1.89%)</title><rect x="66.0377%" y="549" width="1.8868%" height="15" fill="rgb(234,177,6)" fg:x="35" fg:w="1"/><text x="66.2877%" y="559.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::tokenizer::tokenizer::impl$0::split_on(ref$&lt;str$&gt;*, alloc::vec::Vec&lt;ref$ (1 samples, 1.89%)</title><rect x="66.0377%" y="533" width="1.8868%" height="15" fill="rgb(217,24,9)" fg:x="35" fg:w="1"/><text x="66.2877%" y="543.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::vec::Vec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::push(ref$ (1 samples, 1.89%)</title><rect x="66.0377%" y="517" width="1.8868%" height="15" fill="rgb(220,13,46)" fg:x="35" fg:w="1"/><text x="66.2877%" y="527.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::grow_one&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt; (1 samples, 1.89%)</title><rect x="66.0377%" y="501" width="1.8868%" height="15" fill="rgb(239,221,27)" fg:x="35" fg:w="1"/><text x="66.2877%" y="511.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 1.89%)</title><rect x="66.0377%" y="485" width="1.8868%" height="15" fill="rgb(222,198,25)" fg:x="35" fg:w="1"/><text x="66.2877%" y="495.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 1.89%)</title><rect x="66.0377%" y="469" width="1.8868%" height="15" fill="rgb(211,99,13)" fg:x="35" fg:w="1"/><text x="66.2877%" y="479.50">s..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 1.89%)</title><rect x="66.0377%" y="453" width="1.8868%" height="15" fill="rgb(232,111,31)" fg:x="35" fg:w="1"/><text x="66.2877%" y="463.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 1.89%)</title><rect x="66.0377%" y="437" width="1.8868%" height="15" fill="rgb(245,82,37)" fg:x="35" fg:w="1"/><text x="66.2877%" y="447.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_stament::get_statment::get_else_if_statment (1 samples, 1.89%)</title><rect x="67.9245%" y="869" width="1.8868%" height="15" fill="rgb(227,149,46)" fg:x="36" fg:w="1"/><text x="68.1745%" y="879.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::alloc::exchange_malloc (1 samples, 1.89%)</title><rect x="67.9245%" y="853" width="1.8868%" height="15" fill="rgb(218,36,50)" fg:x="36" fg:w="1"/><text x="68.1745%" y="863.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_expression::get_expression::get_expression(soul_lang_rust::tokenizer::token::TokenIterator*, soul_lang_rust::meta_data::meta_data::MetaData*, soul_lang_rust::meta_data::current_context::current_context::CurrentContext*, enum2$&lt;core::option::Option&lt;ref$&lt;soul_lang_rust::meta_data::soul_type::soul_type::SoulType&gt; &gt; &gt;*, bool, alloc::vec::Vec&lt;ref$ (1 samples, 1.89%)</title><rect x="67.9245%" y="837" width="1.8868%" height="15" fill="rgb(226,80,48)" fg:x="36" fg:w="1"/><text x="68.1745%" y="847.50">s..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;enum2$ (1 samples, 1.89%)</title><rect x="67.9245%" y="821" width="1.8868%" height="15" fill="rgb(238,224,15)" fg:x="36" fg:w="1"/><text x="68.1745%" y="831.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_expression::get_expression::get_binairy_expression (1 samples, 1.89%)</title><rect x="67.9245%" y="805" width="1.8868%" height="15" fill="rgb(241,136,10)" fg:x="36" fg:w="1"/><text x="68.1745%" y="815.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_expression::get_expression::is_valid_oparator (1 samples, 1.89%)</title><rect x="67.9245%" y="789" width="1.8868%" height="15" fill="rgb(208,32,45)" fg:x="36" fg:w="1"/><text x="68.1745%" y="799.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_expression::get_expression::get_allowed_expr_operators (1 samples, 1.89%)</title><rect x="67.9245%" y="773" width="1.8868%" height="15" fill="rgb(207,135,9)" fg:x="36" fg:w="1"/><text x="68.1745%" y="783.50">s..</text></g><g><title>soul_lang_rust.exe`std::collections::hash::map::HashMap&lt;soul_lang_rust::abstract_styntax_tree::operator_type::ExprOperatorType,usize,std::hash::random::RandomState&gt;::entry (1 samples, 1.89%)</title><rect x="67.9245%" y="757" width="1.8868%" height="15" fill="rgb(206,86,44)" fg:x="36" fg:w="1"/><text x="68.1745%" y="767.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::map::HashMap&lt;soul_lang_rust::abstract_styntax_tree::operator_type::ExprOperatorType,usize,std::hash::random::RandomState,alloc::alloc::Global&gt;::rustc_entry (1 samples, 1.89%)</title><rect x="67.9245%" y="741" width="1.8868%" height="15" fill="rgb(245,177,15)" fg:x="36" fg:w="1"/><text x="68.1745%" y="751.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::raw::RawTable&lt;tuple$&lt;soul_lang_rust::abstract_styntax_tree::operator_type::ExprOperatorType,usize&gt;,alloc::alloc::Global&gt;::find(unsigned long long, hashbrown::rustc_entry::impl$0::rustc_entry::closure_env$0 (1 samples, 1.89%)</title><rect x="67.9245%" y="725" width="1.8868%" height="15" fill="rgb(206,64,50)" fg:x="36" fg:w="1"/><text x="68.1745%" y="735.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (1 samples, 1.89%)</title><rect x="67.9245%" y="709" width="1.8868%" height="15" fill="rgb(234,36,40)" fg:x="36" fg:w="1"/><text x="68.1745%" y="719.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::control::tag::Tag::full (1 samples, 1.89%)</title><rect x="67.9245%" y="693" width="1.8868%" height="15" fill="rgb(213,64,8)" fg:x="36" fg:w="1"/><text x="68.1745%" y="703.50">s..</text></g><g><title>soul_lang_rust.exe`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;soul_lang_rust::abstract_styntax_tree::operator_type::ExprOperatorType&gt; &gt; (1 samples, 1.89%)</title><rect x="67.9245%" y="677" width="1.8868%" height="15" fill="rgb(210,75,36)" fg:x="36" fg:w="1"/><text x="68.1745%" y="687.50">s..</text></g><g><title>soul_lang_rust.exe`std::hash::random::impl$4::finish (1 samples, 1.89%)</title><rect x="67.9245%" y="661" width="1.8868%" height="15" fill="rgb(229,88,21)" fg:x="36" fg:w="1"/><text x="68.1745%" y="671.50">s..</text></g><g><title>soul_lang_rust.exe`core::hash::sip::impl$4::finish (1 samples, 1.89%)</title><rect x="67.9245%" y="645" width="1.8868%" height="15" fill="rgb(252,204,47)" fg:x="36" fg:w="1"/><text x="68.1745%" y="655.50">s..</text></g><g><title>soul_lang_rust.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (1 samples, 1.89%)</title><rect x="67.9245%" y="629" width="1.8868%" height="15" fill="rgb(208,77,27)" fg:x="36" fg:w="1"/><text x="68.1745%" y="639.50">s..</text></g><g><title>soul_lang_rust.exe`core::hash::sip::impl$8::d_rounds (1 samples, 1.89%)</title><rect x="67.9245%" y="613" width="1.8868%" height="15" fill="rgb(221,76,26)" fg:x="36" fg:w="1"/><text x="68.1745%" y="623.50">s..</text></g><g><title>soul_lang_rust.exe`core::num::impl$9::wrapping_add (1 samples, 1.89%)</title><rect x="67.9245%" y="597" width="1.8868%" height="15" fill="rgb(225,139,18)" fg:x="36" fg:w="1"/><text x="68.1745%" y="607.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_function_body::get_function_body (5 samples, 9.43%)</title><rect x="62.2642%" y="965" width="9.4340%" height="15" fill="rgb(230,137,11)" fg:x="33" fg:w="5"/><text x="62.5142%" y="975.50">soul_lang_rus..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (5 samples, 9.43%)</title><rect x="62.2642%" y="949" width="9.4340%" height="15" fill="rgb(212,28,1)" fg:x="33" fg:w="5"/><text x="62.5142%" y="959.50">soul_lang_rus..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_body::get_body(soul_lang_rust::tokenizer::token::TokenIterator*, soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_stament::statment_type::statment_type::StatmentIterator*, soul_lang_rust::meta_data::meta_data::MetaData*, soul_lang_rust::meta_data::current_context::current_context::CurrentContext*, enum2$&lt;core::option::Option (5 samples, 9.43%)</title><rect x="62.2642%" y="933" width="9.4340%" height="15" fill="rgb(248,164,17)" fg:x="33" fg:w="5"/><text x="62.5142%" y="943.50">soul_lang_rus..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_body::internal_get_body(soul_lang_rust::tokenizer::token::TokenIterator*, soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_stament::statment_type::statment_type::StatmentIterator*, soul_lang_rust::meta_data::meta_data::MetaData*, soul_lang_rust::meta_data::current_context::current_context::CurrentContext*, enum2$&lt;core::option::Option (5 samples, 9.43%)</title><rect x="62.2642%" y="917" width="9.4340%" height="15" fill="rgb(222,171,42)" fg:x="33" fg:w="5"/><text x="62.5142%" y="927.50">soul_lang_rus..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::multi_stament_result::MultiStamentResult&lt;enum2$ (3 samples, 5.66%)</title><rect x="66.0377%" y="901" width="5.6604%" height="15" fill="rgb(243,84,45)" fg:x="35" fg:w="3"/><text x="66.2877%" y="911.50">soul_la..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_stament::get_statment::get_statment (3 samples, 5.66%)</title><rect x="66.0377%" y="885" width="5.6604%" height="15" fill="rgb(252,49,23)" fg:x="35" fg:w="3"/><text x="66.2877%" y="895.50">soul_la..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_stament::get_statment::get_while_statment (1 samples, 1.89%)</title><rect x="69.8113%" y="869" width="1.8868%" height="15" fill="rgb(215,19,7)" fg:x="37" fg:w="1"/><text x="70.0613%" y="879.50">s..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (1 samples, 1.89%)</title><rect x="69.8113%" y="853" width="1.8868%" height="15" fill="rgb(238,81,41)" fg:x="37" fg:w="1"/><text x="70.0613%" y="863.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_body::get_body(soul_lang_rust::tokenizer::token::TokenIterator*, soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_stament::statment_type::statment_type::StatmentIterator*, soul_lang_rust::meta_data::meta_data::MetaData*, soul_lang_rust::meta_data::current_context::current_context::CurrentContext*, enum2$&lt;core::option::Option (1 samples, 1.89%)</title><rect x="69.8113%" y="837" width="1.8868%" height="15" fill="rgb(210,199,37)" fg:x="37" fg:w="1"/><text x="70.0613%" y="847.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_body::internal_get_body(soul_lang_rust::tokenizer::token::TokenIterator*, soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_stament::statment_type::statment_type::StatmentIterator*, soul_lang_rust::meta_data::meta_data::MetaData*, soul_lang_rust::meta_data::current_context::current_context::CurrentContext*, enum2$&lt;core::option::Option (1 samples, 1.89%)</title><rect x="69.8113%" y="821" width="1.8868%" height="15" fill="rgb(244,192,49)" fg:x="37" fg:w="1"/><text x="70.0613%" y="831.50">s..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::multi_stament_result::MultiStamentResult&lt;enum2$ (1 samples, 1.89%)</title><rect x="69.8113%" y="805" width="1.8868%" height="15" fill="rgb(226,211,11)" fg:x="37" fg:w="1"/><text x="70.0613%" y="815.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_stament::get_statment::get_statment (1 samples, 1.89%)</title><rect x="69.8113%" y="789" width="1.8868%" height="15" fill="rgb(236,162,54)" fg:x="37" fg:w="1"/><text x="70.0613%" y="799.50">s..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;core::result::Result&lt;soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::multi_stament_result::MultiStamentResult&lt;enum2$&lt;soul_lang_rust::abstract_styntax_tree::abstract_styntax_tree::IExpression&gt; &gt;,soul_lang_rust::meta_data::soul_error::soul_error::SoulError&gt; &gt;::map(enum2$&lt;core::result::Result&lt;soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::multi_stament_result::MultiStamentResult&lt;enum2$ (1 samples, 1.89%)</title><rect x="69.8113%" y="773" width="1.8868%" height="15" fill="rgb(220,229,9)" fg:x="37" fg:w="1"/><text x="70.0613%" y="783.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_expression::get_function_call::get_function_call::get_function_call (1 samples, 1.89%)</title><rect x="69.8113%" y="757" width="1.8868%" height="15" fill="rgb(250,87,22)" fg:x="37" fg:w="1"/><text x="70.0613%" y="767.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_expression::get_function_call::get_function_call::get_arguments (1 samples, 1.89%)</title><rect x="69.8113%" y="741" width="1.8868%" height="15" fill="rgb(239,43,17)" fg:x="37" fg:w="1"/><text x="70.0613%" y="751.50">s..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;core::result::Result&lt;soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_expression::get_expression::GetExpressionResult,soul_lang_rust::meta_data::soul_error::soul_error::SoulError&gt; &gt;::map_err(enum2$&lt;core::result::Result (1 samples, 1.89%)</title><rect x="69.8113%" y="725" width="1.8868%" height="15" fill="rgb(231,177,25)" fg:x="37" fg:w="1"/><text x="70.0613%" y="735.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_expression::get_expression::get_expression(soul_lang_rust::tokenizer::token::TokenIterator*, soul_lang_rust::meta_data::meta_data::MetaData*, soul_lang_rust::meta_data::current_context::current_context::CurrentContext*, enum2$&lt;core::option::Option&lt;ref$&lt;soul_lang_rust::meta_data::soul_type::soul_type::SoulType&gt; &gt; &gt;*, bool, alloc::vec::Vec&lt;ref$ (1 samples, 1.89%)</title><rect x="69.8113%" y="709" width="1.8868%" height="15" fill="rgb(219,179,1)" fg:x="37" fg:w="1"/><text x="70.0613%" y="719.50">s..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 1.89%)</title><rect x="69.8113%" y="693" width="1.8868%" height="15" fill="rgb(238,219,53)" fg:x="37" fg:w="1"/><text x="70.0613%" y="703.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_expression::get_expression::convert_expression(soul_lang_rust::tokenizer::token::TokenIterator*, soul_lang_rust::meta_data::meta_data::MetaData*, soul_lang_rust::meta_data::current_context::current_context::CurrentContext*, soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_expression::get_expression::ExpressionStacks*, soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::multi_stament_result::MultiStamentResult&lt;enum2$&lt;soul_lang_rust::abstract_styntax_tree::abstract_styntax_tree::IExpression&gt; &gt;*, enum2$&lt;core::option::Option&lt;ref$&lt;soul_lang_rust::meta_data::soul_type::soul_type::SoulType&gt; &gt; &gt;*, alloc::vec::Vec&lt;ref$ (1 samples, 1.89%)</title><rect x="69.8113%" y="677" width="1.8868%" height="15" fill="rgb(232,167,36)" fg:x="37" fg:w="1"/><text x="70.0613%" y="687.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_expression::get_expression::convert_function_call(soul_lang_rust::tokenizer::token::TokenIterator*, soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_expression::get_expression::ExpressionStacks*, soul_lang_rust::meta_data::meta_data::MetaData*, soul_lang_rust::meta_data::current_context::current_context::CurrentContext*, soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::multi_stament_result::MultiStamentResult&lt;enum2$ (1 samples, 1.89%)</title><rect x="69.8113%" y="661" width="1.8868%" height="15" fill="rgb(244,19,51)" fg:x="37" fg:w="1"/><text x="70.0613%" y="671.50">s..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::multi_stament_result::MultiStamentResult&lt;enum2$ (1 samples, 1.89%)</title><rect x="69.8113%" y="645" width="1.8868%" height="15" fill="rgb(224,6,22)" fg:x="37" fg:w="1"/><text x="70.0613%" y="655.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_expression::get_function_call::get_function_call::get_function_call (1 samples, 1.89%)</title><rect x="69.8113%" y="629" width="1.8868%" height="15" fill="rgb(224,145,5)" fg:x="37" fg:w="1"/><text x="70.0613%" y="639.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_expression::get_function_call::get_function_call::get_arguments (1 samples, 1.89%)</title><rect x="69.8113%" y="613" width="1.8868%" height="15" fill="rgb(234,130,49)" fg:x="37" fg:w="1"/><text x="70.0613%" y="623.50">s..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;core::result::Result&lt;soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_expression::get_expression::GetExpressionResult,soul_lang_rust::meta_data::soul_error::soul_error::SoulError&gt; &gt;::map_err(enum2$&lt;core::result::Result (1 samples, 1.89%)</title><rect x="69.8113%" y="597" width="1.8868%" height="15" fill="rgb(254,6,2)" fg:x="37" fg:w="1"/><text x="70.0613%" y="607.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_expression::get_expression::get_expression(soul_lang_rust::tokenizer::token::TokenIterator*, soul_lang_rust::meta_data::meta_data::MetaData*, soul_lang_rust::meta_data::current_context::current_context::CurrentContext*, enum2$&lt;core::option::Option&lt;ref$&lt;soul_lang_rust::meta_data::soul_type::soul_type::SoulType&gt; &gt; &gt;*, bool, alloc::vec::Vec&lt;ref$ (1 samples, 1.89%)</title><rect x="69.8113%" y="581" width="1.8868%" height="15" fill="rgb(208,96,46)" fg:x="37" fg:w="1"/><text x="70.0613%" y="591.50">s..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 1.89%)</title><rect x="69.8113%" y="565" width="1.8868%" height="15" fill="rgb(239,3,39)" fg:x="37" fg:w="1"/><text x="70.0613%" y="575.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_expression::get_expression::convert_expression(soul_lang_rust::tokenizer::token::TokenIterator*, soul_lang_rust::meta_data::meta_data::MetaData*, soul_lang_rust::meta_data::current_context::current_context::CurrentContext*, soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_expression::get_expression::ExpressionStacks*, soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::multi_stament_result::MultiStamentResult&lt;enum2$&lt;soul_lang_rust::abstract_styntax_tree::abstract_styntax_tree::IExpression&gt; &gt;*, enum2$&lt;core::option::Option&lt;ref$&lt;soul_lang_rust::meta_data::soul_type::soul_type::SoulType&gt; &gt; &gt;*, alloc::vec::Vec&lt;ref$ (1 samples, 1.89%)</title><rect x="69.8113%" y="549" width="1.8868%" height="15" fill="rgb(233,210,1)" fg:x="37" fg:w="1"/><text x="70.0613%" y="559.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_expression::get_expression::convert_variable(soul_lang_rust::tokenizer::token::TokenIterator*, soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_expression::get_expression::ExpressionStacks*, soul_lang_rust::meta_data::meta_data::MetaData*, soul_lang_rust::meta_data::current_context::current_context::CurrentContext*, tuple$&lt;ref$ (1 samples, 1.89%)</title><rect x="69.8113%" y="533" width="1.8868%" height="15" fill="rgb(244,137,37)" fg:x="37" fg:w="1"/><text x="70.0613%" y="543.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::soul_type::SoulType::from_stringed_type(ref$ (1 samples, 1.89%)</title><rect x="69.8113%" y="517" width="1.8868%" height="15" fill="rgb(240,136,2)" fg:x="37" fg:w="1"/><text x="70.0613%" y="527.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::soul_type::SoulType::internal_from_stringed_type(ref$ (1 samples, 1.89%)</title><rect x="69.8113%" y="501" width="1.8868%" height="15" fill="rgb(239,18,37)" fg:x="37" fg:w="1"/><text x="70.0613%" y="511.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::type_modifiers::impl$5::eq (1 samples, 1.89%)</title><rect x="69.8113%" y="485" width="1.8868%" height="15" fill="rgb(218,185,22)" fg:x="37" fg:w="1"/><text x="70.0613%" y="495.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::type_modifiers::_::impl$3::eq (1 samples, 1.89%)</title><rect x="69.8113%" y="469" width="1.8868%" height="15" fill="rgb(225,218,4)" fg:x="37" fg:w="1"/><text x="70.0613%" y="479.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::type_modifiers::TypeModifiers::from_str(ref$ (1 samples, 1.89%)</title><rect x="69.8113%" y="453" width="1.8868%" height="15" fill="rgb(230,182,32)" fg:x="37" fg:w="1"/><text x="70.0613%" y="463.50">s..</text></g><g><title>soul_lang_rust.exe`once_cell::sync::impl$12::deref(once_cell::sync::Lazy&lt;soul_lang_rust::meta_data::soul_names::SoulNames,soul_lang_rust::meta_data::soul_names::SoulNames (*) (1 samples, 1.89%)</title><rect x="69.8113%" y="437" width="1.8868%" height="15" fill="rgb(242,56,43)" fg:x="37" fg:w="1"/><text x="70.0613%" y="447.50">s..</text></g><g><title>soul_lang_rust.exe`core::str::traits::impl$1::eq(ref$&lt;str$&gt;, ref$ (1 samples, 1.89%)</title><rect x="69.8113%" y="421" width="1.8868%" height="15" fill="rgb(233,99,24)" fg:x="37" fg:w="1"/><text x="70.0613%" y="431.50">s..</text></g><g><title>soul_lang_rust.exe`core::cmp::impls::impl$9::eq(ref$&lt;slice2$&lt;u8&gt; &gt;*, ref$&lt;slice2$ (1 samples, 1.89%)</title><rect x="69.8113%" y="405" width="1.8868%" height="15" fill="rgb(234,209,42)" fg:x="37" fg:w="1"/><text x="70.0613%" y="415.50">s..</text></g><g><title>soul_lang_rust.exe`core::slice::cmp::impl$0::eq(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (1 samples, 1.89%)</title><rect x="69.8113%" y="389" width="1.8868%" height="15" fill="rgb(227,7,12)" fg:x="37" fg:w="1"/><text x="70.0613%" y="399.50">s..</text></g><g><title>soul_lang_rust.exe`core::slice::cmp::impl$5::equal(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (1 samples, 1.89%)</title><rect x="69.8113%" y="373" width="1.8868%" height="15" fill="rgb(245,203,43)" fg:x="37" fg:w="1"/><text x="70.0613%" y="383.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_names::SoulNames::get_name&lt;soul_lang_rust::meta_data::soul_names::NamesTypeModifiers&gt; (1 samples, 1.89%)</title><rect x="69.8113%" y="357" width="1.8868%" height="15" fill="rgb(238,205,33)" fg:x="37" fg:w="1"/><text x="70.0613%" y="367.50">s..</text></g><g><title>`0x7FFFAD2D54A7 (1 samples, 1.89%)</title><rect x="69.8113%" y="341" width="1.8868%" height="15" fill="rgb(231,56,7)" fg:x="37" fg:w="1"/><text x="70.0613%" y="351.50">`..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::multi_stament_result::MultiStamentResult&lt;enum2$ (6 samples, 11.32%)</title><rect x="62.2642%" y="997" width="11.3208%" height="15" fill="rgb(244,186,29)" fg:x="33" fg:w="6"/><text x="62.5142%" y="1007.50">soul_lang_rust.ex..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_stament::get_statment::get_statment (6 samples, 11.32%)</title><rect x="62.2642%" y="981" width="11.3208%" height="15" fill="rgb(234,111,31)" fg:x="33" fg:w="6"/><text x="62.5142%" y="991.50">soul_lang_rust.ex..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_stament::get_initialize::get_initialize (1 samples, 1.89%)</title><rect x="71.6981%" y="965" width="1.8868%" height="15" fill="rgb(241,149,10)" fg:x="38" fg:w="1"/><text x="71.9481%" y="975.50">s..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;core::result::Result&lt;soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::multi_stament_result::MultiStamentResult&lt;enum2$&lt;soul_lang_rust::abstract_styntax_tree::abstract_styntax_tree::IStatment&gt; &gt;,soul_lang_rust::meta_data::soul_error::soul_error::SoulError&gt; &gt;::is_err (1 samples, 1.89%)</title><rect x="71.6981%" y="949" width="1.8868%" height="15" fill="rgb(249,206,44)" fg:x="38" fg:w="1"/><text x="71.9481%" y="959.50">s..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;core::result::Result&lt;soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::multi_stament_result::MultiStamentResult&lt;enum2$&lt;soul_lang_rust::abstract_styntax_tree::abstract_styntax_tree::IStatment&gt; &gt;,soul_lang_rust::meta_data::soul_error::soul_error::SoulError&gt; &gt;::is_ok (1 samples, 1.89%)</title><rect x="71.6981%" y="933" width="1.8868%" height="15" fill="rgb(251,153,30)" fg:x="38" fg:w="1"/><text x="71.9481%" y="943.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_stament::get_initialize::internal_get_initialize(soul_lang_rust::tokenizer::token::TokenIterator*, soul_lang_rust::meta_data::meta_data::MetaData*, soul_lang_rust::meta_data::current_context::current_context::CurrentContext*, enum2$&lt;core::option::Option (1 samples, 1.89%)</title><rect x="71.6981%" y="917" width="1.8868%" height="15" fill="rgb(239,152,38)" fg:x="38" fg:w="1"/><text x="71.9481%" y="927.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_expression::get_expression::get_expression(soul_lang_rust::tokenizer::token::TokenIterator*, soul_lang_rust::meta_data::meta_data::MetaData*, soul_lang_rust::meta_data::current_context::current_context::CurrentContext*, enum2$&lt;core::option::Option&lt;ref$&lt;soul_lang_rust::meta_data::soul_type::soul_type::SoulType&gt; &gt; &gt;*, bool, alloc::vec::Vec&lt;ref$ (1 samples, 1.89%)</title><rect x="71.6981%" y="901" width="1.8868%" height="15" fill="rgb(249,139,47)" fg:x="38" fg:w="1"/><text x="71.9481%" y="911.50">s..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 1.89%)</title><rect x="71.6981%" y="885" width="1.8868%" height="15" fill="rgb(244,64,35)" fg:x="38" fg:w="1"/><text x="71.9481%" y="895.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_expression::get_expression::convert_expression(soul_lang_rust::tokenizer::token::TokenIterator*, soul_lang_rust::meta_data::meta_data::MetaData*, soul_lang_rust::meta_data::current_context::current_context::CurrentContext*, soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_expression::get_expression::ExpressionStacks*, soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::multi_stament_result::MultiStamentResult&lt;enum2$&lt;soul_lang_rust::abstract_styntax_tree::abstract_styntax_tree::IExpression&gt; &gt;*, enum2$&lt;core::option::Option&lt;ref$&lt;soul_lang_rust::meta_data::soul_type::soul_type::SoulType&gt; &gt; &gt;*, alloc::vec::Vec&lt;ref$ (1 samples, 1.89%)</title><rect x="71.6981%" y="869" width="1.8868%" height="15" fill="rgb(216,46,15)" fg:x="38" fg:w="1"/><text x="71.9481%" y="879.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::soul_type::SoulType::from_literal(soul_lang_rust::tokenizer::token::TokenIterator*, soul_lang_rust::meta_data::type_meta_data::TypeMetaData*, soul_lang_rust::meta_data::current_context::current_context::CurrentGenerics*, enum2$&lt;core::option::Option&lt;ref$ (1 samples, 1.89%)</title><rect x="71.6981%" y="853" width="1.8868%" height="15" fill="rgb(250,74,19)" fg:x="38" fg:w="1"/><text x="71.9481%" y="863.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::soul_type::get_literal_array(soul_lang_rust::tokenizer::token::TokenIterator*, enum2$&lt;core::option::Option&lt;ref$ (1 samples, 1.89%)</title><rect x="71.6981%" y="837" width="1.8868%" height="15" fill="rgb(249,42,33)" fg:x="38" fg:w="1"/><text x="71.9481%" y="847.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::soul_type::SoulType::to_primitive_type (1 samples, 1.89%)</title><rect x="71.6981%" y="821" width="1.8868%" height="15" fill="rgb(242,149,17)" fg:x="38" fg:w="1"/><text x="71.9481%" y="831.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::primitive_types::PrimitiveType::from_str(ref$ (1 samples, 1.89%)</title><rect x="71.6981%" y="805" width="1.8868%" height="15" fill="rgb(244,29,21)" fg:x="38" fg:w="1"/><text x="71.9481%" y="815.50">s..</text></g><g><title>soul_lang_rust.exe`once_cell::sync::impl$12::deref(once_cell::sync::Lazy&lt;soul_lang_rust::meta_data::soul_names::SoulNames,soul_lang_rust::meta_data::soul_names::SoulNames (*) (1 samples, 1.89%)</title><rect x="71.6981%" y="789" width="1.8868%" height="15" fill="rgb(220,130,37)" fg:x="38" fg:w="1"/><text x="71.9481%" y="799.50">s..</text></g><g><title>soul_lang_rust.exe`core::str::traits::impl$1::eq(ref$&lt;str$&gt;, ref$ (1 samples, 1.89%)</title><rect x="71.6981%" y="773" width="1.8868%" height="15" fill="rgb(211,67,2)" fg:x="38" fg:w="1"/><text x="71.9481%" y="783.50">s..</text></g><g><title>soul_lang_rust.exe`core::cmp::impls::impl$9::eq(ref$&lt;slice2$&lt;u8&gt; &gt;*, ref$&lt;slice2$ (1 samples, 1.89%)</title><rect x="71.6981%" y="757" width="1.8868%" height="15" fill="rgb(235,68,52)" fg:x="38" fg:w="1"/><text x="71.9481%" y="767.50">s..</text></g><g><title>soul_lang_rust.exe`core::slice::cmp::impl$0::eq(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (1 samples, 1.89%)</title><rect x="71.6981%" y="741" width="1.8868%" height="15" fill="rgb(246,142,3)" fg:x="38" fg:w="1"/><text x="71.9481%" y="751.50">s..</text></g><g><title>soul_lang_rust.exe`core::slice::cmp::impl$5::equal(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (1 samples, 1.89%)</title><rect x="71.6981%" y="725" width="1.8868%" height="15" fill="rgb(241,25,7)" fg:x="38" fg:w="1"/><text x="71.9481%" y="735.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_names::SoulNames::get_name&lt;soul_lang_rust::meta_data::soul_names::NamesInternalType&gt; (1 samples, 1.89%)</title><rect x="71.6981%" y="709" width="1.8868%" height="15" fill="rgb(242,119,39)" fg:x="38" fg:w="1"/><text x="71.9481%" y="719.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_names::impl$44::get_name (1 samples, 1.89%)</title><rect x="71.6981%" y="693" width="1.8868%" height="15" fill="rgb(241,98,45)" fg:x="38" fg:w="1"/><text x="71.9481%" y="703.50">s..</text></g><g><title>soul_lang_rust.exe`std::collections::hash::map::HashMap&lt;soul_lang_rust::meta_data::soul_names::NamesInternalType,ref$&lt;str$&gt;,std::hash::random::RandomState&gt;::get (1 samples, 1.89%)</title><rect x="71.6981%" y="677" width="1.8868%" height="15" fill="rgb(254,28,30)" fg:x="38" fg:w="1"/><text x="71.9481%" y="687.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::map::HashMap&lt;soul_lang_rust::meta_data::soul_names::NamesInternalType,ref$&lt;str$&gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;::get (1 samples, 1.89%)</title><rect x="71.6981%" y="661" width="1.8868%" height="15" fill="rgb(241,142,54)" fg:x="38" fg:w="1"/><text x="71.9481%" y="671.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::map::HashMap&lt;soul_lang_rust::meta_data::soul_names::NamesInternalType,ref$&lt;str$&gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;::get_inner (1 samples, 1.89%)</title><rect x="71.6981%" y="645" width="1.8868%" height="15" fill="rgb(222,85,15)" fg:x="38" fg:w="1"/><text x="71.9481%" y="655.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::map::make_hash (1 samples, 1.89%)</title><rect x="71.6981%" y="629" width="1.8868%" height="15" fill="rgb(210,85,47)" fg:x="38" fg:w="1"/><text x="71.9481%" y="639.50">s..</text></g><g><title>soul_lang_rust.exe`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;soul_lang_rust::meta_data::soul_names::NamesOperator&gt; &gt; (1 samples, 1.89%)</title><rect x="71.6981%" y="613" width="1.8868%" height="15" fill="rgb(224,206,25)" fg:x="38" fg:w="1"/><text x="71.9481%" y="623.50">s..</text></g><g><title>soul_lang_rust.exe`std::hash::random::impl$4::finish (1 samples, 1.89%)</title><rect x="71.6981%" y="597" width="1.8868%" height="15" fill="rgb(243,201,19)" fg:x="38" fg:w="1"/><text x="71.9481%" y="607.50">s..</text></g><g><title>soul_lang_rust.exe`core::hash::sip::impl$4::finish (1 samples, 1.89%)</title><rect x="71.6981%" y="581" width="1.8868%" height="15" fill="rgb(236,59,4)" fg:x="38" fg:w="1"/><text x="71.9481%" y="591.50">s..</text></g><g><title>soul_lang_rust.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (1 samples, 1.89%)</title><rect x="71.6981%" y="565" width="1.8868%" height="15" fill="rgb(254,179,45)" fg:x="38" fg:w="1"/><text x="71.9481%" y="575.50">s..</text></g><g><title>soul_lang_rust.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (1 samples, 1.89%)</title><rect x="71.6981%" y="549" width="1.8868%" height="15" fill="rgb(226,14,10)" fg:x="38" fg:w="1"/><text x="71.9481%" y="559.50">s..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;core::result::Result&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionID,soul_lang_rust::meta_data::soul_error::soul_error::SoulError&gt; &gt;::map_err(enum2$&lt;core::result::Result (1 samples, 1.89%)</title><rect x="73.5849%" y="885" width="1.8868%" height="15" fill="rgb(244,27,41)" fg:x="39" fg:w="1"/><text x="73.8349%" y="895.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::meta_data::MetaData::add_function (1 samples, 1.89%)</title><rect x="73.5849%" y="869" width="1.8868%" height="15" fill="rgb(235,35,32)" fg:x="39" fg:w="1"/><text x="73.8349%" y="879.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::meta_data::FunctionStore::add_function (1 samples, 1.89%)</title><rect x="73.5849%" y="853" width="1.8868%" height="15" fill="rgb(218,68,31)" fg:x="39" fg:w="1"/><text x="73.8349%" y="863.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (1 samples, 1.89%)</title><rect x="73.5849%" y="837" width="1.8868%" height="15" fill="rgb(207,120,37)" fg:x="39" fg:w="1"/><text x="73.8349%" y="847.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::map::HashMap&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionID,soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration,std::hash::random::RandomState,alloc::alloc::Global&gt;::insert&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionID,soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration,std::hash::random::RandomState,alloc::alloc::Global&gt; (1 samples, 1.89%)</title><rect x="73.5849%" y="821" width="1.8868%" height="15" fill="rgb(227,98,0)" fg:x="39" fg:w="1"/><text x="73.8349%" y="831.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::map::HashMap&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionID,soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration,std::hash::random::RandomState,alloc::alloc::Global&gt;::find_or_find_insert_slot (1 samples, 1.89%)</title><rect x="73.5849%" y="805" width="1.8868%" height="15" fill="rgb(207,7,3)" fg:x="39" fg:w="1"/><text x="73.8349%" y="815.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::raw::RawTable&lt;tuple$&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionID,soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration&gt;,alloc::alloc::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionID,soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionID,soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration&gt;, hashbrown::map::make_hasher::closure_env$0 (1 samples, 1.89%)</title><rect x="73.5849%" y="789" width="1.8868%" height="15" fill="rgb(206,98,19)" fg:x="39" fg:w="1"/><text x="73.8349%" y="799.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::raw::RawTable&lt;tuple$&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionID,soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration&gt;,alloc::alloc::Global&gt;::reserve(unsigned long long, hashbrown::map::make_hasher::closure_env$0 (1 samples, 1.89%)</title><rect x="73.5849%" y="773" width="1.8868%" height="15" fill="rgb(217,5,26)" fg:x="39" fg:w="1"/><text x="73.8349%" y="783.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::raw::RawTable&lt;tuple$&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionID,soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration&gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionID,soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionID,soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration,std::hash::random::RandomState&gt; &gt;(unsigned long long, hashbrown::map::make_hasher::closure_env$0 (1 samples, 1.89%)</title><rect x="73.5849%" y="757" width="1.8868%" height="15" fill="rgb(235,190,38)" fg:x="39" fg:w="1"/><text x="73.8349%" y="767.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::raw::RawTableInner::reserve_rehash_inner(alloc::alloc::Global*, unsigned long long, ref$&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;ref_mut$&lt;hashbrown::raw::RawTableInner&gt;,usize&gt;,assoc$&lt;Output,u64&gt; &gt; &gt; &gt;, hashbrown::raw::Fallibility, hashbrown::raw::TableLayout, enum2$&lt;core::option::Option&lt;void (*)(ptr_mut$ (1 samples, 1.89%)</title><rect x="73.5849%" y="741" width="1.8868%" height="15" fill="rgb(247,86,24)" fg:x="39" fg:w="1"/><text x="73.8349%" y="751.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::raw::RawTableInner::resize_inner(alloc::alloc::Global*, unsigned long long, ref$&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;ref_mut$&lt;hashbrown::raw::RawTableInner&gt;,usize&gt;,assoc$ (1 samples, 1.89%)</title><rect x="73.5849%" y="725" width="1.8868%" height="15" fill="rgb(205,101,16)" fg:x="39" fg:w="1"/><text x="73.8349%" y="735.50">s..</text></g><g><title>soul_lang_rust.exe`core::intrinsics::copy_nonoverlapping (1 samples, 1.89%)</title><rect x="73.5849%" y="709" width="1.8868%" height="15" fill="rgb(246,168,33)" fg:x="39" fg:w="1"/><text x="73.8349%" y="719.50">s..</text></g><g><title>`0x7FFF88ABFEDB (1 samples, 1.89%)</title><rect x="73.5849%" y="693" width="1.8868%" height="15" fill="rgb(231,114,1)" fg:x="39" fg:w="1"/><text x="73.8349%" y="703.50">`..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (2 samples, 3.77%)</title><rect x="73.5849%" y="933" width="3.7736%" height="15" fill="rgb(207,184,53)" fg:x="39" fg:w="2"/><text x="73.8349%" y="943.50">soul..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::function::function_declaration::get_function_declaration::add_function_declaration (2 samples, 3.77%)</title><rect x="73.5849%" y="917" width="3.7736%" height="15" fill="rgb(224,95,51)" fg:x="39" fg:w="2"/><text x="73.8349%" y="927.50">soul..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::function::function_declaration::get_function_declaration::internal_function_declaration (2 samples, 3.77%)</title><rect x="73.5849%" y="901" width="3.7736%" height="15" fill="rgb(212,188,45)" fg:x="39" fg:w="2"/><text x="73.8349%" y="911.50">soul..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;soul_lang_rust::meta_data::scope_and_var::scope::ScopeId,soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionID&gt;,soul_lang_rust::meta_data::soul_error::soul_error::SoulError&gt; &gt;::ok(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 1.89%)</title><rect x="75.4717%" y="885" width="1.8868%" height="15" fill="rgb(223,154,38)" fg:x="40" fg:w="1"/><text x="75.7217%" y="895.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::meta_data::MetaData::try_get_function(ref$&lt;str$&gt;, soul_lang_rust::tokenizer::token::TokenIterator*, soul_lang_rust::meta_data::current_context::current_context::CurrentContext*, alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo,alloc::alloc::Global&gt;*, alloc::vec::Vec (1 samples, 1.89%)</title><rect x="75.4717%" y="869" width="1.8868%" height="15" fill="rgb(251,22,52)" fg:x="40" fg:w="1"/><text x="75.7217%" y="879.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::meta_data::MetaData::internal_try_get_function(ref$&lt;str$&gt;, soul_lang_rust::tokenizer::token::TokenIterator*, soul_lang_rust::meta_data::current_context::current_context::CurrentContext*, alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo,alloc::alloc::Global&gt;*, alloc::vec::Vec (1 samples, 1.89%)</title><rect x="75.4717%" y="853" width="1.8868%" height="15" fill="rgb(229,209,22)" fg:x="40" fg:w="1"/><text x="75.7217%" y="863.50">s..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option (1 samples, 1.89%)</title><rect x="75.4717%" y="837" width="1.8868%" height="15" fill="rgb(234,138,34)" fg:x="40" fg:w="1"/><text x="75.7217%" y="847.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::scope_and_var::scope::Scope::try_get_function(ref$&lt;str$&gt;, soul_lang_rust::tokenizer::token::Token*, soul_lang_rust::meta_data::meta_data::MetaData*, soul_lang_rust::meta_data::current_context::current_context::CurrentContext*, alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo,alloc::alloc::Global&gt;*, alloc::vec::Vec (1 samples, 1.89%)</title><rect x="75.4717%" y="821" width="1.8868%" height="15" fill="rgb(212,95,11)" fg:x="40" fg:w="1"/><text x="75.7217%" y="831.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration::are_arguments_compatible(soul_lang_rust::tokenizer::token::Token*, alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo,alloc::alloc::Global&gt;*, alloc::vec::Vec (1 samples, 1.89%)</title><rect x="75.4717%" y="805" width="1.8868%" height="15" fill="rgb(240,179,47)" fg:x="40" fg:w="1"/><text x="75.7217%" y="815.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::function::argument_info::argument_info::ArgumentInfo::are_compatible (1 samples, 1.89%)</title><rect x="75.4717%" y="789" width="1.8868%" height="15" fill="rgb(240,163,11)" fg:x="40" fg:w="1"/><text x="75.7217%" y="799.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::soul_type::SoulType::is_convertable (1 samples, 1.89%)</title><rect x="75.4717%" y="773" width="1.8868%" height="15" fill="rgb(236,37,12)" fg:x="40" fg:w="1"/><text x="75.7217%" y="783.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::soul_type::SoulType::convert_typedef_to_original (1 samples, 1.89%)</title><rect x="75.4717%" y="757" width="1.8868%" height="15" fill="rgb(232,164,16)" fg:x="40" fg:w="1"/><text x="75.7217%" y="767.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::soul_type::SoulType::from_stringed_type(ref$ (1 samples, 1.89%)</title><rect x="75.4717%" y="741" width="1.8868%" height="15" fill="rgb(244,205,15)" fg:x="40" fg:w="1"/><text x="75.7217%" y="751.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::soul_type::SoulType::internal_from_stringed_type(ref$ (1 samples, 1.89%)</title><rect x="75.4717%" y="725" width="1.8868%" height="15" fill="rgb(223,117,47)" fg:x="40" fg:w="1"/><text x="75.7217%" y="735.50">s..</text></g><g><title>soul_lang_rust.exe`std::collections::hash::map::HashMap&lt;alloc::sync::Arc&lt;alloc::string::String,alloc::alloc::Global&gt;,soul_lang_rust::meta_data::type_store::TypeID,std::hash::random::RandomState&gt;::contains_key (1 samples, 1.89%)</title><rect x="75.4717%" y="709" width="1.8868%" height="15" fill="rgb(244,107,35)" fg:x="40" fg:w="1"/><text x="75.7217%" y="719.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::map::HashMap&lt;alloc::sync::Arc&lt;alloc::string::String,alloc::alloc::Global&gt;,soul_lang_rust::meta_data::type_store::TypeID,std::hash::random::RandomState,alloc::alloc::Global&gt;::contains_key (1 samples, 1.89%)</title><rect x="75.4717%" y="693" width="1.8868%" height="15" fill="rgb(205,140,8)" fg:x="40" fg:w="1"/><text x="75.7217%" y="703.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::map::HashMap&lt;alloc::sync::Arc&lt;alloc::string::String,alloc::alloc::Global&gt;,soul_lang_rust::meta_data::type_store::TypeID,std::hash::random::RandomState,alloc::alloc::Global&gt;::get_inner (1 samples, 1.89%)</title><rect x="75.4717%" y="677" width="1.8868%" height="15" fill="rgb(228,84,46)" fg:x="40" fg:w="1"/><text x="75.7217%" y="687.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::sync::Arc&lt;alloc::string::String,alloc::alloc::Global&gt;,soul_lang_rust::meta_data::type_store::TypeID&gt;,alloc::alloc::Global&gt;::get(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;alloc::string::String,alloc::sync::Arc (1 samples, 1.89%)</title><rect x="75.4717%" y="661" width="1.8868%" height="15" fill="rgb(254,188,9)" fg:x="40" fg:w="1"/><text x="75.7217%" y="671.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::sync::Arc&lt;alloc::string::String,alloc::alloc::Global&gt;,soul_lang_rust::meta_data::type_store::TypeID&gt;,alloc::alloc::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;alloc::string::String,alloc::sync::Arc (1 samples, 1.89%)</title><rect x="75.4717%" y="645" width="1.8868%" height="15" fill="rgb(206,112,54)" fg:x="40" fg:w="1"/><text x="75.7217%" y="655.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (1 samples, 1.89%)</title><rect x="75.4717%" y="629" width="1.8868%" height="15" fill="rgb(216,84,49)" fg:x="40" fg:w="1"/><text x="75.7217%" y="639.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::raw::RawTableInner::probe_seq (1 samples, 1.89%)</title><rect x="75.4717%" y="613" width="1.8868%" height="15" fill="rgb(214,194,35)" fg:x="40" fg:w="1"/><text x="75.7217%" y="623.50">s..</text></g><g><title>soul_lang_rust.exe`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;alloc::string::String&gt; &gt; (1 samples, 1.89%)</title><rect x="75.4717%" y="597" width="1.8868%" height="15" fill="rgb(249,28,3)" fg:x="40" fg:w="1"/><text x="75.7217%" y="607.50">s..</text></g><g><title>soul_lang_rust.exe`core::hash::impls::impl$5::hash (1 samples, 1.89%)</title><rect x="75.4717%" y="581" width="1.8868%" height="15" fill="rgb(222,56,52)" fg:x="40" fg:w="1"/><text x="75.7217%" y="591.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::string::impl$23::hash (1 samples, 1.89%)</title><rect x="75.4717%" y="565" width="1.8868%" height="15" fill="rgb(245,217,50)" fg:x="40" fg:w="1"/><text x="75.7217%" y="575.50">s..</text></g><g><title>soul_lang_rust.exe`core::hash::impls::impl$2::hash(ref$ (1 samples, 1.89%)</title><rect x="75.4717%" y="549" width="1.8868%" height="15" fill="rgb(213,201,24)" fg:x="40" fg:w="1"/><text x="75.7217%" y="559.50">s..</text></g><g><title>soul_lang_rust.exe`std::hash::random::impl$4::write_str(std::hash::random::DefaultHasher*, ref$ (1 samples, 1.89%)</title><rect x="75.4717%" y="533" width="1.8868%" height="15" fill="rgb(248,116,28)" fg:x="40" fg:w="1"/><text x="75.7217%" y="543.50">s..</text></g><g><title>soul_lang_rust.exe`core::hash::sip::impl$4::write_str(core::hash::sip::SipHasher13*, ref$ (1 samples, 1.89%)</title><rect x="75.4717%" y="517" width="1.8868%" height="15" fill="rgb(219,72,43)" fg:x="40" fg:w="1"/><text x="75.7217%" y="527.50">s..</text></g><g><title>soul_lang_rust.exe`core::hash::sip::impl$5::write_str(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$ (1 samples, 1.89%)</title><rect x="75.4717%" y="501" width="1.8868%" height="15" fill="rgb(209,138,14)" fg:x="40" fg:w="1"/><text x="75.7217%" y="511.50">s..</text></g><g><title>soul_lang_rust.exe`core::hash::Hasher::write_u8(core::hash::sip::Hasher (1 samples, 1.89%)</title><rect x="75.4717%" y="485" width="1.8868%" height="15" fill="rgb(222,18,33)" fg:x="40" fg:w="1"/><text x="75.7217%" y="495.50">s..</text></g><g><title>soul_lang_rust.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (1 samples, 1.89%)</title><rect x="75.4717%" y="469" width="1.8868%" height="15" fill="rgb(213,199,7)" fg:x="40" fg:w="1"/><text x="75.7217%" y="479.50">s..</text></g><g><title>soul_lang_rust.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (1 samples, 1.89%)</title><rect x="75.4717%" y="453" width="1.8868%" height="15" fill="rgb(250,110,10)" fg:x="40" fg:w="1"/><text x="75.7217%" y="463.50">s..</text></g><g><title>soul_lang_rust.exe`core::intrinsics::copy_nonoverlapping (1 samples, 1.89%)</title><rect x="75.4717%" y="437" width="1.8868%" height="15" fill="rgb(248,123,6)" fg:x="40" fg:w="1"/><text x="75.7217%" y="447.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::abstract_styntax_tree::impl$6::clone(enum2$ (1 samples, 1.89%)</title><rect x="77.3585%" y="853" width="1.8868%" height="15" fill="rgb(206,91,31)" fg:x="41" fg:w="1"/><text x="77.6085%" y="863.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::string::impl$6::clone (1 samples, 1.89%)</title><rect x="77.3585%" y="837" width="1.8868%" height="15" fill="rgb(211,154,13)" fg:x="41" fg:w="1"/><text x="77.6085%" y="847.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::vec::impl$11::clone (1 samples, 1.89%)</title><rect x="77.3585%" y="821" width="1.8868%" height="15" fill="rgb(225,148,7)" fg:x="41" fg:w="1"/><text x="77.6085%" y="831.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::slice::impl$0::to_vec_in (1 samples, 1.89%)</title><rect x="77.3585%" y="805" width="1.8868%" height="15" fill="rgb(220,160,43)" fg:x="41" fg:w="1"/><text x="77.6085%" y="815.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::slice::hack::to_vec (1 samples, 1.89%)</title><rect x="77.3585%" y="789" width="1.8868%" height="15" fill="rgb(213,52,39)" fg:x="41" fg:w="1"/><text x="77.6085%" y="799.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::slice::hack::impl$1::to_vec (1 samples, 1.89%)</title><rect x="77.3585%" y="773" width="1.8868%" height="15" fill="rgb(243,137,7)" fg:x="41" fg:w="1"/><text x="77.6085%" y="783.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::vec::Vec::with_capacity_in (1 samples, 1.89%)</title><rect x="77.3585%" y="757" width="1.8868%" height="15" fill="rgb(230,79,13)" fg:x="41" fg:w="1"/><text x="77.6085%" y="767.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 1.89%)</title><rect x="77.3585%" y="741" width="1.8868%" height="15" fill="rgb(247,105,23)" fg:x="41" fg:w="1"/><text x="77.6085%" y="751.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner::with_capacity_in (1 samples, 1.89%)</title><rect x="77.3585%" y="725" width="1.8868%" height="15" fill="rgb(223,179,41)" fg:x="41" fg:w="1"/><text x="77.6085%" y="735.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner::try_allocate_in (1 samples, 1.89%)</title><rect x="77.3585%" y="709" width="1.8868%" height="15" fill="rgb(218,9,34)" fg:x="41" fg:w="1"/><text x="77.6085%" y="719.50">s..</text></g><g><title>`0x7FFFAD24F164 (1 samples, 1.89%)</title><rect x="77.3585%" y="693" width="1.8868%" height="15" fill="rgb(222,106,8)" fg:x="41" fg:w="1"/><text x="77.6085%" y="703.50">`..</text></g><g><title>`0x7FFFAD24F1CD (1 samples, 1.89%)</title><rect x="77.3585%" y="677" width="1.8868%" height="15" fill="rgb(211,220,0)" fg:x="41" fg:w="1"/><text x="77.6085%" y="687.50">`..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_abstract_syntax_tree::get_abstract_syntax_tree_file (10 samples, 18.87%)</title><rect x="62.2642%" y="1013" width="18.8679%" height="15" fill="rgb(229,52,16)" fg:x="33" fg:w="10"/><text x="62.5142%" y="1023.50">soul_lang_rust.exe`soul_lang_..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;core::result::Result&lt;bool,soul_lang_rust::meta_data::soul_error::soul_error::SoulError&gt; &gt;::map_err(enum2$&lt;core::result::Result (4 samples, 7.55%)</title><rect x="73.5849%" y="997" width="7.5472%" height="15" fill="rgb(212,155,18)" fg:x="39" fg:w="4"/><text x="73.8349%" y="1007.50">soul_lang_..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_abstract_syntax_tree::forward_declare (4 samples, 7.55%)</title><rect x="73.5849%" y="981" width="7.5472%" height="15" fill="rgb(242,21,14)" fg:x="39" fg:w="4"/><text x="73.8349%" y="991.50">soul_lang_..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;enum2$ (4 samples, 7.55%)</title><rect x="73.5849%" y="965" width="7.5472%" height="15" fill="rgb(222,19,48)" fg:x="39" fg:w="4"/><text x="73.8349%" y="975.50">soul_lang_..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_stament::statment_type::get_statment_types::get_statment_types (4 samples, 7.55%)</title><rect x="73.5849%" y="949" width="7.5472%" height="15" fill="rgb(232,45,27)" fg:x="39" fg:w="4"/><text x="73.8349%" y="959.50">soul_lang_..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_stament::statment_type::get_statment_types::get_initialize_info (2 samples, 3.77%)</title><rect x="77.3585%" y="933" width="3.7736%" height="15" fill="rgb(249,103,42)" fg:x="41" fg:w="2"/><text x="77.6085%" y="943.50">soul..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_stament::get_initialize::get_forward_declared_initialize (2 samples, 3.77%)</title><rect x="77.3585%" y="917" width="3.7736%" height="15" fill="rgb(246,81,33)" fg:x="41" fg:w="2"/><text x="77.6085%" y="927.50">soul..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;core::result::Result&lt;soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::multi_stament_result::MultiStamentResult&lt;enum2$&lt;soul_lang_rust::abstract_styntax_tree::abstract_styntax_tree::IStatment&gt; &gt;,soul_lang_rust::meta_data::soul_error::soul_error::SoulError&gt; &gt;::is_err (2 samples, 3.77%)</title><rect x="77.3585%" y="901" width="3.7736%" height="15" fill="rgb(252,33,42)" fg:x="41" fg:w="2"/><text x="77.6085%" y="911.50">soul..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;core::result::Result&lt;soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::multi_stament_result::MultiStamentResult&lt;enum2$&lt;soul_lang_rust::abstract_styntax_tree::abstract_styntax_tree::IStatment&gt; &gt;,soul_lang_rust::meta_data::soul_error::soul_error::SoulError&gt; &gt;::is_ok (2 samples, 3.77%)</title><rect x="77.3585%" y="885" width="3.7736%" height="15" fill="rgb(209,212,41)" fg:x="41" fg:w="2"/><text x="77.6085%" y="895.50">soul..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::abstract_styntax_tree::get_abstract_syntax_tree::get_stament::get_initialize::internal_get_initialize(soul_lang_rust::tokenizer::token::TokenIterator*, soul_lang_rust::meta_data::meta_data::MetaData*, soul_lang_rust::meta_data::current_context::current_context::CurrentContext*, enum2$&lt;core::option::Option (2 samples, 3.77%)</title><rect x="77.3585%" y="869" width="3.7736%" height="15" fill="rgb(207,154,6)" fg:x="41" fg:w="2"/><text x="77.6085%" y="879.50">soul..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::soul_type::SoulType::from_iterator (1 samples, 1.89%)</title><rect x="79.2453%" y="853" width="1.8868%" height="15" fill="rgb(223,64,47)" fg:x="42" fg:w="1"/><text x="79.4953%" y="863.50">s..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;core::result::Result&lt;soul_lang_rust::meta_data::soul_type::soul_type::SoulType,soul_lang_rust::meta_data::soul_error::soul_error::SoulError&gt; &gt;::is_err (1 samples, 1.89%)</title><rect x="79.2453%" y="837" width="1.8868%" height="15" fill="rgb(211,161,38)" fg:x="42" fg:w="1"/><text x="79.4953%" y="847.50">s..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;core::result::Result&lt;soul_lang_rust::meta_data::soul_type::soul_type::SoulType,soul_lang_rust::meta_data::soul_error::soul_error::SoulError&gt; &gt;::is_ok (1 samples, 1.89%)</title><rect x="79.2453%" y="821" width="1.8868%" height="15" fill="rgb(219,138,40)" fg:x="42" fg:w="1"/><text x="79.4953%" y="831.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::soul_type::get_from_iterator(soul_lang_rust::tokenizer::token::TokenIterator*, soul_lang_rust::meta_data::type_meta_data::TypeMetaData*, soul_lang_rust::meta_data::current_context::current_context::CurrentGenerics*, enum2$&lt;core::option::Option&lt;ref_mut$ (1 samples, 1.89%)</title><rect x="79.2453%" y="805" width="1.8868%" height="15" fill="rgb(241,228,46)" fg:x="42" fg:w="1"/><text x="79.4953%" y="815.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::type_modifiers::impl$5::eq (1 samples, 1.89%)</title><rect x="79.2453%" y="789" width="1.8868%" height="15" fill="rgb(223,209,38)" fg:x="42" fg:w="1"/><text x="79.4953%" y="799.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::type_modifiers::_::impl$3::eq (1 samples, 1.89%)</title><rect x="79.2453%" y="773" width="1.8868%" height="15" fill="rgb(236,164,45)" fg:x="42" fg:w="1"/><text x="79.4953%" y="783.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::type_modifiers::TypeModifiers::from_str(ref$ (1 samples, 1.89%)</title><rect x="79.2453%" y="757" width="1.8868%" height="15" fill="rgb(231,15,5)" fg:x="42" fg:w="1"/><text x="79.4953%" y="767.50">s..</text></g><g><title>soul_lang_rust.exe`once_cell::sync::impl$12::deref(once_cell::sync::Lazy&lt;soul_lang_rust::meta_data::soul_names::SoulNames,soul_lang_rust::meta_data::soul_names::SoulNames (*) (1 samples, 1.89%)</title><rect x="79.2453%" y="741" width="1.8868%" height="15" fill="rgb(252,35,15)" fg:x="42" fg:w="1"/><text x="79.4953%" y="751.50">s..</text></g><g><title>soul_lang_rust.exe`core::str::traits::impl$1::eq(ref$&lt;str$&gt;, ref$ (1 samples, 1.89%)</title><rect x="79.2453%" y="725" width="1.8868%" height="15" fill="rgb(248,181,18)" fg:x="42" fg:w="1"/><text x="79.4953%" y="735.50">s..</text></g><g><title>soul_lang_rust.exe`core::cmp::impls::impl$9::eq(ref$&lt;slice2$&lt;u8&gt; &gt;*, ref$&lt;slice2$ (1 samples, 1.89%)</title><rect x="79.2453%" y="709" width="1.8868%" height="15" fill="rgb(233,39,42)" fg:x="42" fg:w="1"/><text x="79.4953%" y="719.50">s..</text></g><g><title>soul_lang_rust.exe`core::slice::cmp::impl$0::eq(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (1 samples, 1.89%)</title><rect x="79.2453%" y="693" width="1.8868%" height="15" fill="rgb(238,110,33)" fg:x="42" fg:w="1"/><text x="79.4953%" y="703.50">s..</text></g><g><title>soul_lang_rust.exe`core::slice::cmp::impl$5::equal(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (1 samples, 1.89%)</title><rect x="79.2453%" y="677" width="1.8868%" height="15" fill="rgb(233,195,10)" fg:x="42" fg:w="1"/><text x="79.4953%" y="687.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_names::SoulNames::get_name&lt;soul_lang_rust::meta_data::soul_names::NamesTypeModifiers&gt; (1 samples, 1.89%)</title><rect x="79.2453%" y="661" width="1.8868%" height="15" fill="rgb(254,105,3)" fg:x="42" fg:w="1"/><text x="79.4953%" y="671.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_names::impl$36::get_name (1 samples, 1.89%)</title><rect x="79.2453%" y="645" width="1.8868%" height="15" fill="rgb(221,225,9)" fg:x="42" fg:w="1"/><text x="79.4953%" y="655.50">s..</text></g><g><title>soul_lang_rust.exe`std::collections::hash::map::HashMap&lt;soul_lang_rust::meta_data::soul_names::NamesTypeModifiers,ref$&lt;str$&gt;,std::hash::random::RandomState&gt;::get (1 samples, 1.89%)</title><rect x="79.2453%" y="629" width="1.8868%" height="15" fill="rgb(224,227,45)" fg:x="42" fg:w="1"/><text x="79.4953%" y="639.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::map::HashMap&lt;soul_lang_rust::meta_data::soul_names::NamesTypeModifiers,ref$&lt;str$&gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;::get (1 samples, 1.89%)</title><rect x="79.2453%" y="613" width="1.8868%" height="15" fill="rgb(229,198,43)" fg:x="42" fg:w="1"/><text x="79.4953%" y="623.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::map::HashMap&lt;soul_lang_rust::meta_data::soul_names::NamesTypeModifiers,ref$&lt;str$&gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;::get_inner (1 samples, 1.89%)</title><rect x="79.2453%" y="597" width="1.8868%" height="15" fill="rgb(206,209,35)" fg:x="42" fg:w="1"/><text x="79.4953%" y="607.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::map::make_hash (1 samples, 1.89%)</title><rect x="79.2453%" y="581" width="1.8868%" height="15" fill="rgb(245,195,53)" fg:x="42" fg:w="1"/><text x="79.4953%" y="591.50">s..</text></g><g><title>soul_lang_rust.exe`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;soul_lang_rust::meta_data::soul_names::NamesOperator&gt; &gt; (1 samples, 1.89%)</title><rect x="79.2453%" y="565" width="1.8868%" height="15" fill="rgb(240,92,26)" fg:x="42" fg:w="1"/><text x="79.4953%" y="575.50">s..</text></g><g><title>soul_lang_rust.exe`std::hash::random::impl$4::finish (1 samples, 1.89%)</title><rect x="79.2453%" y="549" width="1.8868%" height="15" fill="rgb(207,40,23)" fg:x="42" fg:w="1"/><text x="79.4953%" y="559.50">s..</text></g><g><title>soul_lang_rust.exe`core::hash::sip::impl$4::finish (1 samples, 1.89%)</title><rect x="79.2453%" y="533" width="1.8868%" height="15" fill="rgb(223,111,35)" fg:x="42" fg:w="1"/><text x="79.4953%" y="543.50">s..</text></g><g><title>soul_lang_rust.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (1 samples, 1.89%)</title><rect x="79.2453%" y="517" width="1.8868%" height="15" fill="rgb(229,147,28)" fg:x="42" fg:w="1"/><text x="79.4953%" y="527.50">s..</text></g><g><title>soul_lang_rust.exe`core::hash::sip::impl$8::c_rounds (1 samples, 1.89%)</title><rect x="79.2453%" y="501" width="1.8868%" height="15" fill="rgb(211,29,28)" fg:x="42" fg:w="1"/><text x="79.4953%" y="511.50">s..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;regex_automata::util::prefilter::Choice&gt;::new&lt;regex_syntax::hir::literal::Literal&gt;(regex_automata::util::search::MatchKind, ref$&lt;slice2$ (1 samples, 1.89%)</title><rect x="81.1321%" y="373" width="1.8868%" height="15" fill="rgb(228,72,33)" fg:x="43" fg:w="1"/><text x="81.3821%" y="383.50">s..</text></g><g><title>soul_lang_rust.exe`regex_automata::util::prefilter::aho_corasick::AhoCorasick::new&lt;regex_syntax::hir::literal::Literal&gt;(regex_automata::util::search::MatchKind, ref$&lt;slice2$ (1 samples, 1.89%)</title><rect x="81.1321%" y="357" width="1.8868%" height="15" fill="rgb(205,214,31)" fg:x="43" fg:w="1"/><text x="81.3821%" y="367.50">s..</text></g><g><title>soul_lang_rust.exe`aho_corasick::ahocorasick::AhoCorasickBuilder::build&lt;ref$&lt;slice2$&lt;regex_syntax::hir::literal::Literal&gt; &gt;,ref$&lt;regex_syntax::hir::literal::Literal&gt; &gt;(ref$&lt;slice2$ (1 samples, 1.89%)</title><rect x="81.1321%" y="341" width="1.8868%" height="15" fill="rgb(224,111,15)" fg:x="43" fg:w="1"/><text x="81.3821%" y="351.50">s..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (1 samples, 1.89%)</title><rect x="81.1321%" y="325" width="1.8868%" height="15" fill="rgb(253,21,26)" fg:x="43" fg:w="1"/><text x="81.3821%" y="335.50">s..</text></g><g><title>soul_lang_rust.exe`aho_corasick::nfa::noncontiguous::Builder::build&lt;ref$&lt;slice2$&lt;regex_syntax::hir::literal::Literal&gt; &gt;,ref$&lt;regex_syntax::hir::literal::Literal&gt; &gt;(ref$&lt;slice2$ (1 samples, 1.89%)</title><rect x="81.1321%" y="309" width="1.8868%" height="15" fill="rgb(245,139,43)" fg:x="43" fg:w="1"/><text x="81.3821%" y="319.50">s..</text></g><g><title>soul_lang_rust.exe`aho_corasick::nfa::noncontiguous::Compiler::compile(aho_corasick::nfa::noncontiguous::Compiler, ref$&lt;slice2$ (1 samples, 1.89%)</title><rect x="81.1321%" y="293" width="1.8868%" height="15" fill="rgb(252,170,7)" fg:x="43" fg:w="1"/><text x="81.3821%" y="303.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (1 samples, 1.89%)</title><rect x="81.1321%" y="277" width="1.8868%" height="15" fill="rgb(231,118,14)" fg:x="43" fg:w="1"/><text x="81.3821%" y="287.50">s..</text></g><g><title>soul_lang_rust.exe`aho_corasick::util::prefilter::Builder::build (1 samples, 1.89%)</title><rect x="81.1321%" y="261" width="1.8868%" height="15" fill="rgb(238,83,0)" fg:x="43" fg:w="1"/><text x="81.3821%" y="271.50">s..</text></g><g><title>soul_lang_rust.exe`aho_corasick::util::prefilter::RareBytesBuilder::build (1 samples, 1.89%)</title><rect x="81.1321%" y="245" width="1.8868%" height="15" fill="rgb(221,39,39)" fg:x="43" fg:w="1"/><text x="81.3821%" y="255.50">s..</text></g><g><title>soul_lang_rust.exe`aho_corasick::util::prefilter::impl$11::build::imp (1 samples, 1.89%)</title><rect x="81.1321%" y="229" width="1.8868%" height="15" fill="rgb(222,119,46)" fg:x="43" fg:w="1"/><text x="81.3821%" y="239.50">s..</text></g><g><title>soul_lang_rust.exe`once_cell::sync::impl$12::deref(once_cell::sync::Lazy&lt;regex::regex::string::Regex,regex::regex::string::Regex (*) (2 samples, 3.77%)</title><rect x="81.1321%" y="853" width="3.7736%" height="15" fill="rgb(222,165,49)" fg:x="43" fg:w="2"/><text x="81.3821%" y="863.50">soul..</text></g><g><title>soul_lang_rust.exe`alloc::string::String::as_str (2 samples, 3.77%)</title><rect x="81.1321%" y="837" width="3.7736%" height="15" fill="rgb(219,113,52)" fg:x="43" fg:w="2"/><text x="81.3821%" y="847.50">soul..</text></g><g><title>soul_lang_rust.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_slice (2 samples, 3.77%)</title><rect x="81.1321%" y="821" width="3.7736%" height="15" fill="rgb(214,7,15)" fg:x="43" fg:w="2"/><text x="81.3821%" y="831.50">soul..</text></g><g><title>soul_lang_rust.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_ptr (2 samples, 3.77%)</title><rect x="81.1321%" y="805" width="3.7736%" height="15" fill="rgb(235,32,4)" fg:x="43" fg:w="2"/><text x="81.3821%" y="815.50">soul..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (2 samples, 3.77%)</title><rect x="81.1321%" y="789" width="3.7736%" height="15" fill="rgb(238,90,54)" fg:x="43" fg:w="2"/><text x="81.3821%" y="799.50">soul..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (2 samples, 3.77%)</title><rect x="81.1321%" y="773" width="3.7736%" height="15" fill="rgb(213,208,19)" fg:x="43" fg:w="2"/><text x="81.3821%" y="783.50">soul..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (2 samples, 3.77%)</title><rect x="81.1321%" y="757" width="3.7736%" height="15" fill="rgb(233,156,4)" fg:x="43" fg:w="2"/><text x="81.3821%" y="767.50">soul..</text></g><g><title>soul_lang_rust.exe`once_cell::imp::OnceCell&lt;regex::regex::string::Regex&gt;::initialize&lt;regex::regex::string::Regex,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;regex::regex::string::Regex,once_cell::sync::impl$11::force::closure_env$0&lt;regex::regex::string::Regex,regex::regex::string::Regex (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;regex::regex::string::Regex,once_cell::sync::impl$11::force::closure_env$0&lt;regex::regex::string::Regex,regex::regex::string::Regex (*) (2 samples, 3.77%)</title><rect x="81.1321%" y="741" width="3.7736%" height="15" fill="rgb(207,194,5)" fg:x="43" fg:w="2"/><text x="81.3821%" y="751.50">soul..</text></g><g><title>soul_lang_rust.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (2 samples, 3.77%)</title><rect x="81.1321%" y="725" width="3.7736%" height="15" fill="rgb(206,111,30)" fg:x="43" fg:w="2"/><text x="81.3821%" y="735.50">soul..</text></g><g><title>soul_lang_rust.exe`once_cell::imp::impl$4::initialize::closure$0&lt;regex::regex::string::Regex,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;regex::regex::string::Regex,once_cell::sync::impl$11::force::closure_env$0&lt;regex::regex::string::Regex,regex::regex::string::Regex (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;regex::regex::string::Regex,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;regex::regex::string::Regex,once_cell::sync::impl$11::force::closure_env$0&lt;regex::regex::string::Regex,regex::regex::string::Regex (*)()&gt; &gt;,enum2$ (2 samples, 3.77%)</title><rect x="81.1321%" y="709" width="3.7736%" height="15" fill="rgb(243,70,54)" fg:x="43" fg:w="2"/><text x="81.3821%" y="719.50">soul..</text></g><g><title>soul_lang_rust.exe`core::ops::function::FnOnce::call_once&lt;soul_lang_rust::tokenizer::tokenizer::SPLIT_REGEX::closure_env$0,tuple$&lt;&gt; &gt; (2 samples, 3.77%)</title><rect x="81.1321%" y="693" width="3.7736%" height="15" fill="rgb(242,28,8)" fg:x="43" fg:w="2"/><text x="81.3821%" y="703.50">soul..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::tokenizer::tokenizer::SPLIT_REGEX::closure$0 (2 samples, 3.77%)</title><rect x="81.1321%" y="677" width="3.7736%" height="15" fill="rgb(219,106,18)" fg:x="43" fg:w="2"/><text x="81.3821%" y="687.50">soul..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;ref$ (2 samples, 3.77%)</title><rect x="81.1321%" y="661" width="3.7736%" height="15" fill="rgb(244,222,10)" fg:x="43" fg:w="2"/><text x="81.3821%" y="671.50">soul..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;ref$ (2 samples, 3.77%)</title><rect x="81.1321%" y="645" width="3.7736%" height="15" fill="rgb(236,179,52)" fg:x="43" fg:w="2"/><text x="81.3821%" y="655.50">soul..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec&lt;ref$ (2 samples, 3.77%)</title><rect x="81.1321%" y="629" width="3.7736%" height="15" fill="rgb(213,23,39)" fg:x="43" fg:w="2"/><text x="81.3821%" y="639.50">soul..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_names::SoulNames::str_vec_to_regex(alloc::vec::Vec&lt;ref$ (2 samples, 3.77%)</title><rect x="81.1321%" y="613" width="3.7736%" height="15" fill="rgb(238,48,10)" fg:x="43" fg:w="2"/><text x="81.3821%" y="623.50">soul..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;core::result::Result&lt;regex::regex::string::Regex,enum2$&lt;regex::error::Error&gt; &gt; &gt;::unwrap(enum2$&lt;core::result::Result&lt;regex::regex::string::Regex,enum2$ (2 samples, 3.77%)</title><rect x="81.1321%" y="597" width="3.7736%" height="15" fill="rgb(251,196,23)" fg:x="43" fg:w="2"/><text x="81.3821%" y="607.50">soul..</text></g><g><title>soul_lang_rust.exe`regex::regex::string::Regex::new(ref$ (2 samples, 3.77%)</title><rect x="81.1321%" y="581" width="3.7736%" height="15" fill="rgb(250,152,24)" fg:x="43" fg:w="2"/><text x="81.3821%" y="591.50">soul..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place (2 samples, 3.77%)</title><rect x="81.1321%" y="565" width="3.7736%" height="15" fill="rgb(209,150,17)" fg:x="43" fg:w="2"/><text x="81.3821%" y="575.50">soul..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place (2 samples, 3.77%)</title><rect x="81.1321%" y="549" width="3.7736%" height="15" fill="rgb(234,202,34)" fg:x="43" fg:w="2"/><text x="81.3821%" y="559.50">soul..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(alloc::vec::Vec (2 samples, 3.77%)</title><rect x="81.1321%" y="533" width="3.7736%" height="15" fill="rgb(253,148,53)" fg:x="43" fg:w="2"/><text x="81.3821%" y="543.50">soul..</text></g><g><title>soul_lang_rust.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (2 samples, 3.77%)</title><rect x="81.1321%" y="517" width="3.7736%" height="15" fill="rgb(218,129,16)" fg:x="43" fg:w="2"/><text x="81.3821%" y="527.50">soul..</text></g><g><title>soul_lang_rust.exe`regex::builders::string::RegexBuilder::build (2 samples, 3.77%)</title><rect x="81.1321%" y="501" width="3.7736%" height="15" fill="rgb(216,85,19)" fg:x="43" fg:w="2"/><text x="81.3821%" y="511.50">soul..</text></g><g><title>soul_lang_rust.exe`regex::builders::Builder::build_one_string (2 samples, 3.77%)</title><rect x="81.1321%" y="485" width="3.7736%" height="15" fill="rgb(235,228,7)" fg:x="43" fg:w="2"/><text x="81.3821%" y="495.50">soul..</text></g><g><title>soul_lang_rust.exe`regex_automata::meta::regex::Builder::build(ref$ (2 samples, 3.77%)</title><rect x="81.1321%" y="469" width="3.7736%" height="15" fill="rgb(245,175,0)" fg:x="43" fg:w="2"/><text x="81.3821%" y="479.50">soul..</text></g><g><title>soul_lang_rust.exe`regex_automata::meta::regex::Builder::build_many(ref$&lt;slice2$&lt;ref$ (2 samples, 3.77%)</title><rect x="81.1321%" y="453" width="3.7736%" height="15" fill="rgb(208,168,36)" fg:x="43" fg:w="2"/><text x="81.3821%" y="463.50">soul..</text></g><g><title>soul_lang_rust.exe`regex_automata::meta::regex::Builder::build_many_from_hir(ref$&lt;slice2$ (2 samples, 3.77%)</title><rect x="81.1321%" y="437" width="3.7736%" height="15" fill="rgb(246,171,24)" fg:x="43" fg:w="2"/><text x="81.3821%" y="447.50">soul..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;dyn$ (2 samples, 3.77%)</title><rect x="81.1321%" y="421" width="3.7736%" height="15" fill="rgb(215,142,24)" fg:x="43" fg:w="2"/><text x="81.3821%" y="431.50">soul..</text></g><g><title>soul_lang_rust.exe`regex_automata::meta::strategy::new(regex_automata::meta::regex::RegexInfo*, ref$&lt;slice2$&lt;ref$ (2 samples, 3.77%)</title><rect x="81.1321%" y="405" width="3.7736%" height="15" fill="rgb(250,187,7)" fg:x="43" fg:w="2"/><text x="81.3821%" y="415.50">soul..</text></g><g><title>soul_lang_rust.exe`regex_automata::meta::strategy::Pre&lt;tuple$&lt;&gt; &gt;::from_prefixes (2 samples, 3.77%)</title><rect x="81.1321%" y="389" width="3.7736%" height="15" fill="rgb(228,66,33)" fg:x="43" fg:w="2"/><text x="81.3821%" y="399.50">soul..</text></g><g><title>soul_lang_rust.exe`regex_syntax::hir::literal::Seq::is_exact (1 samples, 1.89%)</title><rect x="83.0189%" y="373" width="1.8868%" height="15" fill="rgb(234,215,21)" fg:x="44" fg:w="1"/><text x="83.2689%" y="383.50">s..</text></g><g><title>soul_lang_rust.exe`regex_syntax::hir::literal::Seq::literals (1 samples, 1.89%)</title><rect x="83.0189%" y="357" width="1.8868%" height="15" fill="rgb(222,191,20)" fg:x="44" fg:w="1"/><text x="83.2689%" y="367.50">s..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;core::option::Option&lt;alloc::vec::Vec&lt;regex_syntax::hir::literal::Literal,alloc::alloc::Global&gt; &gt; &gt;::as_deref (1 samples, 1.89%)</title><rect x="83.0189%" y="341" width="1.8868%" height="15" fill="rgb(245,79,54)" fg:x="44" fg:w="1"/><text x="83.2689%" y="351.50">s..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;core::option::Option&lt;alloc::vec::Vec&lt;regex_syntax::hir::literal::Literal,alloc::alloc::Global&gt; &gt; &gt;::as_ref (1 samples, 1.89%)</title><rect x="83.0189%" y="325" width="1.8868%" height="15" fill="rgb(240,10,37)" fg:x="44" fg:w="1"/><text x="83.2689%" y="335.50">s..</text></g><g><title>soul_lang_rust.exe`regex_automata::util::prefilter::prefixes&lt;ref$&lt;regex_syntax::hir::Hir&gt; &gt;(regex_automata::util::search::MatchKind, ref$&lt;slice2$&lt;ref$ (1 samples, 1.89%)</title><rect x="83.0189%" y="309" width="1.8868%" height="15" fill="rgb(214,192,32)" fg:x="44" fg:w="1"/><text x="83.2689%" y="319.50">s..</text></g><g><title>soul_lang_rust.exe`regex_syntax::hir::literal::Seq::optimize_for_prefix_by_preference (1 samples, 1.89%)</title><rect x="83.0189%" y="293" width="1.8868%" height="15" fill="rgb(209,36,54)" fg:x="44" fg:w="1"/><text x="83.2689%" y="303.50">s..</text></g><g><title>soul_lang_rust.exe`regex_syntax::hir::literal::Seq::optimize_by_preference (1 samples, 1.89%)</title><rect x="83.0189%" y="277" width="1.8868%" height="15" fill="rgb(220,10,11)" fg:x="44" fg:w="1"/><text x="83.2689%" y="287.50">s..</text></g><g><title>soul_lang_rust.exe`regex_syntax::hir::literal::Seq::longest_common_prefix (1 samples, 1.89%)</title><rect x="83.0189%" y="261" width="1.8868%" height="15" fill="rgb(221,106,17)" fg:x="44" fg:w="1"/><text x="83.2689%" y="271.50">s..</text></g><g><title>soul_lang_rust.exe`regex_syntax::hir::literal::PreferenceTrie::minimize(alloc::vec::Vec (1 samples, 1.89%)</title><rect x="83.0189%" y="245" width="1.8868%" height="15" fill="rgb(251,142,44)" fg:x="44" fg:w="1"/><text x="83.2689%" y="255.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place (1 samples, 1.89%)</title><rect x="83.0189%" y="229" width="1.8868%" height="15" fill="rgb(238,13,15)" fg:x="44" fg:w="1"/><text x="83.2689%" y="239.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 1.89%)</title><rect x="83.0189%" y="213" width="1.8868%" height="15" fill="rgb(208,107,27)" fg:x="44" fg:w="1"/><text x="83.2689%" y="223.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (1 samples, 1.89%)</title><rect x="83.0189%" y="197" width="1.8868%" height="15" fill="rgb(205,136,37)" fg:x="44" fg:w="1"/><text x="83.2689%" y="207.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$ (1 samples, 1.89%)</title><rect x="83.0189%" y="181" width="1.8868%" height="15" fill="rgb(250,205,27)" fg:x="44" fg:w="1"/><text x="83.2689%" y="191.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place (1 samples, 1.89%)</title><rect x="83.0189%" y="165" width="1.8868%" height="15" fill="rgb(210,80,43)" fg:x="44" fg:w="1"/><text x="83.2689%" y="175.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;tuple$ (1 samples, 1.89%)</title><rect x="83.0189%" y="149" width="1.8868%" height="15" fill="rgb(247,160,36)" fg:x="44" fg:w="1"/><text x="83.2689%" y="159.50">s..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;tuple$ (1 samples, 1.89%)</title><rect x="83.0189%" y="133" width="1.8868%" height="15" fill="rgb(234,13,49)" fg:x="44" fg:w="1"/><text x="83.2689%" y="143.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec&lt;tuple$ (1 samples, 1.89%)</title><rect x="83.0189%" y="117" width="1.8868%" height="15" fill="rgb(234,122,0)" fg:x="44" fg:w="1"/><text x="83.2689%" y="127.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (1 samples, 1.89%)</title><rect x="83.0189%" y="101" width="1.8868%" height="15" fill="rgb(207,146,38)" fg:x="44" fg:w="1"/><text x="83.2689%" y="111.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 1.89%)</title><rect x="83.0189%" y="85" width="1.8868%" height="15" fill="rgb(207,177,25)" fg:x="44" fg:w="1"/><text x="83.2689%" y="95.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::alloc::dealloc (1 samples, 1.89%)</title><rect x="83.0189%" y="69" width="1.8868%" height="15" fill="rgb(211,178,42)" fg:x="44" fg:w="1"/><text x="83.2689%" y="79.50">s..</text></g><g><title>`0x7FFFAD2D59E0 (1 samples, 1.89%)</title><rect x="83.0189%" y="53" width="1.8868%" height="15" fill="rgb(230,69,54)" fg:x="44" fg:w="1"/><text x="83.2689%" y="63.50">`..</text></g><g><title>`0x7FFFAD254B4A (1 samples, 1.89%)</title><rect x="83.0189%" y="37" width="1.8868%" height="15" fill="rgb(214,135,41)" fg:x="44" fg:w="1"/><text x="83.2689%" y="47.50">`..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (3 samples, 5.66%)</title><rect x="81.1321%" y="997" width="5.6604%" height="15" fill="rgb(237,67,25)" fg:x="43" fg:w="3"/><text x="81.3821%" y="1007.50">soul_la..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::tokenizer::tokenizer::get_tokens(soul_lang_rust::tokenizer::file_line::FileLine, alloc::vec::Vec (3 samples, 5.66%)</title><rect x="81.1321%" y="981" width="5.6604%" height="15" fill="rgb(222,189,50)" fg:x="43" fg:w="3"/><text x="81.3821%" y="991.50">soul_la..</text></g><g><title>soul_lang_rust.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;ref$ (3 samples, 5.66%)</title><rect x="81.1321%" y="965" width="5.6604%" height="15" fill="rgb(245,148,34)" fg:x="43" fg:w="3"/><text x="81.3821%" y="975.50">soul_la..</text></g><g><title>soul_lang_rust.exe`alloc::vec::Vec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::as_slice (3 samples, 5.66%)</title><rect x="81.1321%" y="949" width="5.6604%" height="15" fill="rgb(222,29,6)" fg:x="43" fg:w="3"/><text x="81.3821%" y="959.50">soul_la..</text></g><g><title>soul_lang_rust.exe`alloc::vec::Vec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::as_ptr (3 samples, 5.66%)</title><rect x="81.1321%" y="933" width="5.6604%" height="15" fill="rgb(221,189,43)" fg:x="43" fg:w="3"/><text x="81.3821%" y="943.50">soul_la..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::ptr (3 samples, 5.66%)</title><rect x="81.1321%" y="917" width="5.6604%" height="15" fill="rgb(207,36,27)" fg:x="43" fg:w="3"/><text x="81.3821%" y="927.50">soul_la..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (3 samples, 5.66%)</title><rect x="81.1321%" y="901" width="5.6604%" height="15" fill="rgb(217,90,24)" fg:x="43" fg:w="3"/><text x="81.3821%" y="911.50">soul_la..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (3 samples, 5.66%)</title><rect x="81.1321%" y="885" width="5.6604%" height="15" fill="rgb(224,66,35)" fg:x="43" fg:w="3"/><text x="81.3821%" y="895.50">soul_la..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::tokenizer::tokenizer::impl$1::split_on(alloc::string::String*, alloc::vec::Vec&lt;ref$ (3 samples, 5.66%)</title><rect x="81.1321%" y="869" width="5.6604%" height="15" fill="rgb(221,13,50)" fg:x="43" fg:w="3"/><text x="81.3821%" y="879.50">soul_la..</text></g><g><title>soul_lang_rust.exe`regex::regex::string::Match::as_str (1 samples, 1.89%)</title><rect x="84.9057%" y="853" width="1.8868%" height="15" fill="rgb(236,68,49)" fg:x="45" fg:w="1"/><text x="85.1557%" y="863.50">s..</text></g><g><title>soul_lang_rust.exe`core::str::traits::impl$4::index(ref$&lt;str$&gt;, core::ops::range::Range (1 samples, 1.89%)</title><rect x="84.9057%" y="837" width="1.8868%" height="15" fill="rgb(229,146,28)" fg:x="45" fg:w="1"/><text x="85.1557%" y="847.50">s..</text></g><g><title>soul_lang_rust.exe`core::str::traits::impl$7::index(core::ops::range::Range&lt;usize&gt;, ref$ (1 samples, 1.89%)</title><rect x="84.9057%" y="821" width="1.8868%" height="15" fill="rgb(225,31,38)" fg:x="45" fg:w="1"/><text x="85.1557%" y="831.50">s..</text></g><g><title>soul_lang_rust.exe`core::str::traits::impl$7::get(core::ops::range::Range&lt;usize&gt;, ref$ (1 samples, 1.89%)</title><rect x="84.9057%" y="805" width="1.8868%" height="15" fill="rgb(250,208,3)" fg:x="45" fg:w="1"/><text x="85.1557%" y="815.50">s..</text></g><g><title>soul_lang_rust.exe`core::str::impl$0::is_char_boundary(ref$ (1 samples, 1.89%)</title><rect x="84.9057%" y="789" width="1.8868%" height="15" fill="rgb(246,54,23)" fg:x="45" fg:w="1"/><text x="85.1557%" y="799.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::tokenizer::tokenizer::tokenize_file(alloc::vec::Vec (4 samples, 7.55%)</title><rect x="81.1321%" y="1013" width="7.5472%" height="15" fill="rgb(243,76,11)" fg:x="43" fg:w="4"/><text x="81.3821%" y="1023.50">soul_lang_..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::tokenizer::string_tokenizer::string_mapper::rawstr_to_litstr_file(alloc::vec::Vec (1 samples, 1.89%)</title><rect x="86.7925%" y="997" width="1.8868%" height="15" fill="rgb(245,21,50)" fg:x="46" fg:w="1"/><text x="87.0425%" y="1007.50">s..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 1.89%)</title><rect x="86.7925%" y="981" width="1.8868%" height="15" fill="rgb(228,9,43)" fg:x="46" fg:w="1"/><text x="87.0425%" y="991.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::tokenizer::string_tokenizer::string_mapper::rawstr_to_litstr(soul_lang_rust::tokenizer::file_line::FileLine*, soul_lang_rust::meta_data::meta_data::MetaData*, alloc::vec::Vec (1 samples, 1.89%)</title><rect x="86.7925%" y="965" width="1.8868%" height="15" fill="rgb(208,100,47)" fg:x="46" fg:w="1"/><text x="87.0425%" y="975.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_names::SoulNames::get_name&lt;soul_lang_rust::meta_data::soul_names::NamesTypeModifiers&gt; (1 samples, 1.89%)</title><rect x="86.7925%" y="949" width="1.8868%" height="15" fill="rgb(232,26,8)" fg:x="46" fg:w="1"/><text x="87.0425%" y="959.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_names::impl$36::get_name (1 samples, 1.89%)</title><rect x="86.7925%" y="933" width="1.8868%" height="15" fill="rgb(216,166,38)" fg:x="46" fg:w="1"/><text x="87.0425%" y="943.50">s..</text></g><g><title>soul_lang_rust.exe`std::collections::hash::map::HashMap&lt;soul_lang_rust::meta_data::soul_names::NamesTypeModifiers,ref$&lt;str$&gt;,std::hash::random::RandomState&gt;::get (1 samples, 1.89%)</title><rect x="86.7925%" y="917" width="1.8868%" height="15" fill="rgb(251,202,51)" fg:x="46" fg:w="1"/><text x="87.0425%" y="927.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::map::HashMap&lt;soul_lang_rust::meta_data::soul_names::NamesTypeModifiers,ref$&lt;str$&gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;::get (1 samples, 1.89%)</title><rect x="86.7925%" y="901" width="1.8868%" height="15" fill="rgb(254,216,34)" fg:x="46" fg:w="1"/><text x="87.0425%" y="911.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::map::HashMap&lt;soul_lang_rust::meta_data::soul_names::NamesTypeModifiers,ref$&lt;str$&gt;,std::hash::random::RandomState,alloc::alloc::Global&gt;::get_inner (1 samples, 1.89%)</title><rect x="86.7925%" y="885" width="1.8868%" height="15" fill="rgb(251,32,27)" fg:x="46" fg:w="1"/><text x="87.0425%" y="895.50">s..</text></g><g><title>soul_lang_rust.exe`hashbrown::map::make_hash (1 samples, 1.89%)</title><rect x="86.7925%" y="869" width="1.8868%" height="15" fill="rgb(208,127,28)" fg:x="46" fg:w="1"/><text x="87.0425%" y="879.50">s..</text></g><g><title>soul_lang_rust.exe`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;soul_lang_rust::meta_data::soul_names::NamesOperator&gt; &gt; (1 samples, 1.89%)</title><rect x="86.7925%" y="853" width="1.8868%" height="15" fill="rgb(224,137,22)" fg:x="46" fg:w="1"/><text x="87.0425%" y="863.50">s..</text></g><g><title>soul_lang_rust.exe`std::hash::random::impl$4::finish (1 samples, 1.89%)</title><rect x="86.7925%" y="837" width="1.8868%" height="15" fill="rgb(254,70,32)" fg:x="46" fg:w="1"/><text x="87.0425%" y="847.50">s..</text></g><g><title>soul_lang_rust.exe`core::hash::sip::impl$4::finish (1 samples, 1.89%)</title><rect x="86.7925%" y="821" width="1.8868%" height="15" fill="rgb(229,75,37)" fg:x="46" fg:w="1"/><text x="87.0425%" y="831.50">s..</text></g><g><title>soul_lang_rust.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (1 samples, 1.89%)</title><rect x="86.7925%" y="805" width="1.8868%" height="15" fill="rgb(252,64,23)" fg:x="46" fg:w="1"/><text x="87.0425%" y="815.50">s..</text></g><g><title>soul_lang_rust.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (1 samples, 1.89%)</title><rect x="86.7925%" y="789" width="1.8868%" height="15" fill="rgb(232,162,48)" fg:x="46" fg:w="1"/><text x="87.0425%" y="799.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 1.89%)</title><rect x="88.6792%" y="949" width="1.8868%" height="15" fill="rgb(246,160,12)" fg:x="47" fg:w="1"/><text x="88.9292%" y="959.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration,alloc::alloc::Global&gt;::as_slice (1 samples, 1.89%)</title><rect x="88.6792%" y="933" width="1.8868%" height="15" fill="rgb(247,166,0)" fg:x="47" fg:w="1"/><text x="88.9292%" y="943.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration,alloc::alloc::Global&gt;::as_ptr (1 samples, 1.89%)</title><rect x="88.6792%" y="917" width="1.8868%" height="15" fill="rgb(249,219,21)" fg:x="47" fg:w="1"/><text x="88.9292%" y="927.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVec&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration,alloc::alloc::Global&gt;::ptr (1 samples, 1.89%)</title><rect x="88.6792%" y="901" width="1.8868%" height="15" fill="rgb(205,209,3)" fg:x="47" fg:w="1"/><text x="88.9292%" y="911.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 1.89%)</title><rect x="88.6792%" y="885" width="1.8868%" height="15" fill="rgb(243,44,1)" fg:x="47" fg:w="1"/><text x="88.9292%" y="895.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 1.89%)</title><rect x="88.6792%" y="869" width="1.8868%" height="15" fill="rgb(206,159,16)" fg:x="47" fg:w="1"/><text x="88.9292%" y="879.50">s..</text></g><g><title>soul_lang_rust.exe`once_cell::imp::OnceCell&lt;alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration,alloc::alloc::Global&gt; &gt;::initialize&lt;alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration,alloc::alloc::Global&gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration,alloc::alloc::Global&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration,alloc::alloc::Global&gt;,alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration,alloc::alloc::Global&gt; (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration,alloc::alloc::Global&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration,alloc::alloc::Global&gt;,alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration,alloc::alloc::Global&gt; (*) (1 samples, 1.89%)</title><rect x="88.6792%" y="853" width="1.8868%" height="15" fill="rgb(244,77,30)" fg:x="47" fg:w="1"/><text x="88.9292%" y="863.50">s..</text></g><g><title>soul_lang_rust.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (1 samples, 1.89%)</title><rect x="88.6792%" y="837" width="1.8868%" height="15" fill="rgb(218,69,12)" fg:x="47" fg:w="1"/><text x="88.9292%" y="847.50">s..</text></g><g><title>soul_lang_rust.exe`once_cell::imp::impl$4::initialize::closure$0&lt;alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration,alloc::alloc::Global&gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration,alloc::alloc::Global&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration,alloc::alloc::Global&gt;,alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration,alloc::alloc::Global&gt; (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration,alloc::alloc::Global&gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration,alloc::alloc::Global&gt;,once_cell::sync::impl$11::force::closure_env$0&lt;alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration,alloc::alloc::Global&gt;,alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration,alloc::alloc::Global&gt; (*)()&gt; &gt;,enum2$ (1 samples, 1.89%)</title><rect x="88.6792%" y="821" width="1.8868%" height="15" fill="rgb(212,87,7)" fg:x="47" fg:w="1"/><text x="88.9292%" y="831.50">s..</text></g><g><title>soul_lang_rust.exe`core::ops::function::FnOnce::call_once&lt;soul_lang_rust::meta_data::function::internal_functions::INTERNAL_FUNCTIONS::closure_env$0,tuple$&lt;&gt; &gt; (1 samples, 1.89%)</title><rect x="88.6792%" y="805" width="1.8868%" height="15" fill="rgb(245,114,25)" fg:x="47" fg:w="1"/><text x="88.9292%" y="815.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::function::internal_functions::INTERNAL_FUNCTIONS::closure$0 (1 samples, 1.89%)</title><rect x="88.6792%" y="789" width="1.8868%" height="15" fill="rgb(210,61,42)" fg:x="47" fg:w="1"/><text x="88.9292%" y="799.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::vec::Vec&lt;soul_lang_rust::meta_data::function::function_declaration::function_declaration::FunctionDeclaration,alloc::alloc::Global&gt;::push (1 samples, 1.89%)</title><rect x="88.6792%" y="773" width="1.8868%" height="15" fill="rgb(211,52,33)" fg:x="47" fg:w="1"/><text x="88.9292%" y="783.50">s..</text></g><g><title>`0x7FFF88ABFEDB (1 samples, 1.89%)</title><rect x="88.6792%" y="757" width="1.8868%" height="15" fill="rgb(234,58,33)" fg:x="47" fg:w="1"/><text x="88.9292%" y="767.50">`..</text></g><g><title>soul_lang_rust.exe`std::fs::create_dir_all(ref$ (2 samples, 3.77%)</title><rect x="88.6792%" y="1013" width="3.7736%" height="15" fill="rgb(220,115,36)" fg:x="47" fg:w="2"/><text x="88.9292%" y="1023.50">soul..</text></g><g><title>soul_lang_rust.exe`std::fs::DirBuilder::recursive (2 samples, 3.77%)</title><rect x="88.6792%" y="997" width="3.7736%" height="15" fill="rgb(243,153,54)" fg:x="47" fg:w="2"/><text x="88.9292%" y="1007.50">soul..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::meta_data::MetaData::new (2 samples, 3.77%)</title><rect x="88.6792%" y="981" width="3.7736%" height="15" fill="rgb(251,47,18)" fg:x="47" fg:w="2"/><text x="88.9292%" y="991.50">soul..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::meta_data::new_scope_store (2 samples, 3.77%)</title><rect x="88.6792%" y="965" width="3.7736%" height="15" fill="rgb(242,102,42)" fg:x="47" fg:w="2"/><text x="88.9292%" y="975.50">soul..</text></g><g><title>soul_lang_rust.exe`std::collections::hash::map::HashMap&lt;soul_lang_rust::meta_data::scope_and_var::scope::ScopeId,soul_lang_rust::meta_data::scope_and_var::scope::Scope,std::hash::random::RandomState&gt;::new (1 samples, 1.89%)</title><rect x="90.5660%" y="949" width="1.8868%" height="15" fill="rgb(234,31,38)" fg:x="48" fg:w="1"/><text x="90.8160%" y="959.50">s..</text></g><g><title>soul_lang_rust.exe`std::collections::hash::map::impl$8::default (1 samples, 1.89%)</title><rect x="90.5660%" y="933" width="1.8868%" height="15" fill="rgb(221,117,51)" fg:x="48" fg:w="1"/><text x="90.8160%" y="943.50">s..</text></g><g><title>soul_lang_rust.exe`std::hash::random::impl$5::default (1 samples, 1.89%)</title><rect x="90.5660%" y="917" width="1.8868%" height="15" fill="rgb(212,20,18)" fg:x="48" fg:w="1"/><text x="90.8160%" y="927.50">s..</text></g><g><title>soul_lang_rust.exe`std::hash::random::RandomState::new (1 samples, 1.89%)</title><rect x="90.5660%" y="901" width="1.8868%" height="15" fill="rgb(245,133,36)" fg:x="48" fg:w="1"/><text x="90.8160%" y="911.50">s..</text></g><g><title>soul_lang_rust.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::with (1 samples, 1.89%)</title><rect x="90.5660%" y="885" width="1.8868%" height="15" fill="rgb(212,6,19)" fg:x="48" fg:w="1"/><text x="90.8160%" y="895.50">s..</text></g><g><title>soul_lang_rust.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::try_with (1 samples, 1.89%)</title><rect x="90.5660%" y="869" width="1.8868%" height="15" fill="rgb(218,1,36)" fg:x="48" fg:w="1"/><text x="90.8160%" y="879.50">s..</text></g><g><title>soul_lang_rust.exe`core::ops::function::FnOnce::call_once(std::hash::random::impl$0::new::KEYS::constant$0::closure_env$1, enum2$&lt;core::option::Option&lt;ref_mut$&lt;enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$ (1 samples, 1.89%)</title><rect x="90.5660%" y="853" width="1.8868%" height="15" fill="rgb(246,84,54)" fg:x="48" fg:w="1"/><text x="90.8160%" y="863.50">s..</text></g><g><title>soul_lang_rust.exe`std::hash::random::impl$0::new::KEYS::constant$0::closure$1(std::hash::random::impl$0::new::KEYS::constant$0::closure_env$1*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$ (1 samples, 1.89%)</title><rect x="90.5660%" y="837" width="1.8868%" height="15" fill="rgb(242,110,6)" fg:x="48" fg:w="1"/><text x="90.8160%" y="847.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::type_meta_data::TypeMetaData::new (1 samples, 1.89%)</title><rect x="90.5660%" y="821" width="1.8868%" height="15" fill="rgb(214,47,5)" fg:x="48" fg:w="1"/><text x="90.8160%" y="831.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::type_store::TypeStore::new (1 samples, 1.89%)</title><rect x="90.5660%" y="805" width="1.8868%" height="15" fill="rgb(218,159,25)" fg:x="48" fg:w="1"/><text x="90.8160%" y="815.50">s..</text></g><g><title>soul_lang_rust.exe`once_cell::sync::impl$12::deref(once_cell::sync::Lazy&lt;soul_lang_rust::meta_data::type_store::TypeStore,soul_lang_rust::meta_data::type_store::TypeStore (*) (1 samples, 1.89%)</title><rect x="90.5660%" y="789" width="1.8868%" height="15" fill="rgb(215,211,28)" fg:x="48" fg:w="1"/><text x="90.8160%" y="799.50">s..</text></g><g><title>soul_lang_rust.exe`once_cell::sync::Lazy&lt;soul_lang_rust::meta_data::type_store::TypeStore,soul_lang_rust::meta_data::type_store::TypeStore (*)()&gt;::force (1 samples, 1.89%)</title><rect x="90.5660%" y="773" width="1.8868%" height="15" fill="rgb(238,59,32)" fg:x="48" fg:w="1"/><text x="90.8160%" y="783.50">s..</text></g><g><title>soul_lang_rust.exe`once_cell::sync::OnceCell&lt;soul_lang_rust::meta_data::type_store::TypeStore&gt;::get_or_init(once_cell::sync::impl$11::force::closure_env$0&lt;soul_lang_rust::meta_data::type_store::TypeStore,soul_lang_rust::meta_data::type_store::TypeStore (*) (1 samples, 1.89%)</title><rect x="90.5660%" y="757" width="1.8868%" height="15" fill="rgb(226,82,3)" fg:x="48" fg:w="1"/><text x="90.8160%" y="767.50">s..</text></g><g><title>soul_lang_rust.exe`once_cell::sync::OnceCell&lt;soul_lang_rust::meta_data::type_store::TypeStore&gt;::get_or_try_init(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;soul_lang_rust::meta_data::type_store::TypeStore,once_cell::sync::impl$11::force::closure_env$0&lt;soul_lang_rust::meta_data::type_store::TypeStore,soul_lang_rust::meta_data::type_store::TypeStore (*) (1 samples, 1.89%)</title><rect x="90.5660%" y="741" width="1.8868%" height="15" fill="rgb(240,164,32)" fg:x="48" fg:w="1"/><text x="90.8160%" y="751.50">s..</text></g><g><title>soul_lang_rust.exe`once_cell::imp::OnceCell&lt;soul_lang_rust::meta_data::type_store::TypeStore&gt;::initialize&lt;soul_lang_rust::meta_data::type_store::TypeStore,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;soul_lang_rust::meta_data::type_store::TypeStore,once_cell::sync::impl$11::force::closure_env$0&lt;soul_lang_rust::meta_data::type_store::TypeStore,soul_lang_rust::meta_data::type_store::TypeStore (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;soul_lang_rust::meta_data::type_store::TypeStore,once_cell::sync::impl$11::force::closure_env$0&lt;soul_lang_rust::meta_data::type_store::TypeStore,soul_lang_rust::meta_data::type_store::TypeStore (*) (1 samples, 1.89%)</title><rect x="90.5660%" y="725" width="1.8868%" height="15" fill="rgb(232,46,7)" fg:x="48" fg:w="1"/><text x="90.8160%" y="735.50">s..</text></g><g><title>soul_lang_rust.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (1 samples, 1.89%)</title><rect x="90.5660%" y="709" width="1.8868%" height="15" fill="rgb(229,129,53)" fg:x="48" fg:w="1"/><text x="90.8160%" y="719.50">s..</text></g><g><title>soul_lang_rust.exe`once_cell::imp::impl$4::initialize::closure$0&lt;soul_lang_rust::meta_data::type_store::TypeStore,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;soul_lang_rust::meta_data::type_store::TypeStore,once_cell::sync::impl$11::force::closure_env$0&lt;soul_lang_rust::meta_data::type_store::TypeStore,soul_lang_rust::meta_data::type_store::TypeStore (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;soul_lang_rust::meta_data::type_store::TypeStore,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;soul_lang_rust::meta_data::type_store::TypeStore,once_cell::sync::impl$11::force::closure_env$0&lt;soul_lang_rust::meta_data::type_store::TypeStore,soul_lang_rust::meta_data::type_store::TypeStore (*)()&gt; &gt;,enum2$ (1 samples, 1.89%)</title><rect x="90.5660%" y="693" width="1.8868%" height="15" fill="rgb(234,188,29)" fg:x="48" fg:w="1"/><text x="90.8160%" y="703.50">s..</text></g><g><title>soul_lang_rust.exe`core::ops::function::FnOnce::call_once&lt;soul_lang_rust::meta_data::type_store::DEFAULT_TYPESTORE::closure_env$0,tuple$&lt;&gt; &gt; (1 samples, 1.89%)</title><rect x="90.5660%" y="677" width="1.8868%" height="15" fill="rgb(246,141,4)" fg:x="48" fg:w="1"/><text x="90.8160%" y="687.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::type_store::DEFAULT_TYPESTORE::closure$0 (1 samples, 1.89%)</title><rect x="90.5660%" y="661" width="1.8868%" height="15" fill="rgb(229,23,39)" fg:x="48" fg:w="1"/><text x="90.8160%" y="671.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::type_store::add_internal_types (1 samples, 1.89%)</title><rect x="90.5660%" y="645" width="1.8868%" height="15" fill="rgb(206,12,3)" fg:x="48" fg:w="1"/><text x="90.8160%" y="655.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::soul_type::SoulType::to_string (1 samples, 1.89%)</title><rect x="90.5660%" y="629" width="1.8868%" height="15" fill="rgb(252,226,20)" fg:x="48" fg:w="1"/><text x="90.8160%" y="639.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::string::impl$28::deref (1 samples, 1.89%)</title><rect x="90.5660%" y="613" width="1.8868%" height="15" fill="rgb(216,123,35)" fg:x="48" fg:w="1"/><text x="90.8160%" y="623.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::string::String::as_str (1 samples, 1.89%)</title><rect x="90.5660%" y="597" width="1.8868%" height="15" fill="rgb(212,68,40)" fg:x="48" fg:w="1"/><text x="90.8160%" y="607.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_slice (1 samples, 1.89%)</title><rect x="90.5660%" y="581" width="1.8868%" height="15" fill="rgb(254,125,32)" fg:x="48" fg:w="1"/><text x="90.8160%" y="591.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_ptr (1 samples, 1.89%)</title><rect x="90.5660%" y="565" width="1.8868%" height="15" fill="rgb(253,97,22)" fg:x="48" fg:w="1"/><text x="90.8160%" y="575.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (1 samples, 1.89%)</title><rect x="90.5660%" y="549" width="1.8868%" height="15" fill="rgb(241,101,14)" fg:x="48" fg:w="1"/><text x="90.8160%" y="559.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 1.89%)</title><rect x="90.5660%" y="533" width="1.8868%" height="15" fill="rgb(238,103,29)" fg:x="48" fg:w="1"/><text x="90.8160%" y="543.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 1.89%)</title><rect x="90.5660%" y="517" width="1.8868%" height="15" fill="rgb(233,195,47)" fg:x="48" fg:w="1"/><text x="90.8160%" y="527.50">s..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::meta_data::soul_type::type_modifiers::TypeModifiers::to_str (1 samples, 1.89%)</title><rect x="90.5660%" y="501" width="1.8868%" height="15" fill="rgb(246,218,30)" fg:x="48" fg:w="1"/><text x="90.8160%" y="511.50">s..</text></g><g><title>`0x7FFFAA5F7194 (1 samples, 1.89%)</title><rect x="92.4528%" y="821" width="1.8868%" height="15" fill="rgb(219,145,47)" fg:x="49" fg:w="1"/><text x="92.7028%" y="831.50">`..</text></g><g><title>`0x7FFFAD3A1FE4 (1 samples, 1.89%)</title><rect x="92.4528%" y="805" width="1.8868%" height="15" fill="rgb(243,12,26)" fg:x="49" fg:w="1"/><text x="92.7028%" y="815.50">`..</text></g><g><title>soul_lang_rust.exe`std::fs::File::create (2 samples, 3.77%)</title><rect x="92.4528%" y="885" width="3.7736%" height="15" fill="rgb(214,87,16)" fg:x="49" fg:w="2"/><text x="92.7028%" y="895.50">soul..</text></g><g><title>soul_lang_rust.exe`std::fs::OpenOptions::open (2 samples, 3.77%)</title><rect x="92.4528%" y="869" width="3.7736%" height="15" fill="rgb(208,99,42)" fg:x="49" fg:w="2"/><text x="92.7028%" y="879.50">soul..</text></g><g><title>soul_lang_rust.exe`std::fs::OpenOptions::_open (2 samples, 3.77%)</title><rect x="92.4528%" y="853" width="3.7736%" height="15" fill="rgb(253,99,2)" fg:x="49" fg:w="2"/><text x="92.7028%" y="863.50">soul..</text></g><g><title>soul_lang_rust.exe`std::sys::pal::windows::fs::File::open (2 samples, 3.77%)</title><rect x="92.4528%" y="837" width="3.7736%" height="15" fill="rgb(220,168,23)" fg:x="49" fg:w="2"/><text x="92.7028%" y="847.50">soul..</text></g><g><title>soul_lang_rust.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 1.89%)</title><rect x="94.3396%" y="821" width="1.8868%" height="15" fill="rgb(242,38,24)" fg:x="50" fg:w="1"/><text x="94.5896%" y="831.50">s..</text></g><g><title>soul_lang_rust.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 1.89%)</title><rect x="94.3396%" y="805" width="1.8868%" height="15" fill="rgb(225,182,9)" fg:x="50" fg:w="1"/><text x="94.5896%" y="815.50">s..</text></g><g><title>`0x7FFFAA576A45 (1 samples, 1.89%)</title><rect x="94.3396%" y="789" width="1.8868%" height="15" fill="rgb(243,178,37)" fg:x="50" fg:w="1"/><text x="94.5896%" y="799.50">`..</text></g><g><title>`0x7FFFAA5C1F67 (1 samples, 1.89%)</title><rect x="94.3396%" y="773" width="1.8868%" height="15" fill="rgb(232,139,19)" fg:x="50" fg:w="1"/><text x="94.5896%" y="783.50">`..</text></g><g><title>`0x7FFFAD3A25A4 (1 samples, 1.89%)</title><rect x="94.3396%" y="757" width="1.8868%" height="15" fill="rgb(225,201,24)" fg:x="50" fg:w="1"/><text x="94.5896%" y="767.50">`..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::run_compiler::run_compiler (24 samples, 45.28%)</title><rect x="52.8302%" y="1029" width="45.2830%" height="15" fill="rgb(221,47,46)" fg:x="28" fg:w="24"/><text x="53.0802%" y="1039.50">soul_lang_rust.exe`soul_lang_rust::run_compiler::run_compiler</text></g><g><title>soul_lang_rust.exe`std::fs::write(ref$ (3 samples, 5.66%)</title><rect x="92.4528%" y="1013" width="5.6604%" height="15" fill="rgb(249,23,13)" fg:x="49" fg:w="3"/><text x="92.7028%" y="1023.50">soul_la..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place (3 samples, 5.66%)</title><rect x="92.4528%" y="997" width="5.6604%" height="15" fill="rgb(219,9,5)" fg:x="49" fg:w="3"/><text x="92.7028%" y="1007.50">soul_la..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(alloc::vec::Vec (3 samples, 5.66%)</title><rect x="92.4528%" y="981" width="5.6604%" height="15" fill="rgb(254,171,16)" fg:x="49" fg:w="3"/><text x="92.7028%" y="991.50">soul_la..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (3 samples, 5.66%)</title><rect x="92.4528%" y="965" width="5.6604%" height="15" fill="rgb(230,171,20)" fg:x="49" fg:w="3"/><text x="92.7028%" y="975.50">soul_la..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (3 samples, 5.66%)</title><rect x="92.4528%" y="949" width="5.6604%" height="15" fill="rgb(210,71,41)" fg:x="49" fg:w="3"/><text x="92.7028%" y="959.50">soul_la..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (3 samples, 5.66%)</title><rect x="92.4528%" y="933" width="5.6604%" height="15" fill="rgb(206,173,20)" fg:x="49" fg:w="3"/><text x="92.7028%" y="943.50">soul_la..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory (3 samples, 5.66%)</title><rect x="92.4528%" y="917" width="5.6604%" height="15" fill="rgb(233,88,34)" fg:x="49" fg:w="3"/><text x="92.7028%" y="927.50">soul_la..</text></g><g><title>soul_lang_rust.exe`std::fs::write::inner (3 samples, 5.66%)</title><rect x="92.4528%" y="901" width="5.6604%" height="15" fill="rgb(223,209,46)" fg:x="49" fg:w="3"/><text x="92.7028%" y="911.50">soul_la..</text></g><g><title>soul_lang_rust.exe`std::io::Write::write_all (1 samples, 1.89%)</title><rect x="96.2264%" y="885" width="1.8868%" height="15" fill="rgb(250,43,18)" fg:x="51" fg:w="1"/><text x="96.4764%" y="895.50">s..</text></g><g><title>soul_lang_rust.exe`std::sys::pal::windows::handle::Handle::synchronous_write (1 samples, 1.89%)</title><rect x="96.2264%" y="869" width="1.8868%" height="15" fill="rgb(208,13,10)" fg:x="51" fg:w="1"/><text x="96.4764%" y="879.50">s..</text></g><g><title>`0x7FFFAD3A1C04 (1 samples, 1.89%)</title><rect x="96.2264%" y="853" width="1.8868%" height="15" fill="rgb(212,200,36)" fg:x="51" fg:w="1"/><text x="96.4764%" y="863.50">`..</text></g><g><title>all (53 samples, 100%)</title><rect x="0.0000%" y="1269" width="100.0000%" height="15" fill="rgb(225,90,30)" fg:x="0" fg:w="53"/><text x="0.2500%" y="1279.50"></text></g><g><title>`0x7FFFAD27C34C (35 samples, 66.04%)</title><rect x="33.9623%" y="1253" width="66.0377%" height="15" fill="rgb(236,182,39)" fg:x="18" fg:w="35"/><text x="34.2123%" y="1263.50">`0x7FFFAD27C34C</text></g><g><title>`0x7FFFAC32E8D7 (35 samples, 66.04%)</title><rect x="33.9623%" y="1237" width="66.0377%" height="15" fill="rgb(212,144,35)" fg:x="18" fg:w="35"/><text x="34.2123%" y="1247.50">`0x7FFFAC32E8D7</text></g><g><title>soul_lang_rust.exe`__scrt_common_main_seh() (29 samples, 54.72%)</title><rect x="45.2830%" y="1221" width="54.7170%" height="15" fill="rgb(228,63,44)" fg:x="24" fg:w="29"/><text x="45.5330%" y="1231.50">soul_lang_rust.exe`__scrt_common_main_seh()</text></g><g><title>soul_lang_rust.exe`invoke_main() (25 samples, 47.17%)</title><rect x="52.8302%" y="1205" width="47.1698%" height="15" fill="rgb(228,109,6)" fg:x="28" fg:w="25"/><text x="53.0802%" y="1215.50">soul_lang_rust.exe`invoke_main()</text></g><g><title>soul_lang_rust.exe`main (25 samples, 47.17%)</title><rect x="52.8302%" y="1189" width="47.1698%" height="15" fill="rgb(238,117,24)" fg:x="28" fg:w="25"/><text x="53.0802%" y="1199.50">soul_lang_rust.exe`main</text></g><g><title>soul_lang_rust.exe`std::rt::lang_start_internal (25 samples, 47.17%)</title><rect x="52.8302%" y="1173" width="47.1698%" height="15" fill="rgb(242,26,26)" fg:x="28" fg:w="25"/><text x="53.0802%" y="1183.50">soul_lang_rust.exe`std::rt::lang_start_internal</text></g><g><title>soul_lang_rust.exe`std::panic::catch_unwind (25 samples, 47.17%)</title><rect x="52.8302%" y="1157" width="47.1698%" height="15" fill="rgb(221,92,48)" fg:x="28" fg:w="25"/><text x="53.0802%" y="1167.50">soul_lang_rust.exe`std::panic::catch_unwind</text></g><g><title>soul_lang_rust.exe`std::panicking::try (25 samples, 47.17%)</title><rect x="52.8302%" y="1141" width="47.1698%" height="15" fill="rgb(209,209,32)" fg:x="28" fg:w="25"/><text x="53.0802%" y="1151.50">soul_lang_rust.exe`std::panicking::try</text></g><g><title>soul_lang_rust.exe`std::panicking::try::do_call (25 samples, 47.17%)</title><rect x="52.8302%" y="1125" width="47.1698%" height="15" fill="rgb(221,70,22)" fg:x="28" fg:w="25"/><text x="53.0802%" y="1135.50">soul_lang_rust.exe`std::panicking::try::do_call</text></g><g><title>soul_lang_rust.exe`std::rt::lang_start_internal::closure$1 (25 samples, 47.17%)</title><rect x="52.8302%" y="1109" width="47.1698%" height="15" fill="rgb(248,145,5)" fg:x="28" fg:w="25"/><text x="53.0802%" y="1119.50">soul_lang_rust.exe`std::rt::lang_start_internal::closure$1</text></g><g><title>soul_lang_rust.exe`std::panic::catch_unwind (25 samples, 47.17%)</title><rect x="52.8302%" y="1093" width="47.1698%" height="15" fill="rgb(226,116,26)" fg:x="28" fg:w="25"/><text x="53.0802%" y="1103.50">soul_lang_rust.exe`std::panic::catch_unwind</text></g><g><title>soul_lang_rust.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (25 samples, 47.17%)</title><rect x="52.8302%" y="1077" width="47.1698%" height="15" fill="rgb(244,5,17)" fg:x="28" fg:w="25"/><text x="53.0802%" y="1087.50">soul_lang_rust.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_st..</text></g><g><title>soul_lang_rust.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (25 samples, 47.17%)</title><rect x="52.8302%" y="1061" width="47.1698%" height="15" fill="rgb(252,159,33)" fg:x="28" fg:w="25"/><text x="53.0802%" y="1071.50">soul_lang_rust.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::main (25 samples, 47.17%)</title><rect x="52.8302%" y="1045" width="47.1698%" height="15" fill="rgb(206,71,0)" fg:x="28" fg:w="25"/><text x="53.0802%" y="1055.50">soul_lang_rust.exe`soul_lang_rust::main</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::run_options::run_options::RunOptions::new (1 samples, 1.89%)</title><rect x="98.1132%" y="1029" width="1.8868%" height="15" fill="rgb(233,118,54)" fg:x="52" fg:w="1"/><text x="98.3632%" y="1039.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::len (1 samples, 1.89%)</title><rect x="98.1132%" y="1013" width="1.8868%" height="15" fill="rgb(234,83,48)" fg:x="52" fg:w="1"/><text x="98.3632%" y="1023.50">s..</text></g><g><title>soul_lang_rust.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;alloc::string::String,std::env::Args&gt; (1 samples, 1.89%)</title><rect x="98.1132%" y="997" width="1.8868%" height="15" fill="rgb(228,3,54)" fg:x="52" fg:w="1"/><text x="98.3632%" y="1007.50">s..</text></g></svg></svg>