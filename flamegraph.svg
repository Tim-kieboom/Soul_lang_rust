<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1094" onload="init(evt)" viewBox="0 0 1200 1094" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1094" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1077.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1077.00"> </text><svg id="frames" x="10" width="1180" total_samples="39"><g><title>`0x7FFF0DDD602E (1 samples, 2.56%)</title><rect x="0.0000%" y="1013" width="2.5641%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1023.50">`0..</text></g><g><title>`0x7FFF0DDD6105 (1 samples, 2.56%)</title><rect x="0.0000%" y="997" width="2.5641%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1007.50">`0..</text></g><g><title>`0x7FFF0DDD616E (1 samples, 2.56%)</title><rect x="0.0000%" y="981" width="2.5641%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="991.50">`0..</text></g><g><title>`0x7FFF0DDD61E4 (1 samples, 2.56%)</title><rect x="0.0000%" y="965" width="2.5641%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="975.50">`0..</text></g><g><title>`0x7FFF0DE03D35 (1 samples, 2.56%)</title><rect x="2.5641%" y="981" width="2.5641%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="2.8141%" y="991.50">`0..</text></g><g><title>`0x7FFF0DDD5081 (1 samples, 2.56%)</title><rect x="2.5641%" y="965" width="2.5641%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="2.8141%" y="975.50">`0..</text></g><g><title>`0x7FFF0DDD5103 (1 samples, 2.56%)</title><rect x="2.5641%" y="949" width="2.5641%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="2.8141%" y="959.50">`0..</text></g><g><title>`0x7FFF0DF03E04 (1 samples, 2.56%)</title><rect x="2.5641%" y="933" width="2.5641%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="2.8141%" y="943.50">`0..</text></g><g><title>`0x7FFF0DE0456E (1 samples, 2.56%)</title><rect x="5.1282%" y="981" width="2.5641%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="5.3782%" y="991.50">`0..</text></g><g><title>`0x7FFF0DE86F9B (1 samples, 2.56%)</title><rect x="5.1282%" y="965" width="2.5641%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="1"/><text x="5.3782%" y="975.50">`0..</text></g><g><title>`0x7FFF0DE87041 (1 samples, 2.56%)</title><rect x="5.1282%" y="949" width="2.5641%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="1"/><text x="5.3782%" y="959.50">`0..</text></g><g><title>`0x7FFF0DE8716A (1 samples, 2.56%)</title><rect x="5.1282%" y="933" width="2.5641%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="1"/><text x="5.3782%" y="943.50">`0..</text></g><g><title>`0x7FFF0DE872A3 (1 samples, 2.56%)</title><rect x="5.1282%" y="917" width="2.5641%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="1"/><text x="5.3782%" y="927.50">`0..</text></g><g><title>`0x7FFF0DE87382 (1 samples, 2.56%)</title><rect x="5.1282%" y="901" width="2.5641%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="1"/><text x="5.3782%" y="911.50">`0..</text></g><g><title>`0x7FFF0DEC1339 (1 samples, 2.56%)</title><rect x="5.1282%" y="885" width="2.5641%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="1"/><text x="5.3782%" y="895.50">`0..</text></g><g><title>`0x7FFF0DE87540 (1 samples, 2.56%)</title><rect x="5.1282%" y="869" width="2.5641%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="1"/><text x="5.3782%" y="879.50">`0..</text></g><g><title>`0x7FFF0DE876A2 (1 samples, 2.56%)</title><rect x="5.1282%" y="853" width="2.5641%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="1"/><text x="5.3782%" y="863.50">`0..</text></g><g><title>`0x7FFF0DF04B84 (1 samples, 2.56%)</title><rect x="5.1282%" y="837" width="2.5641%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="1"/><text x="5.3782%" y="847.50">`0..</text></g><g><title>`0x7FFF0DE046BB (1 samples, 2.56%)</title><rect x="7.6923%" y="981" width="2.5641%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="1"/><text x="7.9423%" y="991.50">`0..</text></g><g><title>`0x7FFF0DDD6273 (1 samples, 2.56%)</title><rect x="7.6923%" y="965" width="2.5641%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="1"/><text x="7.9423%" y="975.50">`0..</text></g><g><title>`0x7FFF0DDD7E9F (1 samples, 2.56%)</title><rect x="7.6923%" y="949" width="2.5641%" height="15" fill="rgb(249,33,26)" fg:x="3" fg:w="1"/><text x="7.9423%" y="959.50">`0..</text></g><g><title>`0x7FFF0DDD895A (1 samples, 2.56%)</title><rect x="7.6923%" y="933" width="2.5641%" height="15" fill="rgb(235,183,28)" fg:x="3" fg:w="1"/><text x="7.9423%" y="943.50">`0..</text></g><g><title>`0x7FFF0DF05764 (1 samples, 2.56%)</title><rect x="7.6923%" y="917" width="2.5641%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="1"/><text x="7.9423%" y="927.50">`0..</text></g><g><title>`0x7FFF0DE04925 (1 samples, 2.56%)</title><rect x="10.2564%" y="981" width="2.5641%" height="15" fill="rgb(247,18,42)" fg:x="4" fg:w="1"/><text x="10.5064%" y="991.50">`0..</text></g><g><title>`0x7FFF0DF044C4 (1 samples, 2.56%)</title><rect x="10.2564%" y="965" width="2.5641%" height="15" fill="rgb(241,131,45)" fg:x="4" fg:w="1"/><text x="10.5064%" y="975.50">`0..</text></g><g><title>`0x7FFF0DE05240 (1 samples, 2.56%)</title><rect x="12.8205%" y="981" width="2.5641%" height="15" fill="rgb(249,31,29)" fg:x="5" fg:w="1"/><text x="13.0705%" y="991.50">`0..</text></g><g><title>`0x7FFF0DE95574 (1 samples, 2.56%)</title><rect x="12.8205%" y="965" width="2.5641%" height="15" fill="rgb(225,111,53)" fg:x="5" fg:w="1"/><text x="13.0705%" y="975.50">`0..</text></g><g><title>`0x7FFF0DDA9E0E (1 samples, 2.56%)</title><rect x="15.3846%" y="853" width="2.5641%" height="15" fill="rgb(238,160,17)" fg:x="6" fg:w="1"/><text x="15.6346%" y="863.50">`0..</text></g><g><title>`0x7FFF0DDABC3E (1 samples, 2.56%)</title><rect x="15.3846%" y="837" width="2.5641%" height="15" fill="rgb(214,148,48)" fg:x="6" fg:w="1"/><text x="15.6346%" y="847.50">`0..</text></g><g><title>`0x7FFF0DE0B611 (1 samples, 2.56%)</title><rect x="15.3846%" y="821" width="2.5641%" height="15" fill="rgb(232,36,49)" fg:x="6" fg:w="1"/><text x="15.6346%" y="831.50">`0..</text></g><g><title>`0x7FFF0DE0BA3E (1 samples, 2.56%)</title><rect x="15.3846%" y="805" width="2.5641%" height="15" fill="rgb(209,103,24)" fg:x="6" fg:w="1"/><text x="15.6346%" y="815.50">`0..</text></g><g><title>`0x7FFF0DE0BF0A (1 samples, 2.56%)</title><rect x="15.3846%" y="789" width="2.5641%" height="15" fill="rgb(229,88,8)" fg:x="6" fg:w="1"/><text x="15.6346%" y="799.50">`0..</text></g><g><title>`0x7FFF0DF022D4 (1 samples, 2.56%)</title><rect x="15.3846%" y="773" width="2.5641%" height="15" fill="rgb(213,181,19)" fg:x="6" fg:w="1"/><text x="15.6346%" y="783.50">`0..</text></g><g><title>`0x7FFF0DDF3C40 (1 samples, 2.56%)</title><rect x="17.9487%" y="837" width="2.5641%" height="15" fill="rgb(254,191,54)" fg:x="7" fg:w="1"/><text x="18.1987%" y="847.50">`0..</text></g><g><title>`0x7FFF0DDA8842 (3 samples, 7.69%)</title><rect x="15.3846%" y="917" width="7.6923%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="3"/><text x="15.6346%" y="927.50">`0x7FFF0DDA..</text></g><g><title>`0x7FFF0DDAD255 (3 samples, 7.69%)</title><rect x="15.3846%" y="901" width="7.6923%" height="15" fill="rgb(233,36,39)" fg:x="6" fg:w="3"/><text x="15.6346%" y="911.50">`0x7FFF0DDA..</text></g><g><title>`0x7FFF0DE0B611 (3 samples, 7.69%)</title><rect x="15.3846%" y="885" width="7.6923%" height="15" fill="rgb(226,3,54)" fg:x="6" fg:w="3"/><text x="15.6346%" y="895.50">`0x7FFF0DE0..</text></g><g><title>`0x7FFF0DE0BBB8 (3 samples, 7.69%)</title><rect x="15.3846%" y="869" width="7.6923%" height="15" fill="rgb(245,192,40)" fg:x="6" fg:w="3"/><text x="15.6346%" y="879.50">`0x7FFF0DE0..</text></g><g><title>`0x7FFF0DDA9F82 (2 samples, 5.13%)</title><rect x="17.9487%" y="853" width="5.1282%" height="15" fill="rgb(238,167,29)" fg:x="7" fg:w="2"/><text x="18.1987%" y="863.50">`0x7FF..</text></g><g><title>`0x7FFF0DDF3C99 (1 samples, 2.56%)</title><rect x="20.5128%" y="837" width="2.5641%" height="15" fill="rgb(232,182,51)" fg:x="8" fg:w="1"/><text x="20.7628%" y="847.50">`0..</text></g><g><title>`0x7FFF0B522671 (1 samples, 2.56%)</title><rect x="23.0769%" y="805" width="2.5641%" height="15" fill="rgb(231,60,39)" fg:x="9" fg:w="1"/><text x="23.3269%" y="815.50">`0..</text></g><g><title>`0x7FFF0B490CF2 (1 samples, 2.56%)</title><rect x="23.0769%" y="789" width="2.5641%" height="15" fill="rgb(208,69,12)" fg:x="9" fg:w="1"/><text x="23.3269%" y="799.50">`0..</text></g><g><title>`0x7FFF0B459EC0 (1 samples, 2.56%)</title><rect x="23.0769%" y="773" width="2.5641%" height="15" fill="rgb(235,93,37)" fg:x="9" fg:w="1"/><text x="23.3269%" y="783.50">`0..</text></g><g><title>`0x7FFF0B459F25 (1 samples, 2.56%)</title><rect x="23.0769%" y="757" width="2.5641%" height="15" fill="rgb(213,116,39)" fg:x="9" fg:w="1"/><text x="23.3269%" y="767.50">`0..</text></g><g><title>`0x7FFF0DDDA962 (1 samples, 2.56%)</title><rect x="23.0769%" y="741" width="2.5641%" height="15" fill="rgb(222,207,29)" fg:x="9" fg:w="1"/><text x="23.3269%" y="751.50">`0..</text></g><g><title>`0x7FFF0DE7B684 (5 samples, 12.82%)</title><rect x="15.3846%" y="965" width="12.8205%" height="15" fill="rgb(206,96,30)" fg:x="6" fg:w="5"/><text x="15.6346%" y="975.50">`0x7FFF0DE7B684</text></g><g><title>`0x7FFF0DDF5D80 (5 samples, 12.82%)</title><rect x="15.3846%" y="949" width="12.8205%" height="15" fill="rgb(218,138,4)" fg:x="6" fg:w="5"/><text x="15.6346%" y="959.50">`0x7FFF0DDF5D80</text></g><g><title>`0x7FFF0DDA84E0 (5 samples, 12.82%)</title><rect x="15.3846%" y="933" width="12.8205%" height="15" fill="rgb(250,191,14)" fg:x="6" fg:w="5"/><text x="15.6346%" y="943.50">`0x7FFF0DDA84E0</text></g><g><title>`0x7FFF0DDA88D4 (2 samples, 5.13%)</title><rect x="23.0769%" y="917" width="5.1282%" height="15" fill="rgb(239,60,40)" fg:x="9" fg:w="2"/><text x="23.3269%" y="927.50">`0x7FF..</text></g><g><title>`0x7FFF0DDDAE03 (2 samples, 5.13%)</title><rect x="23.0769%" y="901" width="5.1282%" height="15" fill="rgb(206,27,48)" fg:x="9" fg:w="2"/><text x="23.3269%" y="911.50">`0x7FF..</text></g><g><title>`0x7FFF0DDDBCA6 (2 samples, 5.13%)</title><rect x="23.0769%" y="885" width="5.1282%" height="15" fill="rgb(225,35,8)" fg:x="9" fg:w="2"/><text x="23.3269%" y="895.50">`0x7FF..</text></g><g><title>`0x7FFF0DDDBC7A (2 samples, 5.13%)</title><rect x="23.0769%" y="869" width="5.1282%" height="15" fill="rgb(250,213,24)" fg:x="9" fg:w="2"/><text x="23.3269%" y="879.50">`0x7FF..</text></g><g><title>`0x7FFF0DE1193C (2 samples, 5.13%)</title><rect x="23.0769%" y="853" width="5.1282%" height="15" fill="rgb(247,123,22)" fg:x="9" fg:w="2"/><text x="23.3269%" y="863.50">`0x7FF..</text></g><g><title>`0x7FFF0DE129CE (2 samples, 5.13%)</title><rect x="23.0769%" y="837" width="5.1282%" height="15" fill="rgb(231,138,38)" fg:x="9" fg:w="2"/><text x="23.3269%" y="847.50">`0x7FF..</text></g><g><title>`0x7FFF0DF0020E (2 samples, 5.13%)</title><rect x="23.0769%" y="821" width="5.1282%" height="15" fill="rgb(231,145,46)" fg:x="9" fg:w="2"/><text x="23.3269%" y="831.50">`0x7FF..</text></g><g><title>`0x7FFF0B522678 (1 samples, 2.56%)</title><rect x="25.6410%" y="805" width="2.5641%" height="15" fill="rgb(251,118,11)" fg:x="10" fg:w="1"/><text x="25.8910%" y="815.50">`0..</text></g><g><title>`0x7FFF0B4F7D28 (1 samples, 2.56%)</title><rect x="25.6410%" y="789" width="2.5641%" height="15" fill="rgb(217,147,25)" fg:x="10" fg:w="1"/><text x="25.8910%" y="799.50">`0..</text></g><g><title>`0x7FFF0B4F7E1C (1 samples, 2.56%)</title><rect x="25.6410%" y="773" width="2.5641%" height="15" fill="rgb(247,81,37)" fg:x="10" fg:w="1"/><text x="25.8910%" y="783.50">`0..</text></g><g><title>`0x7FFF0B528FB7 (1 samples, 2.56%)</title><rect x="25.6410%" y="757" width="2.5641%" height="15" fill="rgb(209,12,38)" fg:x="10" fg:w="1"/><text x="25.8910%" y="767.50">`0..</text></g><g><title>`0x7FFF0B5293FB (1 samples, 2.56%)</title><rect x="25.6410%" y="741" width="2.5641%" height="15" fill="rgb(227,1,9)" fg:x="10" fg:w="1"/><text x="25.8910%" y="751.50">`0..</text></g><g><title>`0x7FFF0B57D124 (1 samples, 2.56%)</title><rect x="25.6410%" y="725" width="2.5641%" height="15" fill="rgb(248,47,43)" fg:x="10" fg:w="1"/><text x="25.8910%" y="735.50">`0..</text></g><g><title>`0x7FFF0DE7B6C3 (1 samples, 2.56%)</title><rect x="28.2051%" y="965" width="2.5641%" height="15" fill="rgb(221,10,30)" fg:x="11" fg:w="1"/><text x="28.4551%" y="975.50">`0..</text></g><g><title>`0x7FFF0DDDB547 (1 samples, 2.56%)</title><rect x="28.2051%" y="949" width="2.5641%" height="15" fill="rgb(210,229,1)" fg:x="11" fg:w="1"/><text x="28.4551%" y="959.50">`0..</text></g><g><title>`0x7FFF0DDF4B1F (1 samples, 2.56%)</title><rect x="28.2051%" y="933" width="2.5641%" height="15" fill="rgb(222,148,37)" fg:x="11" fg:w="1"/><text x="28.4551%" y="943.50">`0..</text></g><g><title>`0x7FFF0DE0548B (7 samples, 17.95%)</title><rect x="15.3846%" y="981" width="17.9487%" height="15" fill="rgb(234,67,33)" fg:x="6" fg:w="7"/><text x="15.6346%" y="991.50">`0x7FFF0DE0548B</text></g><g><title>`0x7FFF0DE7B729 (1 samples, 2.56%)</title><rect x="30.7692%" y="965" width="2.5641%" height="15" fill="rgb(247,98,35)" fg:x="12" fg:w="1"/><text x="31.0192%" y="975.50">`0..</text></g><g><title>`0x7FFF0DDF5177 (1 samples, 2.56%)</title><rect x="30.7692%" y="949" width="2.5641%" height="15" fill="rgb(247,138,52)" fg:x="12" fg:w="1"/><text x="31.0192%" y="959.50">`0..</text></g><g><title>`0x7FFF0DF02014 (1 samples, 2.56%)</title><rect x="30.7692%" y="933" width="2.5641%" height="15" fill="rgb(213,79,30)" fg:x="12" fg:w="1"/><text x="31.0192%" y="943.50">`0..</text></g><g><title>`0x7FFF0DE0BBB8 (1 samples, 2.56%)</title><rect x="33.3333%" y="917" width="2.5641%" height="15" fill="rgb(246,177,23)" fg:x="13" fg:w="1"/><text x="33.5833%" y="927.50">`0..</text></g><g><title>`0x7FFF0DDA9E0E (1 samples, 2.56%)</title><rect x="33.3333%" y="901" width="2.5641%" height="15" fill="rgb(230,62,27)" fg:x="13" fg:w="1"/><text x="33.5833%" y="911.50">`0..</text></g><g><title>`0x7FFF0DDAA7A5 (1 samples, 2.56%)</title><rect x="33.3333%" y="885" width="2.5641%" height="15" fill="rgb(216,154,8)" fg:x="13" fg:w="1"/><text x="33.5833%" y="895.50">`0..</text></g><g><title>`0x7FFF0DDF7B42 (1 samples, 2.56%)</title><rect x="33.3333%" y="869" width="2.5641%" height="15" fill="rgb(244,35,45)" fg:x="13" fg:w="1"/><text x="33.5833%" y="879.50">`0..</text></g><g><title>`0x7FFF0DE73FAB (1 samples, 2.56%)</title><rect x="33.3333%" y="853" width="2.5641%" height="15" fill="rgb(251,115,12)" fg:x="13" fg:w="1"/><text x="33.5833%" y="863.50">`0..</text></g><g><title>`0x7FFF0DE05595 (2 samples, 5.13%)</title><rect x="33.3333%" y="981" width="5.1282%" height="15" fill="rgb(240,54,50)" fg:x="13" fg:w="2"/><text x="33.5833%" y="991.50">`0x7FF..</text></g><g><title>`0x7FFF0DDA9E0E (2 samples, 5.13%)</title><rect x="33.3333%" y="965" width="5.1282%" height="15" fill="rgb(233,84,52)" fg:x="13" fg:w="2"/><text x="33.5833%" y="975.50">`0x7FF..</text></g><g><title>`0x7FFF0DDABC3E (2 samples, 5.13%)</title><rect x="33.3333%" y="949" width="5.1282%" height="15" fill="rgb(207,117,47)" fg:x="13" fg:w="2"/><text x="33.5833%" y="959.50">`0x7FF..</text></g><g><title>`0x7FFF0DE0B611 (2 samples, 5.13%)</title><rect x="33.3333%" y="933" width="5.1282%" height="15" fill="rgb(249,43,39)" fg:x="13" fg:w="2"/><text x="33.5833%" y="943.50">`0x7FF..</text></g><g><title>`0x7FFF0DE0BC5C (1 samples, 2.56%)</title><rect x="35.8974%" y="917" width="2.5641%" height="15" fill="rgb(209,38,44)" fg:x="14" fg:w="1"/><text x="36.1474%" y="927.50">`0..</text></g><g><title>`0x7FFF0DE0C6CD (1 samples, 2.56%)</title><rect x="35.8974%" y="901" width="2.5641%" height="15" fill="rgb(236,212,23)" fg:x="14" fg:w="1"/><text x="36.1474%" y="911.50">`0..</text></g><g><title>`0x7FFF0DDE14FB (1 samples, 2.56%)</title><rect x="35.8974%" y="885" width="2.5641%" height="15" fill="rgb(242,79,21)" fg:x="14" fg:w="1"/><text x="36.1474%" y="895.50">`0..</text></g><g><title>`0x7FFF0DE055DB (1 samples, 2.56%)</title><rect x="38.4615%" y="981" width="2.5641%" height="15" fill="rgb(211,96,35)" fg:x="15" fg:w="1"/><text x="38.7115%" y="991.50">`0..</text></g><g><title>`0x7FFF0DDDAD8F (1 samples, 2.56%)</title><rect x="38.4615%" y="965" width="2.5641%" height="15" fill="rgb(253,215,40)" fg:x="15" fg:w="1"/><text x="38.7115%" y="975.50">`0..</text></g><g><title>`0x7FFF0DDDAEB6 (1 samples, 2.56%)</title><rect x="38.4615%" y="949" width="2.5641%" height="15" fill="rgb(211,81,21)" fg:x="15" fg:w="1"/><text x="38.7115%" y="959.50">`0..</text></g><g><title>`0x7FFF0DDDAE75 (1 samples, 2.56%)</title><rect x="38.4615%" y="933" width="2.5641%" height="15" fill="rgb(208,190,38)" fg:x="15" fg:w="1"/><text x="38.7115%" y="943.50">`0..</text></g><g><title>`0x7FFF0DE0F5EB (1 samples, 2.56%)</title><rect x="38.4615%" y="917" width="2.5641%" height="15" fill="rgb(235,213,38)" fg:x="15" fg:w="1"/><text x="38.7115%" y="927.50">`0..</text></g><g><title>`0x7FFF0DE10135 (1 samples, 2.56%)</title><rect x="38.4615%" y="901" width="2.5641%" height="15" fill="rgb(237,122,38)" fg:x="15" fg:w="1"/><text x="38.7115%" y="911.50">`0..</text></g><g><title>`0x7FFF0DE0F4ED (1 samples, 2.56%)</title><rect x="38.4615%" y="885" width="2.5641%" height="15" fill="rgb(244,218,35)" fg:x="15" fg:w="1"/><text x="38.7115%" y="895.50">`0..</text></g><g><title>`0x7FFF0DF02754 (1 samples, 2.56%)</title><rect x="38.4615%" y="869" width="2.5641%" height="15" fill="rgb(240,68,47)" fg:x="15" fg:w="1"/><text x="38.7115%" y="879.50">`0..</text></g><g><title>`0x7FFF0BA06E26 (1 samples, 2.56%)</title><rect x="41.0256%" y="869" width="2.5641%" height="15" fill="rgb(210,16,53)" fg:x="16" fg:w="1"/><text x="41.2756%" y="879.50">`0..</text></g><g><title>`0x7FFF0BA6AD56 (1 samples, 2.56%)</title><rect x="41.0256%" y="853" width="2.5641%" height="15" fill="rgb(235,124,12)" fg:x="16" fg:w="1"/><text x="41.2756%" y="863.50">`0..</text></g><g><title>`0x7FFF0B9FA776 (1 samples, 2.56%)</title><rect x="41.0256%" y="837" width="2.5641%" height="15" fill="rgb(224,169,11)" fg:x="16" fg:w="1"/><text x="41.2756%" y="847.50">`0..</text></g><g><title>`0x7FFF0B9FA906 (1 samples, 2.56%)</title><rect x="41.0256%" y="821" width="2.5641%" height="15" fill="rgb(250,166,2)" fg:x="16" fg:w="1"/><text x="41.2756%" y="831.50">`0..</text></g><g><title>`0x7FFF0B9FAE4A (1 samples, 2.56%)</title><rect x="41.0256%" y="805" width="2.5641%" height="15" fill="rgb(242,216,29)" fg:x="16" fg:w="1"/><text x="41.2756%" y="815.50">`0..</text></g><g><title>`0x7FFF0B9FAFD1 (1 samples, 2.56%)</title><rect x="41.0256%" y="789" width="2.5641%" height="15" fill="rgb(230,116,27)" fg:x="16" fg:w="1"/><text x="41.2756%" y="799.50">`0..</text></g><g><title>`0x7FFF0B9FA266 (1 samples, 2.56%)</title><rect x="41.0256%" y="773" width="2.5641%" height="15" fill="rgb(228,99,48)" fg:x="16" fg:w="1"/><text x="41.2756%" y="783.50">`0..</text></g><g><title>`0x7FFF0B44A662 (1 samples, 2.56%)</title><rect x="41.0256%" y="757" width="2.5641%" height="15" fill="rgb(253,11,6)" fg:x="16" fg:w="1"/><text x="41.2756%" y="767.50">`0..</text></g><g><title>`0x7FFF0DDD5FCE (18 samples, 46.15%)</title><rect x="0.0000%" y="1029" width="46.1538%" height="15" fill="rgb(247,143,39)" fg:x="0" fg:w="18"/><text x="0.2500%" y="1039.50">`0x7FFF0DDD5FCE</text></g><g><title>`0x7FFF0DE0364E (17 samples, 43.59%)</title><rect x="2.5641%" y="1013" width="43.5897%" height="15" fill="rgb(236,97,10)" fg:x="1" fg:w="17"/><text x="2.8141%" y="1023.50">`0x7FFF0DE0364E</text></g><g><title>`0x7FFF0DE03864 (17 samples, 43.59%)</title><rect x="2.5641%" y="997" width="43.5897%" height="15" fill="rgb(233,208,19)" fg:x="1" fg:w="17"/><text x="2.8141%" y="1007.50">`0x7FFF0DE03864</text></g><g><title>`0x7FFF0DE056AC (2 samples, 5.13%)</title><rect x="41.0256%" y="981" width="5.1282%" height="15" fill="rgb(216,164,2)" fg:x="16" fg:w="2"/><text x="41.2756%" y="991.50">`0x7FF..</text></g><g><title>`0x7FFF0DDDBCA6 (2 samples, 5.13%)</title><rect x="41.0256%" y="965" width="5.1282%" height="15" fill="rgb(220,129,5)" fg:x="16" fg:w="2"/><text x="41.2756%" y="975.50">`0x7FF..</text></g><g><title>`0x7FFF0DDDBCA6 (2 samples, 5.13%)</title><rect x="41.0256%" y="949" width="5.1282%" height="15" fill="rgb(242,17,10)" fg:x="16" fg:w="2"/><text x="41.2756%" y="959.50">`0x7FF..</text></g><g><title>`0x7FFF0DDDBC7A (2 samples, 5.13%)</title><rect x="41.0256%" y="933" width="5.1282%" height="15" fill="rgb(242,107,0)" fg:x="16" fg:w="2"/><text x="41.2756%" y="943.50">`0x7FF..</text></g><g><title>`0x7FFF0DE1193C (2 samples, 5.13%)</title><rect x="41.0256%" y="917" width="5.1282%" height="15" fill="rgb(251,28,31)" fg:x="16" fg:w="2"/><text x="41.2756%" y="927.50">`0x7FF..</text></g><g><title>`0x7FFF0DE129CE (2 samples, 5.13%)</title><rect x="41.0256%" y="901" width="5.1282%" height="15" fill="rgb(233,223,10)" fg:x="16" fg:w="2"/><text x="41.2756%" y="911.50">`0x7FF..</text></g><g><title>`0x7FFF0DF0020E (2 samples, 5.13%)</title><rect x="41.0256%" y="885" width="5.1282%" height="15" fill="rgb(215,21,27)" fg:x="16" fg:w="2"/><text x="41.2756%" y="895.50">`0x7FF..</text></g><g><title>`0x7FFF0BA53C3D (1 samples, 2.56%)</title><rect x="43.5897%" y="869" width="2.5641%" height="15" fill="rgb(232,23,21)" fg:x="17" fg:w="1"/><text x="43.8397%" y="879.50">`0..</text></g><g><title>`0x7FFF0BAA35F9 (1 samples, 2.56%)</title><rect x="43.5897%" y="853" width="2.5641%" height="15" fill="rgb(244,5,23)" fg:x="17" fg:w="1"/><text x="43.8397%" y="863.50">`0..</text></g><g><title>`0x7FFF0DE1B202 (1 samples, 2.56%)</title><rect x="46.1538%" y="981" width="2.5641%" height="15" fill="rgb(226,81,46)" fg:x="18" fg:w="1"/><text x="46.4038%" y="991.50">`0..</text></g><g><title>`0x7FFF0DE1BCA4 (1 samples, 2.56%)</title><rect x="46.1538%" y="965" width="2.5641%" height="15" fill="rgb(247,70,30)" fg:x="18" fg:w="1"/><text x="46.4038%" y="975.50">`0..</text></g><g><title>`0x7FFF0DF04D84 (1 samples, 2.56%)</title><rect x="46.1538%" y="949" width="2.5641%" height="15" fill="rgb(212,68,19)" fg:x="18" fg:w="1"/><text x="46.4038%" y="959.50">`0..</text></g><g><title>`0x7FFF0DE0E7E9 (1 samples, 2.56%)</title><rect x="48.7179%" y="933" width="2.5641%" height="15" fill="rgb(240,187,13)" fg:x="19" fg:w="1"/><text x="48.9679%" y="943.50">`0..</text></g><g><title>`0x7FFF0DE0ED40 (1 samples, 2.56%)</title><rect x="48.7179%" y="917" width="2.5641%" height="15" fill="rgb(223,113,26)" fg:x="19" fg:w="1"/><text x="48.9679%" y="927.50">`0..</text></g><g><title>`0x7FFF0DE0F073 (1 samples, 2.56%)</title><rect x="48.7179%" y="901" width="2.5641%" height="15" fill="rgb(206,192,2)" fg:x="19" fg:w="1"/><text x="48.9679%" y="911.50">`0..</text></g><g><title>`0x7FFF0DF02574 (1 samples, 2.56%)</title><rect x="48.7179%" y="885" width="2.5641%" height="15" fill="rgb(241,108,4)" fg:x="19" fg:w="1"/><text x="48.9679%" y="895.50">`0..</text></g><g><title>`0x7FFF0DE0E111 (2 samples, 5.13%)</title><rect x="48.7179%" y="949" width="5.1282%" height="15" fill="rgb(247,173,49)" fg:x="19" fg:w="2"/><text x="48.9679%" y="959.50">`0x7FF..</text></g><g><title>`0x7FFF0DE0E912 (1 samples, 2.56%)</title><rect x="51.2821%" y="933" width="2.5641%" height="15" fill="rgb(224,114,35)" fg:x="20" fg:w="1"/><text x="51.5321%" y="943.50">`0..</text></g><g><title>`0x7FFF0DE55FD7 (1 samples, 2.56%)</title><rect x="51.2821%" y="917" width="2.5641%" height="15" fill="rgb(245,159,27)" fg:x="20" fg:w="1"/><text x="51.5321%" y="927.50">`0..</text></g><g><title>`0x7FFF0DE5617D (1 samples, 2.56%)</title><rect x="51.2821%" y="901" width="2.5641%" height="15" fill="rgb(245,172,44)" fg:x="20" fg:w="1"/><text x="51.5321%" y="911.50">`0..</text></g><g><title>`0x7FFF0DE56553 (1 samples, 2.56%)</title><rect x="51.2821%" y="885" width="2.5641%" height="15" fill="rgb(236,23,11)" fg:x="20" fg:w="1"/><text x="51.5321%" y="895.50">`0..</text></g><g><title>`0x7FFF0DE56750 (1 samples, 2.56%)</title><rect x="51.2821%" y="869" width="2.5641%" height="15" fill="rgb(205,117,38)" fg:x="20" fg:w="1"/><text x="51.5321%" y="879.50">`0..</text></g><g><title>`0x7FFF0DE55E38 (1 samples, 2.56%)</title><rect x="51.2821%" y="853" width="2.5641%" height="15" fill="rgb(237,72,25)" fg:x="20" fg:w="1"/><text x="51.5321%" y="863.50">`0..</text></g><g><title>`0x7FFF0DF02014 (1 samples, 2.56%)</title><rect x="51.2821%" y="837" width="2.5641%" height="15" fill="rgb(244,70,9)" fg:x="20" fg:w="1"/><text x="51.5321%" y="847.50">`0..</text></g><g><title>`0x7FFF0DE1C27A (3 samples, 7.69%)</title><rect x="48.7179%" y="965" width="7.6923%" height="15" fill="rgb(217,125,39)" fg:x="19" fg:w="3"/><text x="48.9679%" y="975.50">`0x7FFF0DE1..</text></g><g><title>`0x7FFF0DE0E23C (1 samples, 2.56%)</title><rect x="53.8462%" y="949" width="2.5641%" height="15" fill="rgb(235,36,10)" fg:x="21" fg:w="1"/><text x="54.0962%" y="959.50">`0..</text></g><g><title>`0x7FFF0DE1065C (1 samples, 2.56%)</title><rect x="53.8462%" y="933" width="2.5641%" height="15" fill="rgb(251,123,47)" fg:x="21" fg:w="1"/><text x="54.0962%" y="943.50">`0..</text></g><g><title>`0x7FFF0DE0BBB8 (1 samples, 2.56%)</title><rect x="53.8462%" y="917" width="2.5641%" height="15" fill="rgb(221,13,13)" fg:x="21" fg:w="1"/><text x="54.0962%" y="927.50">`0..</text></g><g><title>`0x7FFF0DDA9B5E (1 samples, 2.56%)</title><rect x="53.8462%" y="901" width="2.5641%" height="15" fill="rgb(238,131,9)" fg:x="21" fg:w="1"/><text x="54.0962%" y="911.50">`0..</text></g><g><title>`0x7FFF0DDE118E (1 samples, 2.56%)</title><rect x="53.8462%" y="885" width="2.5641%" height="15" fill="rgb(211,50,8)" fg:x="21" fg:w="1"/><text x="54.0962%" y="895.50">`0..</text></g><g><title>`0x7FFF0DE329F1 (5 samples, 12.82%)</title><rect x="46.1538%" y="997" width="12.8205%" height="15" fill="rgb(245,182,24)" fg:x="18" fg:w="5"/><text x="46.4038%" y="1007.50">`0x7FFF0DE329F1</text></g><g><title>`0x7FFF0DE1B400 (4 samples, 10.26%)</title><rect x="48.7179%" y="981" width="10.2564%" height="15" fill="rgb(242,14,37)" fg:x="19" fg:w="4"/><text x="48.9679%" y="991.50">`0x7FFF0DE1B400</text></g><g><title>`0x7FFF0DE1C341 (1 samples, 2.56%)</title><rect x="56.4103%" y="965" width="2.5641%" height="15" fill="rgb(246,228,12)" fg:x="22" fg:w="1"/><text x="56.6603%" y="975.50">`0..</text></g><g><title>`0x7FFF0DDF409B (1 samples, 2.56%)</title><rect x="56.4103%" y="949" width="2.5641%" height="15" fill="rgb(213,55,15)" fg:x="22" fg:w="1"/><text x="56.6603%" y="959.50">`0..</text></g><g><title>`0x7FFF0DE19576 (1 samples, 2.56%)</title><rect x="56.4103%" y="933" width="2.5641%" height="15" fill="rgb(209,9,3)" fg:x="22" fg:w="1"/><text x="56.6603%" y="943.50">`0..</text></g><g><title>`0x7FFF0DE0E4BF (1 samples, 2.56%)</title><rect x="58.9744%" y="837" width="2.5641%" height="15" fill="rgb(230,59,30)" fg:x="23" fg:w="1"/><text x="59.2244%" y="847.50">`0..</text></g><g><title>`0x7FFF0DE0ED40 (1 samples, 2.56%)</title><rect x="58.9744%" y="821" width="2.5641%" height="15" fill="rgb(209,121,21)" fg:x="23" fg:w="1"/><text x="59.2244%" y="831.50">`0..</text></g><g><title>`0x7FFF0DE0F073 (1 samples, 2.56%)</title><rect x="58.9744%" y="805" width="2.5641%" height="15" fill="rgb(220,109,13)" fg:x="23" fg:w="1"/><text x="59.2244%" y="815.50">`0..</text></g><g><title>`0x7FFF0DF02574 (1 samples, 2.56%)</title><rect x="58.9744%" y="789" width="2.5641%" height="15" fill="rgb(232,18,1)" fg:x="23" fg:w="1"/><text x="59.2244%" y="799.50">`0..</text></g><g><title>`0x7FFF0DDA8860 (2 samples, 5.13%)</title><rect x="58.9744%" y="869" width="5.1282%" height="15" fill="rgb(215,41,42)" fg:x="23" fg:w="2"/><text x="59.2244%" y="879.50">`0x7FF..</text></g><g><title>`0x7FFF0DE1C354 (2 samples, 5.13%)</title><rect x="58.9744%" y="853" width="5.1282%" height="15" fill="rgb(224,123,36)" fg:x="23" fg:w="2"/><text x="59.2244%" y="863.50">`0x7FF..</text></g><g><title>`0x7FFF0DE0E52D (1 samples, 2.56%)</title><rect x="61.5385%" y="837" width="2.5641%" height="15" fill="rgb(240,125,3)" fg:x="24" fg:w="1"/><text x="61.7885%" y="847.50">`0..</text></g><g><title>`0x7FFF0DE1065C (1 samples, 2.56%)</title><rect x="61.5385%" y="821" width="2.5641%" height="15" fill="rgb(205,98,50)" fg:x="24" fg:w="1"/><text x="61.7885%" y="831.50">`0..</text></g><g><title>`0x7FFF0DE0BBB8 (1 samples, 2.56%)</title><rect x="61.5385%" y="805" width="2.5641%" height="15" fill="rgb(205,185,37)" fg:x="24" fg:w="1"/><text x="61.7885%" y="815.50">`0..</text></g><g><title>`0x7FFF0DDA9E0E (1 samples, 2.56%)</title><rect x="61.5385%" y="789" width="2.5641%" height="15" fill="rgb(238,207,15)" fg:x="24" fg:w="1"/><text x="61.7885%" y="799.50">`0..</text></g><g><title>`0x7FFF0DDABC3E (1 samples, 2.56%)</title><rect x="61.5385%" y="773" width="2.5641%" height="15" fill="rgb(213,199,42)" fg:x="24" fg:w="1"/><text x="61.7885%" y="783.50">`0..</text></g><g><title>`0x7FFF0DE0B611 (1 samples, 2.56%)</title><rect x="61.5385%" y="757" width="2.5641%" height="15" fill="rgb(235,201,11)" fg:x="24" fg:w="1"/><text x="61.7885%" y="767.50">`0..</text></g><g><title>`0x7FFF0DE0BC5C (1 samples, 2.56%)</title><rect x="61.5385%" y="741" width="2.5641%" height="15" fill="rgb(207,46,11)" fg:x="24" fg:w="1"/><text x="61.7885%" y="751.50">`0..</text></g><g><title>`0x7FFF0DE0C74A (1 samples, 2.56%)</title><rect x="61.5385%" y="725" width="2.5641%" height="15" fill="rgb(241,35,35)" fg:x="24" fg:w="1"/><text x="61.7885%" y="735.50">`0..</text></g><g><title>`0x7FFF0DDE3E59 (1 samples, 2.56%)</title><rect x="61.5385%" y="709" width="2.5641%" height="15" fill="rgb(243,32,47)" fg:x="24" fg:w="1"/><text x="61.7885%" y="719.50">`0..</text></g><g><title>`0x7FFF0DDE3994 (1 samples, 2.56%)</title><rect x="61.5385%" y="693" width="2.5641%" height="15" fill="rgb(247,202,23)" fg:x="24" fg:w="1"/><text x="61.7885%" y="703.50">`0..</text></g><g><title>`0x7FFF0DF02154 (1 samples, 2.56%)</title><rect x="61.5385%" y="677" width="2.5641%" height="15" fill="rgb(219,102,11)" fg:x="24" fg:w="1"/><text x="61.7885%" y="687.50">`0..</text></g><g><title>`0x7FFF0BA90046 (3 samples, 7.69%)</title><rect x="58.9744%" y="981" width="7.6923%" height="15" fill="rgb(243,110,44)" fg:x="23" fg:w="3"/><text x="59.2244%" y="991.50">`0x7FFF0BA9..</text></g><g><title>`0x7FFF0BA7553D (3 samples, 7.69%)</title><rect x="58.9744%" y="965" width="7.6923%" height="15" fill="rgb(222,74,54)" fg:x="23" fg:w="3"/><text x="59.2244%" y="975.50">`0x7FFF0BA7..</text></g><g><title>`0x7FFF0BA0423B (3 samples, 7.69%)</title><rect x="58.9744%" y="949" width="7.6923%" height="15" fill="rgb(216,99,12)" fg:x="23" fg:w="3"/><text x="59.2244%" y="959.50">`0x7FFF0BA0..</text></g><g><title>`0x7FFF0BA66225 (3 samples, 7.69%)</title><rect x="58.9744%" y="933" width="7.6923%" height="15" fill="rgb(226,22,26)" fg:x="23" fg:w="3"/><text x="59.2244%" y="943.50">`0x7FFF0BA6..</text></g><g><title>`0x7FFF0B412AC6 (3 samples, 7.69%)</title><rect x="58.9744%" y="917" width="7.6923%" height="15" fill="rgb(217,163,10)" fg:x="23" fg:w="3"/><text x="59.2244%" y="927.50">`0x7FFF0B41..</text></g><g><title>`0x7FFF0DDF5D80 (3 samples, 7.69%)</title><rect x="58.9744%" y="901" width="7.6923%" height="15" fill="rgb(213,25,53)" fg:x="23" fg:w="3"/><text x="59.2244%" y="911.50">`0x7FFF0DDF..</text></g><g><title>`0x7FFF0DDA84E0 (3 samples, 7.69%)</title><rect x="58.9744%" y="885" width="7.6923%" height="15" fill="rgb(252,105,26)" fg:x="23" fg:w="3"/><text x="59.2244%" y="895.50">`0x7FFF0DDA..</text></g><g><title>`0x7FFF0DDA88D4 (1 samples, 2.56%)</title><rect x="64.1026%" y="869" width="2.5641%" height="15" fill="rgb(220,39,43)" fg:x="25" fg:w="1"/><text x="64.3526%" y="879.50">`0..</text></g><g><title>`0x7FFF0DDDAE03 (1 samples, 2.56%)</title><rect x="64.1026%" y="853" width="2.5641%" height="15" fill="rgb(229,68,48)" fg:x="25" fg:w="1"/><text x="64.3526%" y="863.50">`0..</text></g><g><title>`0x7FFF0DDDBCA6 (1 samples, 2.56%)</title><rect x="64.1026%" y="837" width="2.5641%" height="15" fill="rgb(252,8,32)" fg:x="25" fg:w="1"/><text x="64.3526%" y="847.50">`0..</text></g><g><title>`0x7FFF0DDDBC7A (1 samples, 2.56%)</title><rect x="64.1026%" y="821" width="2.5641%" height="15" fill="rgb(223,20,43)" fg:x="25" fg:w="1"/><text x="64.3526%" y="831.50">`0..</text></g><g><title>`0x7FFF0DE1193C (1 samples, 2.56%)</title><rect x="64.1026%" y="805" width="2.5641%" height="15" fill="rgb(229,81,49)" fg:x="25" fg:w="1"/><text x="64.3526%" y="815.50">`0..</text></g><g><title>`0x7FFF0DE129CE (1 samples, 2.56%)</title><rect x="64.1026%" y="789" width="2.5641%" height="15" fill="rgb(236,28,36)" fg:x="25" fg:w="1"/><text x="64.3526%" y="799.50">`0..</text></g><g><title>`0x7FFF0DF0020E (1 samples, 2.56%)</title><rect x="64.1026%" y="773" width="2.5641%" height="15" fill="rgb(249,185,26)" fg:x="25" fg:w="1"/><text x="64.3526%" y="783.50">`0..</text></g><g><title>`0x7FFF0BCC7A67 (1 samples, 2.56%)</title><rect x="64.1026%" y="757" width="2.5641%" height="15" fill="rgb(249,174,33)" fg:x="25" fg:w="1"/><text x="64.3526%" y="767.50">`0..</text></g><g><title>`0x7FFF0BCC7D7E (1 samples, 2.56%)</title><rect x="64.1026%" y="741" width="2.5641%" height="15" fill="rgb(233,201,37)" fg:x="25" fg:w="1"/><text x="64.3526%" y="751.50">`0..</text></g><g><title>`0x7FFF0BCFED32 (1 samples, 2.56%)</title><rect x="64.1026%" y="725" width="2.5641%" height="15" fill="rgb(221,78,26)" fg:x="25" fg:w="1"/><text x="64.3526%" y="735.50">`0..</text></g><g><title>`0x7FFF0BCFEC51 (1 samples, 2.56%)</title><rect x="64.1026%" y="709" width="2.5641%" height="15" fill="rgb(250,127,30)" fg:x="25" fg:w="1"/><text x="64.3526%" y="719.50">`0..</text></g><g><title>`0x7FFF0DE1A0DD (1 samples, 2.56%)</title><rect x="64.1026%" y="693" width="2.5641%" height="15" fill="rgb(230,49,44)" fg:x="25" fg:w="1"/><text x="64.3526%" y="703.50">`0..</text></g><g><title>`0x7FFF0BA90093 (1 samples, 2.56%)</title><rect x="66.6667%" y="981" width="2.5641%" height="15" fill="rgb(229,67,23)" fg:x="26" fg:w="1"/><text x="66.9167%" y="991.50">`0..</text></g><g><title>`0x7FFF0C5D18AB (1 samples, 2.56%)</title><rect x="66.6667%" y="965" width="2.5641%" height="15" fill="rgb(249,83,47)" fg:x="26" fg:w="1"/><text x="66.9167%" y="975.50">`0..</text></g><g><title>`0x7FFF0DDDC504 (1 samples, 2.56%)</title><rect x="66.6667%" y="949" width="2.5641%" height="15" fill="rgb(215,43,3)" fg:x="26" fg:w="1"/><text x="66.9167%" y="959.50">`0..</text></g><g><title>`0x7FFF0DDDDC2F (1 samples, 2.56%)</title><rect x="66.6667%" y="933" width="2.5641%" height="15" fill="rgb(238,154,13)" fg:x="26" fg:w="1"/><text x="66.9167%" y="943.50">`0..</text></g><g><title>`0x7FFF0DE129CE (1 samples, 2.56%)</title><rect x="66.6667%" y="917" width="2.5641%" height="15" fill="rgb(219,56,2)" fg:x="26" fg:w="1"/><text x="66.9167%" y="927.50">`0..</text></g><g><title>`0x7FFF0DF0020E (1 samples, 2.56%)</title><rect x="66.6667%" y="901" width="2.5641%" height="15" fill="rgb(233,0,4)" fg:x="26" fg:w="1"/><text x="66.9167%" y="911.50">`0..</text></g><g><title>`0x7FFF0B5226F6 (1 samples, 2.56%)</title><rect x="66.6667%" y="885" width="2.5641%" height="15" fill="rgb(235,30,7)" fg:x="26" fg:w="1"/><text x="66.9167%" y="895.50">`0..</text></g><g><title>`0x7FFF0B490E80 (1 samples, 2.56%)</title><rect x="66.6667%" y="869" width="2.5641%" height="15" fill="rgb(250,79,13)" fg:x="26" fg:w="1"/><text x="66.9167%" y="879.50">`0..</text></g><g><title>`0x7FFF0B4912FF (1 samples, 2.56%)</title><rect x="66.6667%" y="853" width="2.5641%" height="15" fill="rgb(211,146,34)" fg:x="26" fg:w="1"/><text x="66.9167%" y="863.50">`0..</text></g><g><title>`0x7FFF0B492BEC (1 samples, 2.56%)</title><rect x="66.6667%" y="837" width="2.5641%" height="15" fill="rgb(228,22,38)" fg:x="26" fg:w="1"/><text x="66.9167%" y="847.50">`0..</text></g><g><title>`0x7FFF0B459A05 (1 samples, 2.56%)</title><rect x="66.6667%" y="821" width="2.5641%" height="15" fill="rgb(235,168,5)" fg:x="26" fg:w="1"/><text x="66.9167%" y="831.50">`0..</text></g><g><title>`0x7FFF0B459B26 (1 samples, 2.56%)</title><rect x="66.6667%" y="805" width="2.5641%" height="15" fill="rgb(221,155,16)" fg:x="26" fg:w="1"/><text x="66.9167%" y="815.50">`0..</text></g><g><title>`0x7FFF0B49235E (1 samples, 2.56%)</title><rect x="66.6667%" y="789" width="2.5641%" height="15" fill="rgb(215,215,53)" fg:x="26" fg:w="1"/><text x="66.9167%" y="799.50">`0..</text></g><g><title>`0x7FFF0B49182A (1 samples, 2.56%)</title><rect x="66.6667%" y="773" width="2.5641%" height="15" fill="rgb(223,4,10)" fg:x="26" fg:w="1"/><text x="66.9167%" y="783.50">`0..</text></g><g><title>`0x7FFF0B45937C (1 samples, 2.56%)</title><rect x="66.6667%" y="757" width="2.5641%" height="15" fill="rgb(234,103,6)" fg:x="26" fg:w="1"/><text x="66.9167%" y="767.50">`0..</text></g><g><title>`0x7FFF0B45998F (1 samples, 2.56%)</title><rect x="66.6667%" y="741" width="2.5641%" height="15" fill="rgb(227,97,0)" fg:x="26" fg:w="1"/><text x="66.9167%" y="751.50">`0..</text></g><g><title>`0x7FFF0B50DDDB (1 samples, 2.56%)</title><rect x="66.6667%" y="725" width="2.5641%" height="15" fill="rgb(234,150,53)" fg:x="26" fg:w="1"/><text x="66.9167%" y="735.50">`0..</text></g><g><title>`0x7FFF0B50C4D5 (1 samples, 2.56%)</title><rect x="66.6667%" y="709" width="2.5641%" height="15" fill="rgb(228,201,54)" fg:x="26" fg:w="1"/><text x="66.9167%" y="719.50">`0..</text></g><g><title>`0x7FFF0B458C51 (1 samples, 2.56%)</title><rect x="66.6667%" y="693" width="2.5641%" height="15" fill="rgb(222,22,37)" fg:x="26" fg:w="1"/><text x="66.9167%" y="703.50">`0..</text></g><g><title>`0x7FFF0B458E1B (1 samples, 2.56%)</title><rect x="66.6667%" y="677" width="2.5641%" height="15" fill="rgb(237,53,32)" fg:x="26" fg:w="1"/><text x="66.9167%" y="687.50">`0..</text></g><g><title>`0x7FFF0B459701 (1 samples, 2.56%)</title><rect x="66.6667%" y="661" width="2.5641%" height="15" fill="rgb(233,25,53)" fg:x="26" fg:w="1"/><text x="66.9167%" y="671.50">`0..</text></g><g><title>`0x7FFF0B459046 (1 samples, 2.56%)</title><rect x="66.6667%" y="645" width="2.5641%" height="15" fill="rgb(210,40,34)" fg:x="26" fg:w="1"/><text x="66.9167%" y="655.50">`0..</text></g><g><title>soul_lang_rust.exe`std::rt::lang_start_internal::closure$0 (1 samples, 2.56%)</title><rect x="69.2308%" y="885" width="2.5641%" height="15" fill="rgb(241,220,44)" fg:x="27" fg:w="1"/><text x="69.4808%" y="895.50">so..</text></g><g><title>soul_lang_rust.exe`std::rt::init (1 samples, 2.56%)</title><rect x="69.2308%" y="869" width="2.5641%" height="15" fill="rgb(235,28,35)" fg:x="27" fg:w="1"/><text x="69.4808%" y="879.50">so..</text></g><g><title>soul_lang_rust.exe`std::thread::current::current_id (1 samples, 2.56%)</title><rect x="69.2308%" y="853" width="2.5641%" height="15" fill="rgb(210,56,17)" fg:x="27" fg:w="1"/><text x="69.4808%" y="863.50">so..</text></g><g><title>soul_lang_rust.exe`std::thread::current::id::get_or_init (1 samples, 2.56%)</title><rect x="69.2308%" y="837" width="2.5641%" height="15" fill="rgb(224,130,29)" fg:x="27" fg:w="1"/><text x="69.4808%" y="847.50">so..</text></g><g><title>soul_lang_rust.exe`std::thread::current::id::get (1 samples, 2.56%)</title><rect x="69.2308%" y="821" width="2.5641%" height="15" fill="rgb(235,212,8)" fg:x="27" fg:w="1"/><text x="69.4808%" y="831.50">so..</text></g><g><title>soul_lang_rust.exe`core::cell::Cell::get (1 samples, 2.56%)</title><rect x="69.2308%" y="805" width="2.5641%" height="15" fill="rgb(223,33,50)" fg:x="27" fg:w="1"/><text x="69.4808%" y="815.50">so..</text></g><g><title>soul_lang_rust.exe`std::sys::pal::windows::c::SetThreadDescription::load (1 samples, 2.56%)</title><rect x="69.2308%" y="789" width="2.5641%" height="15" fill="rgb(219,149,13)" fg:x="27" fg:w="1"/><text x="69.4808%" y="799.50">so..</text></g><g><title>soul_lang_rust.exe`std::fs::create_dir_all (1 samples, 2.56%)</title><rect x="74.3590%" y="741" width="2.5641%" height="15" fill="rgb(250,156,29)" fg:x="29" fg:w="1"/><text x="74.6090%" y="751.50">so..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place (1 samples, 2.56%)</title><rect x="74.3590%" y="725" width="2.5641%" height="15" fill="rgb(216,193,19)" fg:x="29" fg:w="1"/><text x="74.6090%" y="735.50">so..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 2.56%)</title><rect x="74.3590%" y="709" width="2.5641%" height="15" fill="rgb(216,135,14)" fg:x="29" fg:w="1"/><text x="74.6090%" y="719.50">so..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 2.56%)</title><rect x="74.3590%" y="693" width="2.5641%" height="15" fill="rgb(241,47,5)" fg:x="29" fg:w="1"/><text x="74.6090%" y="703.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 2.56%)</title><rect x="74.3590%" y="677" width="2.5641%" height="15" fill="rgb(233,42,35)" fg:x="29" fg:w="1"/><text x="74.6090%" y="687.50">so..</text></g><g><title>soul_lang_rust.exe`std::fs::DirBuilder::create_dir_all (1 samples, 2.56%)</title><rect x="74.3590%" y="661" width="2.5641%" height="15" fill="rgb(231,13,6)" fg:x="29" fg:w="1"/><text x="74.6090%" y="671.50">so..</text></g><g><title>soul_lang_rust.exe`std::sys::pal::windows::fs::DirBuilder::mkdir (1 samples, 2.56%)</title><rect x="74.3590%" y="645" width="2.5641%" height="15" fill="rgb(207,181,40)" fg:x="29" fg:w="1"/><text x="74.6090%" y="655.50">so..</text></g><g><title>soul_lang_rust.exe`std::sys::pal::windows::cvt (1 samples, 2.56%)</title><rect x="74.3590%" y="629" width="2.5641%" height="15" fill="rgb(254,173,49)" fg:x="29" fg:w="1"/><text x="74.6090%" y="639.50">so..</text></g><g><title>soul_lang_rust.exe`std::sys::pal::windows::impl$3::is_zero (1 samples, 2.56%)</title><rect x="74.3590%" y="613" width="2.5641%" height="15" fill="rgb(221,1,38)" fg:x="29" fg:w="1"/><text x="74.6090%" y="623.50">so..</text></g><g><title>`0x7FFF0B45CB02 (1 samples, 2.56%)</title><rect x="74.3590%" y="597" width="2.5641%" height="15" fill="rgb(206,124,46)" fg:x="29" fg:w="1"/><text x="74.6090%" y="607.50">`0..</text></g><g><title>`0x7FFF0B528498 (1 samples, 2.56%)</title><rect x="74.3590%" y="581" width="2.5641%" height="15" fill="rgb(249,21,11)" fg:x="29" fg:w="1"/><text x="74.6090%" y="591.50">`0..</text></g><g><title>`0x7FFF0DF02874 (1 samples, 2.56%)</title><rect x="74.3590%" y="565" width="2.5641%" height="15" fill="rgb(222,201,40)" fg:x="29" fg:w="1"/><text x="74.6090%" y="575.50">`0..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::impl$0::main_err_map(enum2$&lt;core::result::Result&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt;,soul_lang_rust::errors::soul_error::SoulError&gt; &gt;, ref$ (2 samples, 5.13%)</title><rect x="74.3590%" y="789" width="5.1282%" height="15" fill="rgb(235,61,29)" fg:x="29" fg:w="2"/><text x="74.6090%" y="799.50">soul_l..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;core::result::Result&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt;,soul_lang_rust::errors::soul_error::SoulError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt;,soul_lang_rust::errors::soul_error::SoulError&gt; &gt;, soul_lang_rust::impl$0::main_err_map::closure_env$0&lt;std::io::buffered::bufreader::BufReader (2 samples, 5.13%)</title><rect x="74.3590%" y="773" width="5.1282%" height="15" fill="rgb(219,207,3)" fg:x="29" fg:w="2"/><text x="74.6090%" y="783.50">soul_l..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::get_file_reader (2 samples, 5.13%)</title><rect x="74.3590%" y="757" width="5.1282%" height="15" fill="rgb(222,56,46)" fg:x="29" fg:w="2"/><text x="74.6090%" y="767.50">soul_l..</text></g><g><title>soul_lang_rust.exe`std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt;::new (1 samples, 2.56%)</title><rect x="76.9231%" y="741" width="2.5641%" height="15" fill="rgb(239,76,54)" fg:x="30" fg:w="1"/><text x="77.1731%" y="751.50">so..</text></g><g><title>soul_lang_rust.exe`std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt;::with_capacity (1 samples, 2.56%)</title><rect x="76.9231%" y="725" width="2.5641%" height="15" fill="rgb(231,124,27)" fg:x="30" fg:w="1"/><text x="77.1731%" y="735.50">so..</text></g><g><title>soul_lang_rust.exe`std::io::buffered::bufreader::buffer::Buffer::with_capacity (1 samples, 2.56%)</title><rect x="76.9231%" y="709" width="2.5641%" height="15" fill="rgb(249,195,6)" fg:x="30" fg:w="1"/><text x="77.1731%" y="719.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::boxed::impl$2::new_uninit_slice (1 samples, 2.56%)</title><rect x="76.9231%" y="693" width="2.5641%" height="15" fill="rgb(237,174,47)" fg:x="30" fg:w="1"/><text x="77.1731%" y="703.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity (1 samples, 2.56%)</title><rect x="76.9231%" y="677" width="2.5641%" height="15" fill="rgb(206,201,31)" fg:x="30" fg:w="1"/><text x="77.1731%" y="687.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity (1 samples, 2.56%)</title><rect x="76.9231%" y="661" width="2.5641%" height="15" fill="rgb(231,57,52)" fg:x="30" fg:w="1"/><text x="77.1731%" y="671.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 2.56%)</title><rect x="76.9231%" y="645" width="2.5641%" height="15" fill="rgb(248,177,22)" fg:x="30" fg:w="1"/><text x="77.1731%" y="655.50">so..</text></g><g><title>`0x7FFF0DDAF164 (1 samples, 2.56%)</title><rect x="76.9231%" y="629" width="2.5641%" height="15" fill="rgb(215,211,37)" fg:x="30" fg:w="1"/><text x="77.1731%" y="639.50">`0..</text></g><g><title>`0x7FFF0DDAF591 (1 samples, 2.56%)</title><rect x="76.9231%" y="613" width="2.5641%" height="15" fill="rgb(241,128,51)" fg:x="30" fg:w="1"/><text x="77.1731%" y="623.50">`0..</text></g><g><title>`0x7FFF0DDE69A2 (1 samples, 2.56%)</title><rect x="76.9231%" y="597" width="2.5641%" height="15" fill="rgb(227,165,31)" fg:x="30" fg:w="1"/><text x="77.1731%" y="607.50">`0..</text></g><g><title>`0x7FFF0DDE7D7F (1 samples, 2.56%)</title><rect x="76.9231%" y="581" width="2.5641%" height="15" fill="rgb(228,167,24)" fg:x="30" fg:w="1"/><text x="77.1731%" y="591.50">`0..</text></g><g><title>`0x7FFF0DDE86F4 (1 samples, 2.56%)</title><rect x="76.9231%" y="565" width="2.5641%" height="15" fill="rgb(228,143,12)" fg:x="30" fg:w="1"/><text x="77.1731%" y="575.50">`0..</text></g><g><title>`0x7FFF0DDE822A (1 samples, 2.56%)</title><rect x="76.9231%" y="549" width="2.5641%" height="15" fill="rgb(249,149,8)" fg:x="30" fg:w="1"/><text x="77.1731%" y="559.50">`0..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::parser (1 samples, 2.56%)</title><rect x="79.4872%" y="789" width="2.5641%" height="15" fill="rgb(243,35,44)" fg:x="31" fg:w="1"/><text x="79.7372%" y="799.50">so..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (1 samples, 2.56%)</title><rect x="79.4872%" y="773" width="2.5641%" height="15" fill="rgb(246,89,9)" fg:x="31" fg:w="1"/><text x="79.7372%" y="783.50">so..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::steps::parser::parse::parse_tokens (1 samples, 2.56%)</title><rect x="79.4872%" y="757" width="2.5641%" height="15" fill="rgb(233,213,13)" fg:x="31" fg:w="1"/><text x="79.7372%" y="767.50">so..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;soul_lang_rust::steps::step_interfaces::i_parser::abstract_syntax_tree::spanned::Spanned&lt;enum2$ (1 samples, 2.56%)</title><rect x="79.4872%" y="741" width="2.5641%" height="15" fill="rgb(233,141,41)" fg:x="31" fg:w="1"/><text x="79.7372%" y="751.50">so..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::steps::parser::get_statments::parse_statment::get_statment (1 samples, 2.56%)</title><rect x="79.4872%" y="725" width="2.5641%" height="15" fill="rgb(239,167,4)" fg:x="31" fg:w="1"/><text x="79.7372%" y="735.50">so..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::steps::parser::get_statments::parse_statment::get_statment::err_out_of_bounds (1 samples, 2.56%)</title><rect x="79.4872%" y="709" width="2.5641%" height="15" fill="rgb(209,217,16)" fg:x="31" fg:w="1"/><text x="79.7372%" y="719.50">so..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::errors::soul_error::new_soul_error(soul_lang_rust::errors::soul_error::SoulErrorKind, soul_lang_rust::errors::soul_error::SoulSpan, ref$ (1 samples, 2.56%)</title><rect x="79.4872%" y="693" width="2.5641%" height="15" fill="rgb(219,88,35)" fg:x="31" fg:w="1"/><text x="79.7372%" y="703.50">so..</text></g><g><title>soul_lang_rust.exe`core::convert::impl$3::into(ref$ (1 samples, 2.56%)</title><rect x="79.4872%" y="677" width="2.5641%" height="15" fill="rgb(220,193,23)" fg:x="31" fg:w="1"/><text x="79.7372%" y="687.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::string::impl$45::from(ref$ (1 samples, 2.56%)</title><rect x="79.4872%" y="661" width="2.5641%" height="15" fill="rgb(230,90,52)" fg:x="31" fg:w="1"/><text x="79.7372%" y="671.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::str::impl$4::to_owned(ref$ (1 samples, 2.56%)</title><rect x="79.4872%" y="645" width="2.5641%" height="15" fill="rgb(252,106,19)" fg:x="31" fg:w="1"/><text x="79.7372%" y="655.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (1 samples, 2.56%)</title><rect x="79.4872%" y="629" width="2.5641%" height="15" fill="rgb(206,74,20)" fg:x="31" fg:w="1"/><text x="79.7372%" y="639.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (1 samples, 2.56%)</title><rect x="79.4872%" y="613" width="2.5641%" height="15" fill="rgb(230,138,44)" fg:x="31" fg:w="1"/><text x="79.7372%" y="623.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 2.56%)</title><rect x="79.4872%" y="597" width="2.5641%" height="15" fill="rgb(235,182,43)" fg:x="31" fg:w="1"/><text x="79.7372%" y="607.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 2.56%)</title><rect x="79.4872%" y="581" width="2.5641%" height="15" fill="rgb(242,16,51)" fg:x="31" fg:w="1"/><text x="79.7372%" y="591.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 2.56%)</title><rect x="79.4872%" y="565" width="2.5641%" height="15" fill="rgb(248,9,4)" fg:x="31" fg:w="1"/><text x="79.7372%" y="575.50">so..</text></g><g><title>soul_lang_rust.exe`core::ptr::const_ptr::impl$0::copy_to_nonoverlapping (1 samples, 2.56%)</title><rect x="79.4872%" y="549" width="2.5641%" height="15" fill="rgb(210,31,22)" fg:x="31" fg:w="1"/><text x="79.7372%" y="559.50">so..</text></g><g><title>soul_lang_rust.exe`core::intrinsics::copy_nonoverlapping (1 samples, 2.56%)</title><rect x="79.4872%" y="533" width="2.5641%" height="15" fill="rgb(239,54,39)" fg:x="31" fg:w="1"/><text x="79.7372%" y="543.50">so..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::source_reader(std::io::buffered::bufreader::BufReader (1 samples, 2.56%)</title><rect x="82.0513%" y="789" width="2.5641%" height="15" fill="rgb(230,99,41)" fg:x="32" fg:w="1"/><text x="82.3013%" y="799.50">so..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (1 samples, 2.56%)</title><rect x="82.0513%" y="773" width="2.5641%" height="15" fill="rgb(253,106,12)" fg:x="32" fg:w="1"/><text x="82.3013%" y="783.50">so..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::steps::source_reader::source_reader::read_source_file&lt;std::fs::File&gt;(std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt;, ref$ (1 samples, 2.56%)</title><rect x="82.0513%" y="757" width="2.5641%" height="15" fill="rgb(213,46,41)" fg:x="32" fg:w="1"/><text x="82.3013%" y="767.50">so..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::steps::source_reader::source_reader::get_estimated_token_count(ref$ (1 samples, 2.56%)</title><rect x="82.0513%" y="741" width="2.5641%" height="15" fill="rgb(215,133,35)" fg:x="32" fg:w="1"/><text x="82.3013%" y="751.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::vec::impl$17::into_iter(alloc::vec::Vec&lt;ref$ (1 samples, 2.56%)</title><rect x="82.0513%" y="725" width="2.5641%" height="15" fill="rgb(213,28,5)" fg:x="32" fg:w="1"/><text x="82.3013%" y="735.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;ref$ (1 samples, 2.56%)</title><rect x="82.0513%" y="709" width="2.5641%" height="15" fill="rgb(215,77,49)" fg:x="32" fg:w="1"/><text x="82.3013%" y="719.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::vec::Vec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt;::as_slice (1 samples, 2.56%)</title><rect x="82.0513%" y="693" width="2.5641%" height="15" fill="rgb(248,100,22)" fg:x="32" fg:w="1"/><text x="82.3013%" y="703.50">so..</text></g><g><title>soul_lang_rust.exe`once_cell::imp::OnceCell&lt;soul_lang_rust::soul_names::SoulNames&gt;::initialize&lt;soul_lang_rust::soul_names::SoulNames,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;soul_lang_rust::soul_names::SoulNames,once_cell::sync::impl$11::force::closure_env$0&lt;soul_lang_rust::soul_names::SoulNames,soul_lang_rust::soul_names::SoulNames (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;soul_lang_rust::soul_names::SoulNames,once_cell::sync::impl$11::force::closure_env$0&lt;soul_lang_rust::soul_names::SoulNames,soul_lang_rust::soul_names::SoulNames (*) (1 samples, 2.56%)</title><rect x="82.0513%" y="677" width="2.5641%" height="15" fill="rgb(208,67,9)" fg:x="32" fg:w="1"/><text x="82.3013%" y="687.50">so..</text></g><g><title>soul_lang_rust.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (1 samples, 2.56%)</title><rect x="82.0513%" y="661" width="2.5641%" height="15" fill="rgb(219,133,21)" fg:x="32" fg:w="1"/><text x="82.3013%" y="671.50">so..</text></g><g><title>soul_lang_rust.exe`once_cell::imp::impl$4::initialize::closure$0&lt;soul_lang_rust::soul_names::SoulNames,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;soul_lang_rust::soul_names::SoulNames,once_cell::sync::impl$11::force::closure_env$0&lt;soul_lang_rust::soul_names::SoulNames,soul_lang_rust::soul_names::SoulNames (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;soul_lang_rust::soul_names::SoulNames,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;soul_lang_rust::soul_names::SoulNames,once_cell::sync::impl$11::force::closure_env$0&lt;soul_lang_rust::soul_names::SoulNames,soul_lang_rust::soul_names::SoulNames (*)()&gt; &gt;,enum2$ (1 samples, 2.56%)</title><rect x="82.0513%" y="645" width="2.5641%" height="15" fill="rgb(246,46,29)" fg:x="32" fg:w="1"/><text x="82.3013%" y="655.50">so..</text></g><g><title>soul_lang_rust.exe`core::ops::function::FnOnce::call_once&lt;soul_lang_rust::soul_names::SOUL_NAMES::closure_env$0,tuple$&lt;&gt; &gt; (1 samples, 2.56%)</title><rect x="82.0513%" y="629" width="2.5641%" height="15" fill="rgb(246,185,52)" fg:x="32" fg:w="1"/><text x="82.3013%" y="639.50">so..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::soul_names::SoulNames::new (1 samples, 2.56%)</title><rect x="82.0513%" y="613" width="2.5641%" height="15" fill="rgb(252,136,11)" fg:x="32" fg:w="1"/><text x="82.3013%" y="623.50">so..</text></g><g><title>soul_lang_rust.exe`itertools::Itertools::sorted_by(alloc::vec::into_iter::IntoIter&lt;ref$ (1 samples, 2.56%)</title><rect x="82.0513%" y="597" width="2.5641%" height="15" fill="rgb(219,138,53)" fg:x="32" fg:w="1"/><text x="82.3013%" y="607.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::slice::impl$0::sort_by(ref_mut$&lt;slice2$&lt;ref$ (1 samples, 2.56%)</title><rect x="82.0513%" y="581" width="2.5641%" height="15" fill="rgb(211,51,23)" fg:x="32" fg:w="1"/><text x="82.3013%" y="591.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::slice::stable_sort(ref_mut$&lt;slice2$&lt;ref$&lt;str$&gt; &gt; &gt;, alloc::slice::impl$0::sort_by::closure_env$0&lt;ref$ (1 samples, 2.56%)</title><rect x="82.0513%" y="565" width="2.5641%" height="15" fill="rgb(247,221,28)" fg:x="32" fg:w="1"/><text x="82.3013%" y="575.50">so..</text></g><g><title>soul_lang_rust.exe`core::slice::sort::stable::sort(ref_mut$&lt;slice2$&lt;ref$&lt;str$&gt; &gt; &gt;, alloc::slice::impl$0::sort_by::closure_env$0&lt;ref$ (1 samples, 2.56%)</title><rect x="82.0513%" y="549" width="2.5641%" height="15" fill="rgb(251,222,45)" fg:x="32" fg:w="1"/><text x="82.3013%" y="559.50">so..</text></g><g><title>soul_lang_rust.exe`core::slice::sort::stable::driftsort_main&lt;ref$&lt;str$&gt;,alloc::slice::impl$0::sort_by::closure_env$0&lt;ref$&lt;str$&gt;,soul_lang_rust::soul_names::impl$0::new::closure_env$7&gt;,alloc::vec::Vec&lt;ref$&lt;str$&gt;,alloc::alloc::Global&gt; &gt;(ref_mut$&lt;slice2$&lt;ref$&lt;str$&gt; &gt; &gt;, alloc::slice::impl$0::sort_by::closure_env$0&lt;ref$ (1 samples, 2.56%)</title><rect x="82.0513%" y="533" width="2.5641%" height="15" fill="rgb(217,162,53)" fg:x="32" fg:w="1"/><text x="82.3013%" y="543.50">so..</text></g><g><title>soul_lang_rust.exe`core::slice::sort::stable::drift::sort&lt;ref$&lt;str$&gt;,alloc::slice::impl$0::sort_by::closure_env$0&lt;ref$&lt;str$&gt;,soul_lang_rust::soul_names::impl$0::new::closure_env$7&gt; &gt;(ref_mut$&lt;slice2$&lt;ref$&lt;str$&gt; &gt; &gt;, ref_mut$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit&lt;ref$&lt;str$&gt; &gt; &gt; &gt;, bool, alloc::slice::impl$0::sort_by::closure_env$0&lt;ref$ (1 samples, 2.56%)</title><rect x="82.0513%" y="517" width="2.5641%" height="15" fill="rgb(229,93,14)" fg:x="32" fg:w="1"/><text x="82.3013%" y="527.50">so..</text></g><g><title>soul_lang_rust.exe`core::slice::sort::stable::drift::create_run(ref_mut$&lt;slice2$&lt;ref$&lt;str$&gt; &gt; &gt;, ref_mut$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit&lt;ref$&lt;str$&gt; &gt; &gt; &gt;, unsigned long long, bool, alloc::slice::impl$0::sort_by::closure_env$0&lt;ref$ (1 samples, 2.56%)</title><rect x="82.0513%" y="501" width="2.5641%" height="15" fill="rgb(209,67,49)" fg:x="32" fg:w="1"/><text x="82.3013%" y="511.50">so..</text></g><g><title>soul_lang_rust.exe`core::slice::sort::shared::find_existing_run(ref$&lt;slice2$&lt;ref$&lt;str$&gt; &gt; &gt;, alloc::slice::impl$0::sort_by::closure_env$0&lt;ref$ (1 samples, 2.56%)</title><rect x="82.0513%" y="485" width="2.5641%" height="15" fill="rgb(213,87,29)" fg:x="32" fg:w="1"/><text x="82.3013%" y="495.50">so..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;enum2$ (1 samples, 2.56%)</title><rect x="87.1795%" y="565" width="2.5641%" height="15" fill="rgb(205,151,52)" fg:x="34" fg:w="1"/><text x="87.4295%" y="575.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;enum2$ (1 samples, 2.56%)</title><rect x="87.1795%" y="549" width="2.5641%" height="15" fill="rgb(253,215,39)" fg:x="34" fg:w="1"/><text x="87.4295%" y="559.50">so..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$&lt;enum2$ (1 samples, 2.56%)</title><rect x="87.1795%" y="533" width="2.5641%" height="15" fill="rgb(221,220,41)" fg:x="34" fg:w="1"/><text x="87.4295%" y="543.50">so..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place&lt;enum2$&lt;regex_syntax::ast::Ast&gt; &gt;(enum2$ (1 samples, 2.56%)</title><rect x="87.1795%" y="517" width="2.5641%" height="15" fill="rgb(218,133,21)" fg:x="34" fg:w="1"/><text x="87.4295%" y="527.50">so..</text></g><g><title>soul_lang_rust.exe`regex_syntax::ast::impl$29::drop(enum2$ (1 samples, 2.56%)</title><rect x="87.1795%" y="501" width="2.5641%" height="15" fill="rgb(221,193,43)" fg:x="34" fg:w="1"/><text x="87.4295%" y="511.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::vec::Vec&lt;enum2$&lt;regex_syntax::ast::Ast&gt;,alloc::alloc::Global&gt;::pop (1 samples, 2.56%)</title><rect x="87.1795%" y="485" width="2.5641%" height="15" fill="rgb(240,128,52)" fg:x="34" fg:w="1"/><text x="87.4295%" y="495.50">so..</text></g><g><title>`0x7FFF0DE35363 (1 samples, 2.56%)</title><rect x="87.1795%" y="469" width="2.5641%" height="15" fill="rgb(253,114,12)" fg:x="34" fg:w="1"/><text x="87.4295%" y="479.50">`0..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;core::result::Result&lt;regex_syntax::hir::Hir,regex_syntax::hir::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;regex_syntax::hir::Hir,regex_syntax::hir::Error&gt; &gt;, regex_automata::meta::regex::impl$21::build_many::closure_env$1&lt;ref$ (1 samples, 2.56%)</title><rect x="89.7436%" y="565" width="2.5641%" height="15" fill="rgb(215,223,47)" fg:x="35" fg:w="1"/><text x="89.9936%" y="575.50">so..</text></g><g><title>soul_lang_rust.exe`regex_syntax::hir::translate::Translator::translate(ref$&lt;str$&gt;, enum2$ (1 samples, 2.56%)</title><rect x="89.7436%" y="549" width="2.5641%" height="15" fill="rgb(248,225,23)" fg:x="35" fg:w="1"/><text x="89.9936%" y="559.50">so..</text></g><g><title>soul_lang_rust.exe`regex_syntax::ast::visitor::visit&lt;regex_syntax::hir::translate::TranslatorI&gt;(enum2$ (1 samples, 2.56%)</title><rect x="89.7436%" y="533" width="2.5641%" height="15" fill="rgb(250,108,0)" fg:x="35" fg:w="1"/><text x="89.9936%" y="543.50">so..</text></g><g><title>soul_lang_rust.exe`regex_syntax::ast::visitor::HeapVisitor::visit(enum2$ (1 samples, 2.56%)</title><rect x="89.7436%" y="517" width="2.5641%" height="15" fill="rgb(228,208,7)" fg:x="35" fg:w="1"/><text x="89.9936%" y="527.50">so..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 2.56%)</title><rect x="89.7436%" y="501" width="2.5641%" height="15" fill="rgb(244,45,10)" fg:x="35" fg:w="1"/><text x="89.9936%" y="511.50">so..</text></g><g><title>soul_lang_rust.exe`regex_syntax::hir::translate::impl$4::visit_post(regex_syntax::hir::translate::TranslatorI*, enum2$ (1 samples, 2.56%)</title><rect x="89.7436%" y="485" width="2.5641%" height="15" fill="rgb(207,125,25)" fg:x="35" fg:w="1"/><text x="89.9936%" y="495.50">so..</text></g><g><title>soul_lang_rust.exe`regex_syntax::hir::Hir::alternation(alloc::vec::Vec (1 samples, 2.56%)</title><rect x="89.7436%" y="469" width="2.5641%" height="15" fill="rgb(210,195,18)" fg:x="35" fg:w="1"/><text x="89.9936%" y="479.50">so..</text></g><g><title>soul_lang_rust.exe`regex_syntax::hir::class_chars(ref$&lt;slice2$ (1 samples, 2.56%)</title><rect x="89.7436%" y="453" width="2.5641%" height="15" fill="rgb(249,80,12)" fg:x="35" fg:w="1"/><text x="89.9936%" y="463.50">so..</text></g><g><title>soul_lang_rust.exe`regex_syntax::hir::ClassUnicode::new(alloc::vec::Vec (1 samples, 2.56%)</title><rect x="89.7436%" y="437" width="2.5641%" height="15" fill="rgb(221,65,9)" fg:x="35" fg:w="1"/><text x="89.9936%" y="447.50">so..</text></g><g><title>soul_lang_rust.exe`regex_syntax::hir::interval::IntervalSet&lt;regex_syntax::hir::ClassUnicodeRange&gt;::new(alloc::vec::Vec (1 samples, 2.56%)</title><rect x="89.7436%" y="421" width="2.5641%" height="15" fill="rgb(235,49,36)" fg:x="35" fg:w="1"/><text x="89.9936%" y="431.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::vec::Vec&lt;regex_syntax::hir::ClassUnicodeRange,alloc::alloc::Global&gt;::is_empty (1 samples, 2.56%)</title><rect x="89.7436%" y="405" width="2.5641%" height="15" fill="rgb(225,32,20)" fg:x="35" fg:w="1"/><text x="89.9936%" y="415.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::vec::Vec&lt;regex_syntax::hir::ClassUnicodeRange,alloc::alloc::Global&gt;::len (1 samples, 2.56%)</title><rect x="89.7436%" y="389" width="2.5641%" height="15" fill="rgb(215,141,46)" fg:x="35" fg:w="1"/><text x="89.9936%" y="399.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::vec::spec_from_iter::impl$1::from_iter&lt;regex_syntax::hir::ClassUnicodeRange&gt;(alloc::vec::into_iter::IntoIter (1 samples, 2.56%)</title><rect x="89.7436%" y="373" width="2.5641%" height="15" fill="rgb(250,160,47)" fg:x="35" fg:w="1"/><text x="89.9936%" y="383.50">so..</text></g><g><title>soul_lang_rust.exe`aho_corasick::nfa::noncontiguous::Compiler::shuffle (1 samples, 2.56%)</title><rect x="92.3077%" y="405" width="2.5641%" height="15" fill="rgb(216,222,40)" fg:x="36" fg:w="1"/><text x="92.5577%" y="415.50">so..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;regex_automata::util::prefilter::Choice&gt;::new&lt;regex_syntax::hir::literal::Literal&gt;(regex_automata::util::search::MatchKind, ref$&lt;slice2$ (2 samples, 5.13%)</title><rect x="92.3077%" y="501" width="5.1282%" height="15" fill="rgb(234,217,39)" fg:x="36" fg:w="2"/><text x="92.5577%" y="511.50">soul_l..</text></g><g><title>soul_lang_rust.exe`regex_automata::util::prefilter::aho_corasick::AhoCorasick::new&lt;regex_syntax::hir::literal::Literal&gt;(regex_automata::util::search::MatchKind, ref$&lt;slice2$ (2 samples, 5.13%)</title><rect x="92.3077%" y="485" width="5.1282%" height="15" fill="rgb(207,178,40)" fg:x="36" fg:w="2"/><text x="92.5577%" y="495.50">soul_l..</text></g><g><title>soul_lang_rust.exe`aho_corasick::ahocorasick::AhoCorasickBuilder::build&lt;ref$&lt;slice2$&lt;regex_syntax::hir::literal::Literal&gt; &gt;,ref$&lt;regex_syntax::hir::literal::Literal&gt; &gt;(ref$&lt;slice2$ (2 samples, 5.13%)</title><rect x="92.3077%" y="469" width="5.1282%" height="15" fill="rgb(221,136,13)" fg:x="36" fg:w="2"/><text x="92.5577%" y="479.50">soul_l..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (2 samples, 5.13%)</title><rect x="92.3077%" y="453" width="5.1282%" height="15" fill="rgb(249,199,10)" fg:x="36" fg:w="2"/><text x="92.5577%" y="463.50">soul_l..</text></g><g><title>soul_lang_rust.exe`aho_corasick::nfa::noncontiguous::Builder::build&lt;ref$&lt;slice2$&lt;regex_syntax::hir::literal::Literal&gt; &gt;,ref$&lt;regex_syntax::hir::literal::Literal&gt; &gt;(ref$&lt;slice2$ (2 samples, 5.13%)</title><rect x="92.3077%" y="437" width="5.1282%" height="15" fill="rgb(249,222,13)" fg:x="36" fg:w="2"/><text x="92.5577%" y="447.50">soul_l..</text></g><g><title>soul_lang_rust.exe`aho_corasick::nfa::noncontiguous::Compiler::compile(aho_corasick::nfa::noncontiguous::Compiler, ref$&lt;slice2$ (2 samples, 5.13%)</title><rect x="92.3077%" y="421" width="5.1282%" height="15" fill="rgb(244,185,38)" fg:x="36" fg:w="2"/><text x="92.5577%" y="431.50">soul_l..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 2.56%)</title><rect x="94.8718%" y="405" width="2.5641%" height="15" fill="rgb(236,202,9)" fg:x="37" fg:w="1"/><text x="95.1218%" y="415.50">so..</text></g><g><title>soul_lang_rust.exe`aho_corasick::nfa::noncontiguous::Compiler::init_unanchored_start_state (1 samples, 2.56%)</title><rect x="94.8718%" y="389" width="2.5641%" height="15" fill="rgb(250,229,37)" fg:x="37" fg:w="1"/><text x="95.1218%" y="399.50">so..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 2.56%)</title><rect x="94.8718%" y="373" width="2.5641%" height="15" fill="rgb(206,174,23)" fg:x="37" fg:w="1"/><text x="95.1218%" y="383.50">so..</text></g><g><title>soul_lang_rust.exe`aho_corasick::nfa::noncontiguous::NFA::init_full_state (1 samples, 2.56%)</title><rect x="94.8718%" y="357" width="2.5641%" height="15" fill="rgb(211,33,43)" fg:x="37" fg:w="1"/><text x="95.1218%" y="367.50">so..</text></g><g><title>soul_lang_rust.exe`aho_corasick::nfa::noncontiguous::NFA::alloc_transition (1 samples, 2.56%)</title><rect x="94.8718%" y="341" width="2.5641%" height="15" fill="rgb(245,58,50)" fg:x="37" fg:w="1"/><text x="95.1218%" y="351.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::vec::Vec&lt;aho_corasick::nfa::noncontiguous::Transition,alloc::alloc::Global&gt;::push (1 samples, 2.56%)</title><rect x="94.8718%" y="325" width="2.5641%" height="15" fill="rgb(244,68,36)" fg:x="37" fg:w="1"/><text x="95.1218%" y="335.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::vec::Vec&lt;aho_corasick::nfa::noncontiguous::Transition,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 2.56%)</title><rect x="94.8718%" y="309" width="2.5641%" height="15" fill="rgb(232,229,15)" fg:x="37" fg:w="1"/><text x="95.1218%" y="319.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVec&lt;aho_corasick::nfa::noncontiguous::Transition,alloc::alloc::Global&gt;::ptr (1 samples, 2.56%)</title><rect x="94.8718%" y="293" width="2.5641%" height="15" fill="rgb(254,30,23)" fg:x="37" fg:w="1"/><text x="95.1218%" y="303.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 2.56%)</title><rect x="94.8718%" y="277" width="2.5641%" height="15" fill="rgb(235,160,14)" fg:x="37" fg:w="1"/><text x="95.1218%" y="287.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 2.56%)</title><rect x="94.8718%" y="261" width="2.5641%" height="15" fill="rgb(212,155,44)" fg:x="37" fg:w="1"/><text x="95.1218%" y="271.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVec&lt;aho_corasick::nfa::noncontiguous::Transition,alloc::alloc::Global&gt;::grow_one&lt;aho_corasick::nfa::noncontiguous::Transition,alloc::alloc::Global&gt; (1 samples, 2.56%)</title><rect x="94.8718%" y="245" width="2.5641%" height="15" fill="rgb(226,2,50)" fg:x="37" fg:w="1"/><text x="95.1218%" y="255.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 2.56%)</title><rect x="94.8718%" y="229" width="2.5641%" height="15" fill="rgb(234,177,6)" fg:x="37" fg:w="1"/><text x="95.1218%" y="239.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 2.56%)</title><rect x="94.8718%" y="213" width="2.5641%" height="15" fill="rgb(217,24,9)" fg:x="37" fg:w="1"/><text x="95.1218%" y="223.50">so..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 2.56%)</title><rect x="94.8718%" y="197" width="2.5641%" height="15" fill="rgb(220,13,46)" fg:x="37" fg:w="1"/><text x="95.1218%" y="207.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 2.56%)</title><rect x="94.8718%" y="181" width="2.5641%" height="15" fill="rgb(239,221,27)" fg:x="37" fg:w="1"/><text x="95.1218%" y="191.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 2.56%)</title><rect x="94.8718%" y="165" width="2.5641%" height="15" fill="rgb(222,198,25)" fg:x="37" fg:w="1"/><text x="95.1218%" y="175.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 2.56%)</title><rect x="94.8718%" y="149" width="2.5641%" height="15" fill="rgb(211,99,13)" fg:x="37" fg:w="1"/><text x="95.1218%" y="159.50">so..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 2.56%)</title><rect x="94.8718%" y="133" width="2.5641%" height="15" fill="rgb(232,111,31)" fg:x="37" fg:w="1"/><text x="95.1218%" y="143.50">so..</text></g><g><title>`0x7FFF0DDE8F8D (1 samples, 2.56%)</title><rect x="94.8718%" y="117" width="2.5641%" height="15" fill="rgb(245,82,37)" fg:x="37" fg:w="1"/><text x="95.1218%" y="127.50">`0..</text></g><g><title>`0x7FFF0DDE9235 (1 samples, 2.56%)</title><rect x="94.8718%" y="101" width="2.5641%" height="15" fill="rgb(227,149,46)" fg:x="37" fg:w="1"/><text x="95.1218%" y="111.50">`0..</text></g><g><title>`0x7FFF0DDEA07D (1 samples, 2.56%)</title><rect x="94.8718%" y="85" width="2.5641%" height="15" fill="rgb(218,36,50)" fg:x="37" fg:w="1"/><text x="95.1218%" y="95.50">`0..</text></g><g><title>`0x7FFF0DDAF164 (1 samples, 2.56%)</title><rect x="94.8718%" y="69" width="2.5641%" height="15" fill="rgb(226,80,48)" fg:x="37" fg:w="1"/><text x="95.1218%" y="79.50">`0..</text></g><g><title>`0x7FFF0DDAF591 (1 samples, 2.56%)</title><rect x="94.8718%" y="53" width="2.5641%" height="15" fill="rgb(238,224,15)" fg:x="37" fg:w="1"/><text x="95.1218%" y="63.50">`0..</text></g><g><title>`0x7FFF0DDE5F0D (1 samples, 2.56%)</title><rect x="94.8718%" y="37" width="2.5641%" height="15" fill="rgb(241,136,10)" fg:x="37" fg:w="1"/><text x="95.1218%" y="47.50">`0..</text></g><g><title>all (39 samples, 100%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(208,32,45)" fg:x="0" fg:w="39"/><text x="0.2500%" y="1055.50"></text></g><g><title>`0x7FFF0DDDC34C (21 samples, 53.85%)</title><rect x="46.1538%" y="1029" width="53.8462%" height="15" fill="rgb(207,135,9)" fg:x="18" fg:w="21"/><text x="46.4038%" y="1039.50">`0x7FFF0DDDC34C</text></g><g><title>`0x7FFF0C5BE8D7 (21 samples, 53.85%)</title><rect x="46.1538%" y="1013" width="53.8462%" height="15" fill="rgb(206,86,44)" fg:x="18" fg:w="21"/><text x="46.4038%" y="1023.50">`0x7FFF0C5BE8D7</text></g><g><title>soul_lang_rust.exe`__scrt_common_main_seh() (16 samples, 41.03%)</title><rect x="58.9744%" y="997" width="41.0256%" height="15" fill="rgb(245,177,15)" fg:x="23" fg:w="16"/><text x="59.2244%" y="1007.50">soul_lang_rust.exe`__scrt_common_main_seh()</text></g><g><title>soul_lang_rust.exe`invoke_main() (12 samples, 30.77%)</title><rect x="69.2308%" y="981" width="30.7692%" height="15" fill="rgb(206,64,50)" fg:x="27" fg:w="12"/><text x="69.4808%" y="991.50">soul_lang_rust.exe`invoke_main()</text></g><g><title>soul_lang_rust.exe`main (12 samples, 30.77%)</title><rect x="69.2308%" y="965" width="30.7692%" height="15" fill="rgb(234,36,40)" fg:x="27" fg:w="12"/><text x="69.4808%" y="975.50">soul_lang_rust.exe`main</text></g><g><title>soul_lang_rust.exe`std::rt::lang_start_internal (12 samples, 30.77%)</title><rect x="69.2308%" y="949" width="30.7692%" height="15" fill="rgb(213,64,8)" fg:x="27" fg:w="12"/><text x="69.4808%" y="959.50">soul_lang_rust.exe`std::rt::lang_start_internal</text></g><g><title>soul_lang_rust.exe`std::panic::catch_unwind (12 samples, 30.77%)</title><rect x="69.2308%" y="933" width="30.7692%" height="15" fill="rgb(210,75,36)" fg:x="27" fg:w="12"/><text x="69.4808%" y="943.50">soul_lang_rust.exe`std::panic::catch_unwind</text></g><g><title>soul_lang_rust.exe`std::panicking::try (12 samples, 30.77%)</title><rect x="69.2308%" y="917" width="30.7692%" height="15" fill="rgb(229,88,21)" fg:x="27" fg:w="12"/><text x="69.4808%" y="927.50">soul_lang_rust.exe`std::panicking::try</text></g><g><title>soul_lang_rust.exe`std::panicking::try::do_call (12 samples, 30.77%)</title><rect x="69.2308%" y="901" width="30.7692%" height="15" fill="rgb(252,204,47)" fg:x="27" fg:w="12"/><text x="69.4808%" y="911.50">soul_lang_rust.exe`std::panicking::try::do_call</text></g><g><title>soul_lang_rust.exe`std::rt::lang_start_internal::closure$1 (11 samples, 28.21%)</title><rect x="71.7949%" y="885" width="28.2051%" height="15" fill="rgb(208,77,27)" fg:x="28" fg:w="11"/><text x="72.0449%" y="895.50">soul_lang_rust.exe`std::rt::lang_start_intern..</text></g><g><title>soul_lang_rust.exe`std::panic::catch_unwind (11 samples, 28.21%)</title><rect x="71.7949%" y="869" width="28.2051%" height="15" fill="rgb(221,76,26)" fg:x="28" fg:w="11"/><text x="72.0449%" y="879.50">soul_lang_rust.exe`std::panic::catch_unwind</text></g><g><title>soul_lang_rust.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (11 samples, 28.21%)</title><rect x="71.7949%" y="853" width="28.2051%" height="15" fill="rgb(225,139,18)" fg:x="28" fg:w="11"/><text x="72.0449%" y="863.50">soul_lang_rust.exe`std::rt::lang_start::closu..</text></g><g><title>soul_lang_rust.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (11 samples, 28.21%)</title><rect x="71.7949%" y="837" width="28.2051%" height="15" fill="rgb(230,137,11)" fg:x="28" fg:w="11"/><text x="72.0449%" y="847.50">soul_lang_rust.exe`std::sys::backtrace::__rus..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::main (11 samples, 28.21%)</title><rect x="71.7949%" y="821" width="28.2051%" height="15" fill="rgb(212,28,1)" fg:x="28" fg:w="11"/><text x="72.0449%" y="831.50">soul_lang_rust.exe`soul_lang_rust::main</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::compiler (11 samples, 28.21%)</title><rect x="71.7949%" y="805" width="28.2051%" height="15" fill="rgb(248,164,17)" fg:x="28" fg:w="11"/><text x="72.0449%" y="815.50">soul_lang_rust.exe`soul_lang_rust::compiler</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::tokenizer (6 samples, 15.38%)</title><rect x="84.6154%" y="789" width="15.3846%" height="15" fill="rgb(222,171,42)" fg:x="33" fg:w="6"/><text x="84.8654%" y="799.50">soul_lang_rust.exe`soul_..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::steps::tokenizer::tokenizer::tokenize (6 samples, 15.38%)</title><rect x="84.6154%" y="773" width="15.3846%" height="15" fill="rgb(243,84,45)" fg:x="33" fg:w="6"/><text x="84.8654%" y="783.50">soul_lang_rust.exe`soul_..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::steps::tokenizer::tokenizer::get_tokens(soul_lang_rust::steps::step_interfaces::i_source_reader::FileLine, alloc::vec::Vec (6 samples, 15.38%)</title><rect x="84.6154%" y="757" width="15.3846%" height="15" fill="rgb(252,49,23)" fg:x="33" fg:w="6"/><text x="84.8654%" y="767.50">soul_lang_rust.exe`soul_..</text></g><g><title>soul_lang_rust.exe`soul_lang_rust::utils::split_on::impl$1::split_on(alloc::string::String*, ref$&lt;slice2$&lt;ref$ (6 samples, 15.38%)</title><rect x="84.6154%" y="741" width="15.3846%" height="15" fill="rgb(215,19,7)" fg:x="33" fg:w="6"/><text x="84.8654%" y="751.50">soul_lang_rust.exe`soul_..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;core::result::Result&lt;regex::regex::string::Regex,enum2$&lt;regex::error::Error&gt; &gt; &gt;::unwrap(enum2$&lt;core::result::Result&lt;regex::regex::string::Regex,enum2$ (6 samples, 15.38%)</title><rect x="84.6154%" y="725" width="15.3846%" height="15" fill="rgb(238,81,41)" fg:x="33" fg:w="6"/><text x="84.8654%" y="735.50">soul_lang_rust.exe`enum2..</text></g><g><title>soul_lang_rust.exe`regex::regex::string::Regex::new(ref$ (6 samples, 15.38%)</title><rect x="84.6154%" y="709" width="15.3846%" height="15" fill="rgb(210,199,37)" fg:x="33" fg:w="6"/><text x="84.8654%" y="719.50">soul_lang_rust.exe`regex..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place (6 samples, 15.38%)</title><rect x="84.6154%" y="693" width="15.3846%" height="15" fill="rgb(244,192,49)" fg:x="33" fg:w="6"/><text x="84.8654%" y="703.50">soul_lang_rust.exe`core:..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place (6 samples, 15.38%)</title><rect x="84.6154%" y="677" width="15.3846%" height="15" fill="rgb(226,211,11)" fg:x="33" fg:w="6"/><text x="84.8654%" y="687.50">soul_lang_rust.exe`core:..</text></g><g><title>soul_lang_rust.exe`core::ptr::drop_in_place(alloc::vec::Vec (6 samples, 15.38%)</title><rect x="84.6154%" y="661" width="15.3846%" height="15" fill="rgb(236,162,54)" fg:x="33" fg:w="6"/><text x="84.8654%" y="671.50">soul_lang_rust.exe`core:..</text></g><g><title>soul_lang_rust.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (6 samples, 15.38%)</title><rect x="84.6154%" y="645" width="15.3846%" height="15" fill="rgb(220,229,9)" fg:x="33" fg:w="6"/><text x="84.8654%" y="655.50">soul_lang_rust.exe`alloc..</text></g><g><title>soul_lang_rust.exe`regex::builders::string::RegexBuilder::build (6 samples, 15.38%)</title><rect x="84.6154%" y="629" width="15.3846%" height="15" fill="rgb(250,87,22)" fg:x="33" fg:w="6"/><text x="84.8654%" y="639.50">soul_lang_rust.exe`regex..</text></g><g><title>soul_lang_rust.exe`regex::builders::Builder::build_one_string (6 samples, 15.38%)</title><rect x="84.6154%" y="613" width="15.3846%" height="15" fill="rgb(239,43,17)" fg:x="33" fg:w="6"/><text x="84.8654%" y="623.50">soul_lang_rust.exe`regex..</text></g><g><title>soul_lang_rust.exe`regex_automata::meta::regex::Builder::build(ref$ (6 samples, 15.38%)</title><rect x="84.6154%" y="597" width="15.3846%" height="15" fill="rgb(231,177,25)" fg:x="33" fg:w="6"/><text x="84.8654%" y="607.50">soul_lang_rust.exe`regex..</text></g><g><title>soul_lang_rust.exe`regex_automata::meta::regex::Builder::build_many(ref$&lt;slice2$&lt;ref$ (5 samples, 12.82%)</title><rect x="87.1795%" y="581" width="12.8205%" height="15" fill="rgb(219,179,1)" fg:x="34" fg:w="5"/><text x="87.4295%" y="591.50">soul_lang_rust.exe`..</text></g><g><title>soul_lang_rust.exe`regex_automata::meta::regex::Builder::build_many_from_hir(ref$&lt;slice2$ (3 samples, 7.69%)</title><rect x="92.3077%" y="565" width="7.6923%" height="15" fill="rgb(238,219,53)" fg:x="36" fg:w="3"/><text x="92.5577%" y="575.50">soul_lang_r..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;dyn$ (3 samples, 7.69%)</title><rect x="92.3077%" y="549" width="7.6923%" height="15" fill="rgb(232,167,36)" fg:x="36" fg:w="3"/><text x="92.5577%" y="559.50">soul_lang_r..</text></g><g><title>soul_lang_rust.exe`regex_automata::meta::strategy::new(regex_automata::meta::regex::RegexInfo*, ref$&lt;slice2$&lt;ref$ (3 samples, 7.69%)</title><rect x="92.3077%" y="533" width="7.6923%" height="15" fill="rgb(244,19,51)" fg:x="36" fg:w="3"/><text x="92.5577%" y="543.50">soul_lang_r..</text></g><g><title>soul_lang_rust.exe`regex_automata::meta::strategy::Pre&lt;tuple$&lt;&gt; &gt;::from_prefixes (3 samples, 7.69%)</title><rect x="92.3077%" y="517" width="7.6923%" height="15" fill="rgb(224,6,22)" fg:x="36" fg:w="3"/><text x="92.5577%" y="527.50">soul_lang_r..</text></g><g><title>soul_lang_rust.exe`regex_syntax::hir::literal::Seq::is_exact (1 samples, 2.56%)</title><rect x="97.4359%" y="501" width="2.5641%" height="15" fill="rgb(224,145,5)" fg:x="38" fg:w="1"/><text x="97.6859%" y="511.50">so..</text></g><g><title>soul_lang_rust.exe`regex_syntax::hir::literal::Seq::literals (1 samples, 2.56%)</title><rect x="97.4359%" y="485" width="2.5641%" height="15" fill="rgb(234,130,49)" fg:x="38" fg:w="1"/><text x="97.6859%" y="495.50">so..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;core::option::Option&lt;alloc::vec::Vec&lt;regex_syntax::hir::literal::Literal,alloc::alloc::Global&gt; &gt; &gt;::as_deref (1 samples, 2.56%)</title><rect x="97.4359%" y="469" width="2.5641%" height="15" fill="rgb(254,6,2)" fg:x="38" fg:w="1"/><text x="97.6859%" y="479.50">so..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;core::option::Option&lt;alloc::vec::Vec&lt;regex_syntax::hir::literal::Literal,alloc::alloc::Global&gt; &gt; &gt;::as_ref (1 samples, 2.56%)</title><rect x="97.4359%" y="453" width="2.5641%" height="15" fill="rgb(208,96,46)" fg:x="38" fg:w="1"/><text x="97.6859%" y="463.50">so..</text></g><g><title>soul_lang_rust.exe`regex_automata::util::prefilter::prefixes&lt;ref$&lt;regex_syntax::hir::Hir&gt; &gt;(regex_automata::util::search::MatchKind, ref$&lt;slice2$&lt;ref$ (1 samples, 2.56%)</title><rect x="97.4359%" y="437" width="2.5641%" height="15" fill="rgb(239,3,39)" fg:x="38" fg:w="1"/><text x="97.6859%" y="447.50">so..</text></g><g><title>soul_lang_rust.exe`regex_syntax::hir::literal::Seq::optimize_for_prefix_by_preference (1 samples, 2.56%)</title><rect x="97.4359%" y="421" width="2.5641%" height="15" fill="rgb(233,210,1)" fg:x="38" fg:w="1"/><text x="97.6859%" y="431.50">so..</text></g><g><title>soul_lang_rust.exe`regex_syntax::hir::literal::Seq::optimize_by_preference (1 samples, 2.56%)</title><rect x="97.4359%" y="405" width="2.5641%" height="15" fill="rgb(244,137,37)" fg:x="38" fg:w="1"/><text x="97.6859%" y="415.50">so..</text></g><g><title>soul_lang_rust.exe`regex_syntax::hir::literal::Seq::len (1 samples, 2.56%)</title><rect x="97.4359%" y="389" width="2.5641%" height="15" fill="rgb(240,136,2)" fg:x="38" fg:w="1"/><text x="97.6859%" y="399.50">so..</text></g><g><title>soul_lang_rust.exe`enum2$&lt;core::option::Option&lt;alloc::vec::Vec&lt;regex_syntax::hir::literal::Literal,alloc::alloc::Global&gt; &gt; &gt;::as_ref (1 samples, 2.56%)</title><rect x="97.4359%" y="373" width="2.5641%" height="15" fill="rgb(239,18,37)" fg:x="38" fg:w="1"/><text x="97.6859%" y="383.50">so..</text></g><g><title>soul_lang_rust.exe`regex_syntax::hir::literal::PreferenceTrie::minimize(alloc::vec::Vec (1 samples, 2.56%)</title><rect x="97.4359%" y="357" width="2.5641%" height="15" fill="rgb(218,185,22)" fg:x="38" fg:w="1"/><text x="97.6859%" y="367.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::vec::Vec&lt;regex_syntax::hir::literal::Literal,alloc::alloc::Global&gt;::retain_mut&lt;regex_syntax::hir::literal::Literal,alloc::alloc::Global,regex_syntax::hir::literal::impl$12::minimize::closure_env$0&gt; (1 samples, 2.56%)</title><rect x="97.4359%" y="341" width="2.5641%" height="15" fill="rgb(225,218,4)" fg:x="38" fg:w="1"/><text x="97.6859%" y="351.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::vec::impl$1::retain_mut::process_loop(unsigned long long, regex_syntax::hir::literal::impl$12::minimize::closure_env$0*, alloc::vec::impl$1::retain_mut::BackshiftOnDrop (1 samples, 2.56%)</title><rect x="97.4359%" y="325" width="2.5641%" height="15" fill="rgb(230,182,32)" fg:x="38" fg:w="1"/><text x="97.6859%" y="335.50">so..</text></g><g><title>soul_lang_rust.exe`regex_syntax::hir::literal::impl$12::minimize::closure$0 (1 samples, 2.56%)</title><rect x="97.4359%" y="309" width="2.5641%" height="15" fill="rgb(242,56,43)" fg:x="38" fg:w="1"/><text x="97.6859%" y="319.50">so..</text></g><g><title>soul_lang_rust.exe`regex_syntax::hir::literal::PreferenceTrie::insert(ref$&lt;slice2$ (1 samples, 2.56%)</title><rect x="97.4359%" y="293" width="2.5641%" height="15" fill="rgb(233,99,24)" fg:x="38" fg:w="1"/><text x="97.6859%" y="303.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::vec::Vec&lt;tuple$&lt;u8,usize&gt;,alloc::alloc::Global&gt;::insert(unsigned long long, tuple$ (1 samples, 2.56%)</title><rect x="97.4359%" y="277" width="2.5641%" height="15" fill="rgb(234,209,42)" fg:x="38" fg:w="1"/><text x="97.6859%" y="287.50">so..</text></g><g><title>soul_lang_rust.exe`core::ptr::mut_ptr::impl$0::add(tuple$ (1 samples, 2.56%)</title><rect x="97.4359%" y="261" width="2.5641%" height="15" fill="rgb(227,7,12)" fg:x="38" fg:w="1"/><text x="97.6859%" y="271.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVec&lt;soul_lang_rust::steps::source_reader::c_str::format_stringer::FormatSpan,alloc::alloc::Global&gt;::grow_one&lt;soul_lang_rust::steps::source_reader::c_str::format_stringer::FormatSpan,alloc::alloc::Global&gt; (1 samples, 2.56%)</title><rect x="97.4359%" y="245" width="2.5641%" height="15" fill="rgb(245,203,43)" fg:x="38" fg:w="1"/><text x="97.6859%" y="255.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 2.56%)</title><rect x="97.4359%" y="229" width="2.5641%" height="15" fill="rgb(238,205,33)" fg:x="38" fg:w="1"/><text x="97.6859%" y="239.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 2.56%)</title><rect x="97.4359%" y="213" width="2.5641%" height="15" fill="rgb(231,56,7)" fg:x="38" fg:w="1"/><text x="97.6859%" y="223.50">so..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 2.56%)</title><rect x="97.4359%" y="197" width="2.5641%" height="15" fill="rgb(244,186,29)" fg:x="38" fg:w="1"/><text x="97.6859%" y="207.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 2.56%)</title><rect x="97.4359%" y="181" width="2.5641%" height="15" fill="rgb(234,111,31)" fg:x="38" fg:w="1"/><text x="97.6859%" y="191.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 2.56%)</title><rect x="97.4359%" y="165" width="2.5641%" height="15" fill="rgb(241,149,10)" fg:x="38" fg:w="1"/><text x="97.6859%" y="175.50">so..</text></g><g><title>soul_lang_rust.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 2.56%)</title><rect x="97.4359%" y="149" width="2.5641%" height="15" fill="rgb(249,206,44)" fg:x="38" fg:w="1"/><text x="97.6859%" y="159.50">so..</text></g><g><title>soul_lang_rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 2.56%)</title><rect x="97.4359%" y="133" width="2.5641%" height="15" fill="rgb(251,153,30)" fg:x="38" fg:w="1"/><text x="97.6859%" y="143.50">so..</text></g><g><title>`0x7FFF0DDE8F8D (1 samples, 2.56%)</title><rect x="97.4359%" y="117" width="2.5641%" height="15" fill="rgb(239,152,38)" fg:x="38" fg:w="1"/><text x="97.6859%" y="127.50">`0..</text></g><g><title>`0x7FFF0DDE9235 (1 samples, 2.56%)</title><rect x="97.4359%" y="101" width="2.5641%" height="15" fill="rgb(249,139,47)" fg:x="38" fg:w="1"/><text x="97.6859%" y="111.50">`0..</text></g><g><title>`0x7FFF0DDE9AEA (1 samples, 2.56%)</title><rect x="97.4359%" y="85" width="2.5641%" height="15" fill="rgb(244,64,35)" fg:x="38" fg:w="1"/><text x="97.6859%" y="95.50">`0..</text></g><g><title>`0x7FFF0DDAF164 (1 samples, 2.56%)</title><rect x="97.4359%" y="69" width="2.5641%" height="15" fill="rgb(216,46,15)" fg:x="38" fg:w="1"/><text x="97.6859%" y="79.50">`0..</text></g><g><title>`0x7FFF0DDAF255 (1 samples, 2.56%)</title><rect x="97.4359%" y="53" width="2.5641%" height="15" fill="rgb(250,74,19)" fg:x="38" fg:w="1"/><text x="97.6859%" y="63.50">`0..</text></g></svg></svg>